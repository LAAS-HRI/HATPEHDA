RUN N=139 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = front 	ObsType.OBS 	loc=front
|| robot_init.at_human = front 	ObsType.OBS 	loc=front
|| robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
|| robot_init.washer = low 	ObsType.OBS 	loc=front
|| robot_init.oil = full 	ObsType.INF 	loc=front
|| robot_init.hood = open 	ObsType.OBS 	loc=front
|| robot_init.rear_light = old 	ObsType.INF 	loc=rear
|| robot_init.left_light = todo 	ObsType.INF 	loc=front
|| robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
|| human_init.at_robot = front
|| human_init.at_human = front
|| human_init.at_oil_bottle = front
|| human_init.washer = full
|| human_init.oil = low
|| human_init.hood = open
|| human_init.rear_light = new
|| human_init.left_light = todo
|| human_init.right_light = todo
|________________________________________________________________________
Start first exploration
SA: human assessed washer <- low
first node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
human- Refine agenda
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [3-HA-Handling_lights() - 4-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 3-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	3-HA-Handling_lights() => [5-HA-Replacing_rear_light() - 6-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [7-HA-Checking_front_lights(), 8-HA-Replacing_rear_light(), 4-HA-Closing_hood()]
	5-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[6-HA-Checking_front_lights(), 4-HA-Closing_hood()]
	6-HA-Checking_front_lights() => [9-HP-go_front_car()-0.0 - 10-HP-check_left_light()-0.0 - 11-HP-check_right_light()-0.0] : dec_checking_front_ligths
	9-HP-go_front_car()-0.0 => [9-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[10-HP-check_left_light()-0.0, 11-HP-check_right_light()-0.0, 4-HA-Closing_hood()]
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	7-HA-Checking_front_lights() => [12-HP-go_front_car()-0.0 - 13-HP-check_left_light()-0.0 - 14-HP-check_right_light()-0.0] : dec_checking_front_ligths
	12-HP-go_front_car()-0.0 => [12-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[13-HP-check_left_light()-0.0, 14-HP-check_right_light()-0.0, 8-HA-Replacing_rear_light(), 4-HA-Closing_hood()]
	end 1
human- Refine agenda with r_beliefs
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [15-HA-Handling_lights() - 16-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 15-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	15-HA-Handling_lights() => [17-HA-Replacing_rear_light() - 18-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [19-HA-Checking_front_lights(), 20-HA-Replacing_rear_light(), 16-HA-Closing_hood()]
	17-HA-Replacing_rear_light() => [21-HP-go_behind_car()-0.0 - 22-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	19-HA-Checking_front_lights() => [23-HP-go_front_car()-0.0 - 24-HP-check_left_light()-0.0 - 25-HP-check_right_light()-0.0] : dec_checking_front_ligths
	23-HP-go_front_car()-0.0 => [23-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[24-HP-check_left_light()-0.0, 25-HP-check_right_light()-0.0, 20-HA-Replacing_rear_light(), 16-HA-Closing_hood()]
	end 1
refinement:
[
	dec_handling_lights_start_replace: [10-HP-check_left_light()-0.0 - 11-HP-check_right_light()-0.0 - 4-HA-Closing_hood()]
	dec_handling_lights_start_checking: [13-HP-check_left_light()-0.0 - 14-HP-check_right_light()-0.0 - 8-HA-Replacing_rear_light() - 4-HA-Closing_hood()]
]
refinement_r:
[
	dec_handling_lights_start_replace: [21-HP-go_behind_car()-0.0 - 22-HP-replace_rear_light()-0.0 - 18-HA-Checking_front_lights() - 16-HA-Closing_hood()]
	dec_handling_lights_start_checking: [24-HP-check_left_light()-0.0 - 25-HP-check_right_light()-0.0 - 20-HA-Replacing_rear_light() - 16-HA-Closing_hood()]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [21-HP-go_behind_car()-0.0 - 22-HP-replace_rear_light()-0.0 - 18-HA-Checking_front_lights() - 16-HA-Closing_hood()]
	dec_handling_lights_start_checking: [24-HP-check_left_light()-0.0 - 25-HP-check_right_light()-0.0 - 20-HA-Replacing_rear_light() - 16-HA-Closing_hood()]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [10-HP-check_left_light()-0.0 - 11-HP-check_right_light()-0.0 - 4-HA-Closing_hood()]
	dec_handling_lights_start_checking: [13-HP-check_left_light()-0.0 - 14-HP-check_right_light()-0.0 - 8-HA-Replacing_rear_light() - 4-HA-Closing_hood()]
]
decomp  0
decomp_h.subtasks= [10-HP-check_left_light()-0.0, 11-HP-check_right_light()-0.0, 4-HA-Closing_hood()]
decomp_r.subtasks= [21-HP-go_behind_car()-0.0, 22-HP-replace_rear_light()-0.0, 18-HA-Checking_front_lights(), 16-HA-Closing_hood()]
Not same number of subtasks
NEED of belief alignment!

# UPDATE belief divergences
	oil:None: H=low R=full
	rear_light:None: H=new R=old

Testing with 1 relevant divergence
divergence tested = oil:None: H=low R=full
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : 
	1-HA-Car_maintenance() => [26-HA-Handling_lights() - 27-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 26-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	26-HA-Handling_lights() => [28-HA-Replacing_rear_light() - 29-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [30-HA-Checking_front_lights(), 31-HA-Replacing_rear_light(), 27-HA-Closing_hood()]
	28-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[29-HA-Checking_front_lights(), 27-HA-Closing_hood()]
	29-HA-Checking_front_lights() => [32-HP-go_front_car()-0.0 - 33-HP-check_left_light()-0.0 - 34-HP-check_right_light()-0.0] : dec_checking_front_ligths
	32-HP-go_front_car()-0.0 => [32-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[33-HP-check_left_light()-0.0, 34-HP-check_right_light()-0.0, 27-HA-Closing_hood()]
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	30-HA-Checking_front_lights() => [35-HP-go_front_car()-0.0 - 36-HP-check_left_light()-0.0 - 37-HP-check_right_light()-0.0] : dec_checking_front_ligths
	35-HP-go_front_car()-0.0 => [35-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[36-HP-check_left_light()-0.0, 37-HP-check_right_light()-0.0, 31-HA-Replacing_rear_light(), 27-HA-Closing_hood()]
	end 1
ref_aligned 1:
[
	dec_handling_lights_start_replace: [33-HP-check_left_light()-0.0 - 34-HP-check_right_light()-0.0 - 27-HA-Closing_hood()]
	dec_handling_lights_start_checking: [36-HP-check_left_light()-0.0 - 37-HP-check_right_light()-0.0 - 31-HA-Replacing_rear_light() - 27-HA-Closing_hood()]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [21-HP-go_behind_car()-0.0 - 22-HP-replace_rear_light()-0.0 - 18-HA-Checking_front_lights() - 16-HA-Closing_hood()]
	dec_handling_lights_start_checking: [24-HP-check_left_light()-0.0 - 25-HP-check_right_light()-0.0 - 20-HA-Replacing_rear_light() - 16-HA-Closing_hood()]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [33-HP-check_left_light()-0.0 - 34-HP-check_right_light()-0.0 - 27-HA-Closing_hood()]
	dec_handling_lights_start_checking: [36-HP-check_left_light()-0.0 - 37-HP-check_right_light()-0.0 - 31-HA-Replacing_rear_light() - 27-HA-Closing_hood()]
]
decomp  0
decomp_h.subtasks= [33-HP-check_left_light()-0.0, 34-HP-check_right_light()-0.0, 27-HA-Closing_hood()]
decomp_r.subtasks= [21-HP-go_behind_car()-0.0, 22-HP-replace_rear_light()-0.0, 18-HA-Checking_front_lights(), 16-HA-Closing_hood()]
Not same number of subtasks
	divergence isn't relevant
divergence tested = rear_light:None: H=new R=old
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : 
	1-HA-Car_maintenance() => [38-HA-Handling_lights() - 39-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 38-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	38-HA-Handling_lights() => [40-HA-Replacing_rear_light() - 41-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [42-HA-Checking_front_lights(), 43-HA-Replacing_rear_light(), 39-HA-Closing_hood()]
	40-HA-Replacing_rear_light() => [44-HP-go_behind_car()-0.0 - 45-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	42-HA-Checking_front_lights() => [46-HP-go_front_car()-0.0 - 47-HP-check_left_light()-0.0 - 48-HP-check_right_light()-0.0] : dec_checking_front_ligths
	46-HP-go_front_car()-0.0 => [46-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[47-HP-check_left_light()-0.0, 48-HP-check_right_light()-0.0, 43-HA-Replacing_rear_light(), 39-HA-Closing_hood()]
	end 1
ref_aligned 1:
[
	dec_handling_lights_start_replace: [44-HP-go_behind_car()-0.0 - 45-HP-replace_rear_light()-0.0 - 41-HA-Checking_front_lights() - 39-HA-Closing_hood()]
	dec_handling_lights_start_checking: [47-HP-check_left_light()-0.0 - 48-HP-check_right_light()-0.0 - 43-HA-Replacing_rear_light() - 39-HA-Closing_hood()]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [21-HP-go_behind_car()-0.0 - 22-HP-replace_rear_light()-0.0 - 18-HA-Checking_front_lights() - 16-HA-Closing_hood()]
	dec_handling_lights_start_checking: [24-HP-check_left_light()-0.0 - 25-HP-check_right_light()-0.0 - 20-HA-Replacing_rear_light() - 16-HA-Closing_hood()]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [44-HP-go_behind_car()-0.0 - 45-HP-replace_rear_light()-0.0 - 41-HA-Checking_front_lights() - 39-HA-Closing_hood()]
	dec_handling_lights_start_checking: [47-HP-check_left_light()-0.0 - 48-HP-check_right_light()-0.0 - 43-HA-Replacing_rear_light() - 39-HA-Closing_hood()]
]
decomp  0
decomp_h.subtasks= [44-HP-go_behind_car()-0.0, 45-HP-replace_rear_light()-0.0, 41-HA-Checking_front_lights(), 39-HA-Closing_hood()]
decomp_r.subtasks= [21-HP-go_behind_car()-0.0, 22-HP-replace_rear_light()-0.0, 18-HA-Checking_front_lights(), 16-HA-Closing_hood()]
len(decomp_h.subtasks)= 4
len(decomp_r.subtasks)= 4
i= 0
i= 0
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
same effects
decomp  1
decomp_h.subtasks= [47-HP-check_left_light()-0.0, 48-HP-check_right_light()-0.0, 43-HA-Replacing_rear_light(), 39-HA-Closing_hood()]
decomp_r.subtasks= [24-HP-check_left_light()-0.0, 25-HP-check_right_light()-0.0, 20-HA-Replacing_rear_light(), 16-HA-Closing_hood()]
len(decomp_h.subtasks)= 4
len(decomp_r.subtasks)= 4
i= 1
i= 1
i= 1
i= 1
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
same effects
no alignment needed
	divergence is relevant!
Relevant divergences to correct : 	rear_light:None: H=new R=old

COM: com action added = 49-RP-COM_ALIGN['rear_light-None-old']-3.0
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [50-HA-Handling_lights() - 51-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 50-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	50-HA-Handling_lights() => [52-HA-Replacing_rear_light() - 53-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [54-HA-Checking_front_lights(), 55-HA-Replacing_rear_light(), 51-HA-Closing_hood()]
	52-HA-Replacing_rear_light() => [56-HP-go_behind_car()-0.0 - 57-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	54-HA-Checking_front_lights() => [58-HP-go_front_car()-0.0 - 59-HP-check_left_light()-0.0 - 60-HP-check_right_light()-0.0] : dec_checking_front_ligths
	58-HP-go_front_car()-0.0 => [58-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[59-HP-check_left_light()-0.0, 60-HP-check_right_light()-0.0, 55-HA-Replacing_rear_light(), 51-HA-Closing_hood()]
	end 1
refinement = 
[
	dec_handling_lights_start_replace: [56-HP-go_behind_car()-0.0 - 57-HP-replace_rear_light()-0.0 - 53-HA-Checking_front_lights() - 51-HA-Closing_hood()]
	dec_handling_lights_start_checking: [59-HP-check_left_light()-0.0 - 60-HP-check_right_light()-0.0 - 55-HA-Replacing_rear_light() - 51-HA-Closing_hood()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 61-HP-go_behind_car()-1.0
	- 62-HP-check_left_light()-1.0

=> end explo
node explored = 3.0 Flag.F Type.H#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[#2 #3]
new_e_flagged_nodes : 
	4.0 Flag.E Type.I#2, (human go_behind_car ()) -1> (human go_behind_car ()) prev=#1 next=[]
	4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
e_flagged_nodes :
	4.0 Flag.E Type.I#2, (human go_behind_car ()) -1> (human go_behind_car ()) prev=#1 next=[]
	4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
Ns before check = None
Nf = None
Ns after check = None
e_flagged_nodes after check solution:
	4.0 Flag.E Type.I#2, (human go_behind_car ()) -1> (human go_behind_car ()) prev=#1 next=[]
	4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]

<@> picked node = 4.0 Flag.E Type.I#2, (human go_behind_car ()) -1> (human go_behind_car ()) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-57-HP-replace_rear_light()-0.0
||	-53-HA-Checking_front_lights()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : dec_handling_lights_start_replace
	0-RA-Car_maintenance() => [63-RP-go_front_car()-0.0 - 64-RP-refill_washer()-0.0 - 65-RP-refill_oil()-0.0 - 66-RP-store_oil()-0.0] : dec_car_maintenance_R
	63-RP-go_front_car()-0.0 => [63-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[64-RP-refill_washer()-0.0, 65-RP-refill_oil()-0.0, 66-RP-store_oil()-0.0]
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [64-RP-refill_washer()-0.0 - 65-RP-refill_oil()-0.0 - 66-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-57-HP-replace_rear_light()-0.0
||	-53-HA-Checking_front_lights()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 67-RP-refill_washer()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-65-RP-refill_oil()-0.0
||	-66-RP-store_oil()-0.0
| AGENDA human =
||	-57-HP-replace_rear_light()-0.0
||	-53-HA-Checking_front_lights()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
human- Refine agenda
Task to refine: 57-HP-replace_rear_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
human- Refine agenda with r_beliefs
Task to refine: 57-HP-replace_rear_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
refinement:
[
	dec_handling_lights_start_replace: [57-HP-replace_rear_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [57-HP-replace_rear_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [57-HP-replace_rear_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [57-HP-replace_rear_light()-0.0]
]
decomp  0
decomp_h.subtasks= [57-HP-replace_rear_light()-0.0]
decomp_r.subtasks= [57-HP-replace_rear_light()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-65-RP-refill_oil()-0.0
||	-66-RP-store_oil()-0.0
| AGENDA human =
||	-53-HA-Checking_front_lights()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [57-HP-replace_rear_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 68-HP-replace_rear_light()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-65-RP-refill_oil()-0.0
||	-66-RP-store_oil()-0.0
| AGENDA human =
||	-53-HA-Checking_front_lights()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
robot- Refine agenda
Task to refine: 65-RP-refill_oil()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	65-RP-refill_oil()-0.0 => [65-RP-refill_oil()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 66-RP-store_oil()-0.0
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [66-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-53-HA-Checking_front_lights()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 69-RP-store_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-53-HA-Checking_front_lights()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
human- Refine agenda
Task to refine: 53-HA-Checking_front_lights()
decomp i= 0 : dec_handling_lights_start_replace
	53-HA-Checking_front_lights() => [70-HP-go_front_car()-0.0 - 71-HP-check_left_light()-0.0 - 72-HP-check_right_light()-0.0] : dec_checking_front_ligths
	end 0
human- Refine agenda with r_beliefs
Task to refine: 53-HA-Checking_front_lights()
decomp i= 0 : dec_handling_lights_start_replace
	53-HA-Checking_front_lights() => [73-HP-go_front_car()-0.0 - 74-HP-check_left_light()-0.0 - 75-HP-check_right_light()-0.0] : dec_checking_front_ligths
	end 0
refinement:
[
	dec_handling_lights_start_replace: [70-HP-go_front_car()-0.0 - 71-HP-check_left_light()-0.0 - 72-HP-check_right_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [73-HP-go_front_car()-0.0 - 74-HP-check_left_light()-0.0 - 75-HP-check_right_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [73-HP-go_front_car()-0.0 - 74-HP-check_left_light()-0.0 - 75-HP-check_right_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [70-HP-go_front_car()-0.0 - 71-HP-check_left_light()-0.0 - 72-HP-check_right_light()-0.0]
]
decomp  0
decomp_h.subtasks= [70-HP-go_front_car()-0.0, 71-HP-check_left_light()-0.0, 72-HP-check_right_light()-0.0]
decomp_r.subtasks= [73-HP-go_front_car()-0.0, 74-HP-check_left_light()-0.0, 75-HP-check_right_light()-0.0]
len(decomp_h.subtasks)= 3
len(decomp_r.subtasks)= 3
i= 0
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [70-HP-go_front_car()-0.0 - 71-HP-check_left_light()-0.0 - 72-HP-check_right_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed washer <- full
applied refinement = 
next actions:
	- 76-HP-go_front_car()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-71-HP-check_left_light()-0.0
||	-72-HP-check_right_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_replace: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 77-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-71-HP-check_left_light()-0.0
||	-72-HP-check_right_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
human- Refine agenda
Task to refine: 71-HP-check_left_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
human- Refine agenda with r_beliefs
Task to refine: 71-HP-check_left_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
refinement:
[
	dec_handling_lights_start_replace: [71-HP-check_left_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [71-HP-check_left_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [71-HP-check_left_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [71-HP-check_left_light()-0.0]
]
decomp  0
decomp_h.subtasks= [71-HP-check_left_light()-0.0]
decomp_r.subtasks= [71-HP-check_left_light()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-72-HP-check_right_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [71-HP-check_left_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 78-HP-check_left_light()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-72-HP-check_right_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_replace: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 79-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-72-HP-check_right_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
human- Refine agenda
Task to refine: 72-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
human- Refine agenda with r_beliefs
Task to refine: 72-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
refinement:
[
	dec_handling_lights_start_replace: [72-HP-check_right_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [72-HP-check_right_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [72-HP-check_right_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [72-HP-check_right_light()-0.0]
]
decomp  0
decomp_h.subtasks= [72-HP-check_right_light()-0.0]
decomp_r.subtasks= [72-HP-check_right_light()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [72-HP-check_right_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 80-HP-check_right_light()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_replace: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 81-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 51-HA-Closing_hood()
decomp i= 0 : dec_handling_lights_start_replace
	51-HA-Closing_hood() => [82-HP-go_front_car()-0.0 - 83-HP-close_hood()-0.0] : dec_closing_hood
	82-HP-go_front_car()-0.0 => [82-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[83-HP-close_hood()-0.0]
	end 0
human- Refine agenda with r_beliefs
Task to refine: 51-HA-Closing_hood()
decomp i= 0 : dec_handling_lights_start_replace
	51-HA-Closing_hood() => [84-HP-go_front_car()-0.0 - 85-HP-close_hood()-0.0] : dec_closing_hood
	84-HP-go_front_car()-0.0 => [84-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[85-HP-close_hood()-0.0]
	end 0
refinement:
[
	dec_handling_lights_start_replace: [83-HP-close_hood()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [85-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [85-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [83-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [83-HP-close_hood()-0.0]
decomp_r.subtasks= [85-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
[93m83-HP-close_hood()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
NEED of belief alignment!

# UPDATE belief divergences
	at_oil_bottle:None: H=front R=cabinet
	oil:None: H=low R=full

Testing with 1 relevant divergence
divergence tested = at_oil_bottle:None: H=front R=cabinet
Task to refine: 51-HA-Closing_hood()
decomp i= 0 : 
	51-HA-Closing_hood() => [86-HP-go_front_car()-0.0 - 87-HP-close_hood()-0.0] : dec_closing_hood
	86-HP-go_front_car()-0.0 => [86-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[87-HP-close_hood()-0.0]
	end 0
ref_aligned 1:
[
	: [87-HP-close_hood()-0.0]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [85-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	: [87-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [87-HP-close_hood()-0.0]
decomp_r.subtasks= [85-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
[93m87-HP-close_hood()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
	divergence isn't relevant
divergence tested = oil:None: H=low R=full
Task to refine: 51-HA-Closing_hood()
decomp i= 0 : 
	51-HA-Closing_hood() => [88-HP-go_front_car()-0.0 - 89-HP-close_hood()-0.0] : dec_closing_hood
	88-HP-go_front_car()-0.0 => [88-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[89-HP-close_hood()-0.0]
	end 0
ref_aligned 1:
[
	: [89-HP-close_hood()-0.0]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [85-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	: [89-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [89-HP-close_hood()-0.0]
decomp_r.subtasks= [85-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
	divergence is relevant!
Relevant divergences to correct : 	oil:None: H=low R=full

COM: com action added = 90-RP-COM_ALIGN['oil-None-full']-3.0
Task to refine: 51-HA-Closing_hood()
decomp i= 0 : dec_handling_lights_start_replace
	51-HA-Closing_hood() => [91-HP-go_front_car()-0.0 - 92-HP-close_hood()-0.0] : dec_closing_hood
	91-HP-go_front_car()-0.0 => [91-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[92-HP-close_hood()-0.0]
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [92-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 93-HP-close_hood()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_replace: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 14.0 Flag.E Type.F#2, (human go_behind_car ()) -11> (human close_hood ()) prev=#1 next=[]
new_e_flagged_nodes : 
	14.0 Flag.E Type.F#2, (human go_behind_car ()) -11> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes :
	4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
	14.0 Flag.E Type.F#2, (human go_behind_car ()) -11> (human close_hood ()) prev=#1 next=[]
Ns before check = None
Nf = 14.0 Flag.E Type.F#2, (human go_behind_car ()) -11> (human close_hood ()) prev=#1 next=[]
new Ns!
Ns after check = 14.0 Flag.S Type.F#2, (human go_behind_car ()) -11> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]

<@> picked node = 4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-60-HP-check_right_light()-0.0
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : dec_handling_lights_start_checking
	0-RA-Car_maintenance() => [94-RP-go_front_car()-0.0 - 95-RP-refill_washer()-0.0 - 96-RP-refill_oil()-0.0 - 97-RP-store_oil()-0.0] : dec_car_maintenance_R
	94-RP-go_front_car()-0.0 => [94-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[95-RP-refill_washer()-0.0, 96-RP-refill_oil()-0.0, 97-RP-store_oil()-0.0]
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [95-RP-refill_washer()-0.0 - 96-RP-refill_oil()-0.0 - 97-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-60-HP-check_right_light()-0.0
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 98-RP-refill_washer()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-96-RP-refill_oil()-0.0
||	-97-RP-store_oil()-0.0
| AGENDA human =
||	-60-HP-check_right_light()-0.0
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
human- Refine agenda
Task to refine: 60-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
human- Refine agenda with r_beliefs
Task to refine: 60-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement:
[
	dec_handling_lights_start_checking: [60-HP-check_right_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [60-HP-check_right_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [60-HP-check_right_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [60-HP-check_right_light()-0.0]
]
decomp  0
decomp_h.subtasks= [60-HP-check_right_light()-0.0]
decomp_r.subtasks= [60-HP-check_right_light()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-96-RP-refill_oil()-0.0
||	-97-RP-store_oil()-0.0
| AGENDA human =
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [60-HP-check_right_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 99-HP-check_right_light()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-96-RP-refill_oil()-0.0
||	-97-RP-store_oil()-0.0
| AGENDA human =
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 96-RP-refill_oil()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	96-RP-refill_oil()-0.0 => [96-RP-refill_oil()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 97-RP-store_oil()-0.0
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [97-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 100-RP-store_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 55-HA-Replacing_rear_light()
decomp i= 0 : dec_handling_lights_start_checking
	55-HA-Replacing_rear_light() => [101-HP-go_behind_car()-0.0 - 102-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
human- Refine agenda with r_beliefs
Task to refine: 55-HA-Replacing_rear_light()
decomp i= 0 : dec_handling_lights_start_checking
	55-HA-Replacing_rear_light() => [103-HP-go_behind_car()-0.0 - 104-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
refinement:
[
	dec_handling_lights_start_checking: [101-HP-go_behind_car()-0.0 - 102-HP-replace_rear_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [103-HP-go_behind_car()-0.0 - 104-HP-replace_rear_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [103-HP-go_behind_car()-0.0 - 104-HP-replace_rear_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [101-HP-go_behind_car()-0.0 - 102-HP-replace_rear_light()-0.0]
]
decomp  0
decomp_h.subtasks= [101-HP-go_behind_car()-0.0, 102-HP-replace_rear_light()-0.0]
decomp_r.subtasks= [103-HP-go_behind_car()-0.0, 104-HP-replace_rear_light()-0.0]
len(decomp_h.subtasks)= 2
len(decomp_r.subtasks)= 2
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [101-HP-go_behind_car()-0.0 - 102-HP-replace_rear_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 105-HP-go_behind_car()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-102-HP-replace_rear_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_checking: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 106-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-102-HP-replace_rear_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 102-HP-replace_rear_light()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
human- Refine agenda with r_beliefs
Task to refine: 102-HP-replace_rear_light()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement:
[
	dec_handling_lights_start_checking: [102-HP-replace_rear_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [102-HP-replace_rear_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [102-HP-replace_rear_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [102-HP-replace_rear_light()-0.0]
]
decomp  0
decomp_h.subtasks= [102-HP-replace_rear_light()-0.0]
decomp_r.subtasks= [102-HP-replace_rear_light()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [102-HP-replace_rear_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 107-HP-replace_rear_light()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_checking: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 108-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 51-HA-Closing_hood()
decomp i= 0 : dec_handling_lights_start_checking
	51-HA-Closing_hood() => [109-HP-go_front_car()-0.0 - 110-HP-close_hood()-0.0] : dec_closing_hood
	end 0
human- Refine agenda with r_beliefs
Task to refine: 51-HA-Closing_hood()
decomp i= 0 : dec_handling_lights_start_checking
	51-HA-Closing_hood() => [111-HP-go_front_car()-0.0 - 112-HP-close_hood()-0.0] : dec_closing_hood
	end 0
refinement:
[
	dec_handling_lights_start_checking: [109-HP-go_front_car()-0.0 - 110-HP-close_hood()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [111-HP-go_front_car()-0.0 - 112-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [111-HP-go_front_car()-0.0 - 112-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [109-HP-go_front_car()-0.0 - 110-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [109-HP-go_front_car()-0.0, 110-HP-close_hood()-0.0]
decomp_r.subtasks= [111-HP-go_front_car()-0.0, 112-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 2
len(decomp_r.subtasks)= 2
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [109-HP-go_front_car()-0.0 - 110-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 113-HP-go_front_car()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-110-HP-close_hood()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_checking: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 114-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-110-HP-close_hood()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 110-HP-close_hood()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
human- Refine agenda with r_beliefs
Task to refine: 110-HP-close_hood()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement:
[
	dec_handling_lights_start_checking: [110-HP-close_hood()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [110-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [110-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [110-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [110-HP-close_hood()-0.0]
decomp_r.subtasks= [110-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
[93m110-HP-close_hood()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
NEED of belief alignment!

# UPDATE belief divergences
	oil:None: H=low R=full

Testing with 1 relevant divergence
divergence tested = oil:None: H=low R=full
Task to refine: 110-HP-close_hood()-0.0
decomp i= 0 : 
	end 0
ref_aligned 1:
[
	: [110-HP-close_hood()-0.0]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [110-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	: [110-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [110-HP-close_hood()-0.0]
decomp_r.subtasks= [110-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
	divergence is relevant!
Relevant divergences to correct : 	oil:None: H=low R=full

COM: com action added = 115-RP-COM_ALIGN['oil-None-full']-3.0
Task to refine: 110-HP-close_hood()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [110-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 116-HP-close_hood()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_checking: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 14.0 Flag.E Type.F#3, (human check_left_light ()) -11> (human close_hood ()) prev=#1 next=[]
new_e_flagged_nodes : 
	14.0 Flag.E Type.F#3, (human check_left_light ()) -11> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes :
	14.0 Flag.E Type.F#3, (human check_left_light ()) -11> (human close_hood ()) prev=#1 next=[]
Ns before check = 14.0 Flag.S Type.F#2, (human go_behind_car ()) -11> (human close_hood ()) prev=#1 next=[]
Nf = 14.0 Flag.E Type.F#3, (human check_left_light ()) -11> (human close_hood ()) prev=#1 next=[]
Ns after check = 14.0 Flag.S Type.F#2, (human go_behind_car ()) -11> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 100ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 100ms
Non relevant div:
True
Plans:
49-RP-COM_ALIGN['rear_light-None-old']-3.0 61-HP-go_behind_car()-1.0 67-RP-refill_washer()-1.0 68-HP-replace_rear_light()-1.0 69-RP-store_oil()-1.0 76-HP-go_front_car()-1.0 77-RP-IDLE[]-0.0 78-HP-check_left_light()-1.0 79-RP-IDLE[]-0.0 80-HP-check_right_light()-1.0 81-RP-IDLE[]-0.0 90-RP-COM_ALIGN['oil-None-full']-3.0 93-HP-close_hood()-1.0/49-RP-COM_ALIGN['rear_light-None-old']-3.0 62-HP-check_left_light()-1.0 98-RP-refill_washer()-1.0 99-HP-check_right_light()-1.0 100-RP-store_oil()-1.0 105-HP-go_behind_car()-1.0 106-RP-IDLE[]-0.0 107-HP-replace_rear_light()-1.0 108-RP-IDLE[]-0.0 113-HP-go_front_car()-1.0 114-RP-IDLE[]-0.0 115-RP-COM_ALIGN['oil-None-full']-3.0 116-HP-close_hood()-1.0
