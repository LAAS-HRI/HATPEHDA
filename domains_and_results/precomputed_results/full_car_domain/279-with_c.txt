RUN N=279 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = front 	ObsType.OBS 	loc=front
|| robot_init.at_human = front 	ObsType.OBS 	loc=front
|| robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
|| robot_init.washer = full 	ObsType.OBS 	loc=front
|| robot_init.oil = low 	ObsType.INF 	loc=front
|| robot_init.hood = open 	ObsType.OBS 	loc=front
|| robot_init.rear_light = old 	ObsType.INF 	loc=rear
|| robot_init.left_light = todo 	ObsType.INF 	loc=front
|| robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
|| human_init.at_robot = front
|| human_init.at_human = front
|| human_init.at_oil_bottle = front
|| human_init.washer = low
|| human_init.oil = full
|| human_init.hood = open
|| human_init.rear_light = new
|| human_init.left_light = todo
|| human_init.right_light = ok
|________________________________________________________________________
Start first exploration
SA: human assessed washer <- full
first node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [3-HA-Handling_lights() - 4-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 3-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	3-HA-Handling_lights() => [5-HA-Replacing_rear_light() - 6-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [7-HA-Checking_front_lights(), 8-HA-Replacing_rear_light(), 4-HA-Closing_hood()]
	5-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[6-HA-Checking_front_lights(), 4-HA-Closing_hood()]
	6-HA-Checking_front_lights() => [9-HP-go_front_car()-0.0 - 10-HP-check_left_light()-0.0 - 11-HP-check_right_light()-0.0] : dec_checking_front_ligths
	9-HP-go_front_car()-0.0 => [9-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[10-HP-check_left_light()-0.0, 11-HP-check_right_light()-0.0, 4-HA-Closing_hood()]
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	7-HA-Checking_front_lights() => [12-HP-go_front_car()-0.0 - 13-HP-check_left_light()-0.0 - 14-HP-check_right_light()-0.0] : dec_checking_front_ligths
	12-HP-go_front_car()-0.0 => [12-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[13-HP-check_left_light()-0.0, 14-HP-check_right_light()-0.0, 8-HA-Replacing_rear_light(), 4-HA-Closing_hood()]
	end 1
human- Refine agenda with r_beliefs
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [15-HA-Handling_lights() - 16-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 15-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	15-HA-Handling_lights() => [17-HA-Replacing_rear_light() - 18-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [19-HA-Checking_front_lights(), 20-HA-Replacing_rear_light(), 16-HA-Closing_hood()]
	17-HA-Replacing_rear_light() => [21-HP-go_behind_car()-0.0 - 22-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	19-HA-Checking_front_lights() => [23-HP-go_front_car()-0.0 - 24-HP-check_left_light()-0.0 - 25-HP-check_right_light()-0.0] : dec_checking_front_ligths
	23-HP-go_front_car()-0.0 => [23-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[24-HP-check_left_light()-0.0, 25-HP-check_right_light()-0.0, 20-HA-Replacing_rear_light(), 16-HA-Closing_hood()]
	end 1
refinement:
[
	dec_handling_lights_start_replace: [10-HP-check_left_light()-0.0 - 11-HP-check_right_light()-0.0 - 4-HA-Closing_hood()]
	dec_handling_lights_start_checking: [13-HP-check_left_light()-0.0 - 14-HP-check_right_light()-0.0 - 8-HA-Replacing_rear_light() - 4-HA-Closing_hood()]
]
refinement_r:
[
	dec_handling_lights_start_replace: [21-HP-go_behind_car()-0.0 - 22-HP-replace_rear_light()-0.0 - 18-HA-Checking_front_lights() - 16-HA-Closing_hood()]
	dec_handling_lights_start_checking: [24-HP-check_left_light()-0.0 - 25-HP-check_right_light()-0.0 - 20-HA-Replacing_rear_light() - 16-HA-Closing_hood()]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [21-HP-go_behind_car()-0.0 - 22-HP-replace_rear_light()-0.0 - 18-HA-Checking_front_lights() - 16-HA-Closing_hood()]
	dec_handling_lights_start_checking: [24-HP-check_left_light()-0.0 - 25-HP-check_right_light()-0.0 - 20-HA-Replacing_rear_light() - 16-HA-Closing_hood()]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [10-HP-check_left_light()-0.0 - 11-HP-check_right_light()-0.0 - 4-HA-Closing_hood()]
	dec_handling_lights_start_checking: [13-HP-check_left_light()-0.0 - 14-HP-check_right_light()-0.0 - 8-HA-Replacing_rear_light() - 4-HA-Closing_hood()]
]
decomp  0
decomp_h.subtasks= [10-HP-check_left_light()-0.0, 11-HP-check_right_light()-0.0, 4-HA-Closing_hood()]
decomp_r.subtasks= [21-HP-go_behind_car()-0.0, 22-HP-replace_rear_light()-0.0, 18-HA-Checking_front_lights(), 16-HA-Closing_hood()]
Not same number of subtasks
NEED of belief alignment!

# UPDATE belief divergences
	oil:None: H=full R=low
	rear_light:None: H=new R=old

Testing with 1 relevant divergence
divergence tested = oil:None: H=full R=low
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : 
	1-HA-Car_maintenance() => [26-HA-Handling_lights() - 27-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 26-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	26-HA-Handling_lights() => [28-HA-Replacing_rear_light() - 29-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [30-HA-Checking_front_lights(), 31-HA-Replacing_rear_light(), 27-HA-Closing_hood()]
	28-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[29-HA-Checking_front_lights(), 27-HA-Closing_hood()]
	29-HA-Checking_front_lights() => [32-HP-go_front_car()-0.0 - 33-HP-check_left_light()-0.0 - 34-HP-check_right_light()-0.0] : dec_checking_front_ligths
	32-HP-go_front_car()-0.0 => [32-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[33-HP-check_left_light()-0.0, 34-HP-check_right_light()-0.0, 27-HA-Closing_hood()]
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	30-HA-Checking_front_lights() => [35-HP-go_front_car()-0.0 - 36-HP-check_left_light()-0.0 - 37-HP-check_right_light()-0.0] : dec_checking_front_ligths
	35-HP-go_front_car()-0.0 => [35-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[36-HP-check_left_light()-0.0, 37-HP-check_right_light()-0.0, 31-HA-Replacing_rear_light(), 27-HA-Closing_hood()]
	end 1
ref_aligned 1:
[
	dec_handling_lights_start_replace: [33-HP-check_left_light()-0.0 - 34-HP-check_right_light()-0.0 - 27-HA-Closing_hood()]
	dec_handling_lights_start_checking: [36-HP-check_left_light()-0.0 - 37-HP-check_right_light()-0.0 - 31-HA-Replacing_rear_light() - 27-HA-Closing_hood()]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [21-HP-go_behind_car()-0.0 - 22-HP-replace_rear_light()-0.0 - 18-HA-Checking_front_lights() - 16-HA-Closing_hood()]
	dec_handling_lights_start_checking: [24-HP-check_left_light()-0.0 - 25-HP-check_right_light()-0.0 - 20-HA-Replacing_rear_light() - 16-HA-Closing_hood()]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [33-HP-check_left_light()-0.0 - 34-HP-check_right_light()-0.0 - 27-HA-Closing_hood()]
	dec_handling_lights_start_checking: [36-HP-check_left_light()-0.0 - 37-HP-check_right_light()-0.0 - 31-HA-Replacing_rear_light() - 27-HA-Closing_hood()]
]
decomp  0
decomp_h.subtasks= [33-HP-check_left_light()-0.0, 34-HP-check_right_light()-0.0, 27-HA-Closing_hood()]
decomp_r.subtasks= [21-HP-go_behind_car()-0.0, 22-HP-replace_rear_light()-0.0, 18-HA-Checking_front_lights(), 16-HA-Closing_hood()]
Not same number of subtasks
	divergence isn't relevant
divergence tested = rear_light:None: H=new R=old
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : 
	1-HA-Car_maintenance() => [38-HA-Handling_lights() - 39-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 38-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	38-HA-Handling_lights() => [40-HA-Replacing_rear_light() - 41-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [42-HA-Checking_front_lights(), 43-HA-Replacing_rear_light(), 39-HA-Closing_hood()]
	40-HA-Replacing_rear_light() => [44-HP-go_behind_car()-0.0 - 45-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	42-HA-Checking_front_lights() => [46-HP-go_front_car()-0.0 - 47-HP-check_left_light()-0.0 - 48-HP-check_right_light()-0.0] : dec_checking_front_ligths
	46-HP-go_front_car()-0.0 => [46-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[47-HP-check_left_light()-0.0, 48-HP-check_right_light()-0.0, 43-HA-Replacing_rear_light(), 39-HA-Closing_hood()]
	end 1
ref_aligned 1:
[
	dec_handling_lights_start_replace: [44-HP-go_behind_car()-0.0 - 45-HP-replace_rear_light()-0.0 - 41-HA-Checking_front_lights() - 39-HA-Closing_hood()]
	dec_handling_lights_start_checking: [47-HP-check_left_light()-0.0 - 48-HP-check_right_light()-0.0 - 43-HA-Replacing_rear_light() - 39-HA-Closing_hood()]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [21-HP-go_behind_car()-0.0 - 22-HP-replace_rear_light()-0.0 - 18-HA-Checking_front_lights() - 16-HA-Closing_hood()]
	dec_handling_lights_start_checking: [24-HP-check_left_light()-0.0 - 25-HP-check_right_light()-0.0 - 20-HA-Replacing_rear_light() - 16-HA-Closing_hood()]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [44-HP-go_behind_car()-0.0 - 45-HP-replace_rear_light()-0.0 - 41-HA-Checking_front_lights() - 39-HA-Closing_hood()]
	dec_handling_lights_start_checking: [47-HP-check_left_light()-0.0 - 48-HP-check_right_light()-0.0 - 43-HA-Replacing_rear_light() - 39-HA-Closing_hood()]
]
decomp  0
decomp_h.subtasks= [44-HP-go_behind_car()-0.0, 45-HP-replace_rear_light()-0.0, 41-HA-Checking_front_lights(), 39-HA-Closing_hood()]
decomp_r.subtasks= [21-HP-go_behind_car()-0.0, 22-HP-replace_rear_light()-0.0, 18-HA-Checking_front_lights(), 16-HA-Closing_hood()]
len(decomp_h.subtasks)= 4
len(decomp_r.subtasks)= 4
i= 0
i= 0
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
same effects
decomp  1
decomp_h.subtasks= [47-HP-check_left_light()-0.0, 48-HP-check_right_light()-0.0, 43-HA-Replacing_rear_light(), 39-HA-Closing_hood()]
decomp_r.subtasks= [24-HP-check_left_light()-0.0, 25-HP-check_right_light()-0.0, 20-HA-Replacing_rear_light(), 16-HA-Closing_hood()]
len(decomp_h.subtasks)= 4
len(decomp_r.subtasks)= 4
i= 1
i= 1
i= 1
i= 1
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
	divergence is relevant!
Relevant divergences to correct : 	rear_light:None: H=new R=old

COM: com action added = 49-RP-COM_ALIGN['rear_light-None-old']-3.0
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [50-HA-Handling_lights() - 51-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 50-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	50-HA-Handling_lights() => [52-HA-Replacing_rear_light() - 53-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [54-HA-Checking_front_lights(), 55-HA-Replacing_rear_light(), 51-HA-Closing_hood()]
	52-HA-Replacing_rear_light() => [56-HP-go_behind_car()-0.0 - 57-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	54-HA-Checking_front_lights() => [58-HP-go_front_car()-0.0 - 59-HP-check_left_light()-0.0 - 60-HP-check_right_light()-0.0] : dec_checking_front_ligths
	58-HP-go_front_car()-0.0 => [58-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[59-HP-check_left_light()-0.0, 60-HP-check_right_light()-0.0, 55-HA-Replacing_rear_light(), 51-HA-Closing_hood()]
	end 1
refinement = 
[
	dec_handling_lights_start_replace: [56-HP-go_behind_car()-0.0 - 57-HP-replace_rear_light()-0.0 - 53-HA-Checking_front_lights() - 51-HA-Closing_hood()]
	dec_handling_lights_start_checking: [59-HP-check_left_light()-0.0 - 60-HP-check_right_light()-0.0 - 55-HA-Replacing_rear_light() - 51-HA-Closing_hood()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 61-HP-go_behind_car()-1.0
	- 62-HP-check_left_light()-1.0

=> end explo
node explored = 3.0 Flag.F Type.H#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[#2 #3]
new_e_flagged_nodes : 
	4.0 Flag.E Type.I#2, (human go_behind_car ()) -1> (human go_behind_car ()) prev=#1 next=[]
	4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
e_flagged_nodes :
	4.0 Flag.E Type.I#2, (human go_behind_car ()) -1> (human go_behind_car ()) prev=#1 next=[]
	4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
Ns before check = None
Nf = None
Ns after check = None
e_flagged_nodes after check solution:
	4.0 Flag.E Type.I#2, (human go_behind_car ()) -1> (human go_behind_car ()) prev=#1 next=[]
	4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]

<@> picked node = 4.0 Flag.E Type.I#2, (human go_behind_car ()) -1> (human go_behind_car ()) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-57-HP-replace_rear_light()-0.0
||	-53-HA-Checking_front_lights()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : dec_handling_lights_start_replace
	0-RA-Car_maintenance() => [63-RP-go_front_car()-0.0 - 64-RP-refill_washer()-0.0 - 65-RP-refill_oil()-0.0 - 66-RP-store_oil()-0.0] : dec_car_maintenance_R
	63-RP-go_front_car()-0.0 => [63-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[64-RP-refill_washer()-0.0, 65-RP-refill_oil()-0.0, 66-RP-store_oil()-0.0]
	64-RP-refill_washer()-0.0 => [64-RP-refill_washer()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[65-RP-refill_oil()-0.0, 66-RP-store_oil()-0.0]
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [65-RP-refill_oil()-0.0 - 66-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-57-HP-replace_rear_light()-0.0
||	-53-HA-Checking_front_lights()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
[93malready done[0m
[93m65-RP-refill_oil()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs

# UPDATE belief divergences
	oil:None: H=full R=low

Testing with 1 relevant divergence
divergence tested = oil:None: H=full R=low
Task to refine: 57-HP-replace_rear_light()-0.0
decomp i= 0 : 
	end 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-57-HP-replace_rear_light()-0.0
||	-53-HA-Checking_front_lights()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
same effects
	divergence is relevant!
Relevant divergences to correct : 	oil:None: H=full R=low

COM: com action added eff = 67-RP-COM_ALIGN['oil-None-low']-3.0
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 68-RP-refill_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-66-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-57-HP-replace_rear_light()-0.0
||	-53-HA-Checking_front_lights()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 57-HP-replace_rear_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
human- Refine agenda with r_beliefs
Task to refine: 57-HP-replace_rear_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
refinement:
[
	dec_handling_lights_start_replace: [57-HP-replace_rear_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [57-HP-replace_rear_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [57-HP-replace_rear_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [57-HP-replace_rear_light()-0.0]
]
decomp  0
decomp_h.subtasks= [57-HP-replace_rear_light()-0.0]
decomp_r.subtasks= [57-HP-replace_rear_light()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-66-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-53-HA-Checking_front_lights()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [57-HP-replace_rear_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 69-HP-replace_rear_light()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-66-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-53-HA-Checking_front_lights()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 66-RP-store_oil()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [66-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-53-HA-Checking_front_lights()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 70-RP-store_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-53-HA-Checking_front_lights()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 53-HA-Checking_front_lights()
decomp i= 0 : dec_handling_lights_start_replace
	53-HA-Checking_front_lights() => [71-HP-go_front_car()-0.0 - 72-HP-check_left_light()-0.0 - 73-HP-check_right_light()-0.0] : dec_checking_front_ligths
	end 0
human- Refine agenda with r_beliefs
Task to refine: 53-HA-Checking_front_lights()
decomp i= 0 : dec_handling_lights_start_replace
	53-HA-Checking_front_lights() => [74-HP-go_front_car()-0.0 - 75-HP-check_left_light()-0.0 - 76-HP-check_right_light()-0.0] : dec_checking_front_ligths
	end 0
refinement:
[
	dec_handling_lights_start_replace: [71-HP-go_front_car()-0.0 - 72-HP-check_left_light()-0.0 - 73-HP-check_right_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [74-HP-go_front_car()-0.0 - 75-HP-check_left_light()-0.0 - 76-HP-check_right_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [74-HP-go_front_car()-0.0 - 75-HP-check_left_light()-0.0 - 76-HP-check_right_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [71-HP-go_front_car()-0.0 - 72-HP-check_left_light()-0.0 - 73-HP-check_right_light()-0.0]
]
decomp  0
decomp_h.subtasks= [71-HP-go_front_car()-0.0, 72-HP-check_left_light()-0.0, 73-HP-check_right_light()-0.0]
decomp_r.subtasks= [74-HP-go_front_car()-0.0, 75-HP-check_left_light()-0.0, 76-HP-check_right_light()-0.0]
len(decomp_h.subtasks)= 3
len(decomp_r.subtasks)= 3
i= 0
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [71-HP-go_front_car()-0.0 - 72-HP-check_left_light()-0.0 - 73-HP-check_right_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 77-HP-go_front_car()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-72-HP-check_left_light()-0.0
||	-73-HP-check_right_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : dec_handling_lights_start_replace
	0-RA-Car_maintenance() => [78-RP-go_front_car()-0.0 - 79-RP-refill_washer()-0.0 - 80-RP-refill_oil()-0.0 - 81-RP-store_oil()-0.0] : dec_car_maintenance_R
	78-RP-go_front_car()-0.0 => [78-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[79-RP-refill_washer()-0.0, 80-RP-refill_oil()-0.0, 81-RP-store_oil()-0.0]
	79-RP-refill_washer()-0.0 => [79-RP-refill_washer()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[80-RP-refill_oil()-0.0, 81-RP-store_oil()-0.0]
	80-RP-refill_oil()-0.0 => [80-RP-refill_oil()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[81-RP-store_oil()-0.0]
	81-RP-store_oil()-0.0 => [81-RP-store_oil()-0.0] : 
[92m	already done[0m
	81-RP-store_oil()-0.0 => DecompType.AGENDA_EMPTY
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 82-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-72-HP-check_left_light()-0.0
||	-73-HP-check_right_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 72-HP-check_left_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
human- Refine agenda with r_beliefs
Task to refine: 72-HP-check_left_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
refinement:
[
	dec_handling_lights_start_replace: [72-HP-check_left_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [72-HP-check_left_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [72-HP-check_left_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [72-HP-check_left_light()-0.0]
]
decomp  0
decomp_h.subtasks= [72-HP-check_left_light()-0.0]
decomp_r.subtasks= [72-HP-check_left_light()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-73-HP-check_right_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [72-HP-check_left_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 83-HP-check_left_light()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-73-HP-check_right_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_replace: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 84-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-73-HP-check_right_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 73-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	73-HP-check_right_light()-0.0 => [73-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 51-HA-Closing_hood()
	51-HA-Closing_hood() => [85-HP-go_front_car()-0.0 - 86-HP-close_hood()-0.0] : dec_closing_hood
	85-HP-go_front_car()-0.0 => [85-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[86-HP-close_hood()-0.0]
	end 0
human- Refine agenda with r_beliefs
Task to refine: 73-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	73-HP-check_right_light()-0.0 => [73-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 51-HA-Closing_hood()
	51-HA-Closing_hood() => [87-HP-go_front_car()-0.0 - 88-HP-close_hood()-0.0] : dec_closing_hood
	87-HP-go_front_car()-0.0 => [87-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[88-HP-close_hood()-0.0]
	end 0
refinement:
[
	dec_handling_lights_start_replace: [86-HP-close_hood()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [88-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [88-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [86-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [86-HP-close_hood()-0.0]
decomp_r.subtasks= [88-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
[93m86-HP-close_hood()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
NEED of belief alignment!

# UPDATE belief divergences
	at_oil_bottle:None: H=front R=cabinet
	oil:None: H=low R=full

Testing with 1 relevant divergence
divergence tested = at_oil_bottle:None: H=front R=cabinet
Task to refine: 73-HP-check_right_light()-0.0
decomp i= 0 : 
	73-HP-check_right_light()-0.0 => [73-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 51-HA-Closing_hood()
	51-HA-Closing_hood() => [89-HP-go_front_car()-0.0 - 90-HP-close_hood()-0.0] : dec_closing_hood
	89-HP-go_front_car()-0.0 => [89-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[90-HP-close_hood()-0.0]
	end 0
ref_aligned 1:
[
	: [90-HP-close_hood()-0.0]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [88-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	: [90-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [90-HP-close_hood()-0.0]
decomp_r.subtasks= [88-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
[93m90-HP-close_hood()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
	divergence isn't relevant
divergence tested = oil:None: H=low R=full
Task to refine: 73-HP-check_right_light()-0.0
decomp i= 0 : 
	73-HP-check_right_light()-0.0 => [73-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 51-HA-Closing_hood()
	51-HA-Closing_hood() => [91-HP-go_front_car()-0.0 - 92-HP-close_hood()-0.0] : dec_closing_hood
	91-HP-go_front_car()-0.0 => [91-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[92-HP-close_hood()-0.0]
	end 0
ref_aligned 1:
[
	: [92-HP-close_hood()-0.0]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [88-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	: [92-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [92-HP-close_hood()-0.0]
decomp_r.subtasks= [88-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
	divergence is relevant!
Relevant divergences to correct : 	oil:None: H=low R=full

COM: com action added = 93-RP-COM_ALIGN['oil-None-full']-3.0
Task to refine: 73-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	73-HP-check_right_light()-0.0 => [73-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 51-HA-Closing_hood()
	51-HA-Closing_hood() => [94-HP-go_front_car()-0.0 - 95-HP-close_hood()-0.0] : dec_closing_hood
	94-HP-go_front_car()-0.0 => [94-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[95-HP-close_hood()-0.0]
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [95-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 96-HP-close_hood()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_replace: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 16.0 Flag.E Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
new_e_flagged_nodes : 
	16.0 Flag.E Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes :
	4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
	16.0 Flag.E Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
Ns before check = None
Nf = 16.0 Flag.E Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
new Ns!
Ns after check = 16.0 Flag.S Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]

<@> picked node = 4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-60-HP-check_right_light()-0.0
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : dec_handling_lights_start_checking
	0-RA-Car_maintenance() => [97-RP-go_front_car()-0.0 - 98-RP-refill_washer()-0.0 - 99-RP-refill_oil()-0.0 - 100-RP-store_oil()-0.0] : dec_car_maintenance_R
	97-RP-go_front_car()-0.0 => [97-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[98-RP-refill_washer()-0.0, 99-RP-refill_oil()-0.0, 100-RP-store_oil()-0.0]
	98-RP-refill_washer()-0.0 => [98-RP-refill_washer()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[99-RP-refill_oil()-0.0, 100-RP-store_oil()-0.0]
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [99-RP-refill_oil()-0.0 - 100-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-60-HP-check_right_light()-0.0
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
[93malready done[0m
[93m99-RP-refill_oil()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs

# UPDATE belief divergences
	oil:None: H=full R=low

Testing with 1 relevant divergence
divergence tested = oil:None: H=full R=low
Task to refine: 60-HP-check_right_light()-0.0
decomp i= 0 : 
	60-HP-check_right_light()-0.0 => [60-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 55-HA-Replacing_rear_light()
	55-HA-Replacing_rear_light() => [101-HP-go_behind_car()-0.0 - 102-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-60-HP-check_right_light()-0.0
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
	divergence is relevant!
Relevant divergences to correct : 	oil:None: H=full R=low

COM: com action added eff = 103-RP-COM_ALIGN['oil-None-low']-3.0
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 104-RP-refill_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-100-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-60-HP-check_right_light()-0.0
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 60-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	60-HP-check_right_light()-0.0 => [60-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 55-HA-Replacing_rear_light()
	55-HA-Replacing_rear_light() => [105-HP-go_behind_car()-0.0 - 106-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
human- Refine agenda with r_beliefs
Task to refine: 60-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	60-HP-check_right_light()-0.0 => [60-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 55-HA-Replacing_rear_light()
	55-HA-Replacing_rear_light() => [107-HP-go_behind_car()-0.0 - 108-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
refinement:
[
	dec_handling_lights_start_checking: [105-HP-go_behind_car()-0.0 - 106-HP-replace_rear_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [107-HP-go_behind_car()-0.0 - 108-HP-replace_rear_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [107-HP-go_behind_car()-0.0 - 108-HP-replace_rear_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [105-HP-go_behind_car()-0.0 - 106-HP-replace_rear_light()-0.0]
]
decomp  0
decomp_h.subtasks= [105-HP-go_behind_car()-0.0, 106-HP-replace_rear_light()-0.0]
decomp_r.subtasks= [107-HP-go_behind_car()-0.0, 108-HP-replace_rear_light()-0.0]
len(decomp_h.subtasks)= 2
len(decomp_r.subtasks)= 2
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-100-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [105-HP-go_behind_car()-0.0 - 106-HP-replace_rear_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 109-HP-go_behind_car()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-100-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-106-HP-replace_rear_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 100-RP-store_oil()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [100-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-106-HP-replace_rear_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 110-RP-store_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-106-HP-replace_rear_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 106-HP-replace_rear_light()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
human- Refine agenda with r_beliefs
Task to refine: 106-HP-replace_rear_light()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement:
[
	dec_handling_lights_start_checking: [106-HP-replace_rear_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [106-HP-replace_rear_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [106-HP-replace_rear_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [106-HP-replace_rear_light()-0.0]
]
decomp  0
decomp_h.subtasks= [106-HP-replace_rear_light()-0.0]
decomp_r.subtasks= [106-HP-replace_rear_light()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [106-HP-replace_rear_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 111-HP-replace_rear_light()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : dec_handling_lights_start_checking
	0-RA-Car_maintenance() => [112-RP-go_front_car()-0.0 - 113-RP-refill_washer()-0.0 - 114-RP-refill_oil()-0.0 - 115-RP-store_oil()-0.0] : dec_car_maintenance_R
	112-RP-go_front_car()-0.0 => [112-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[113-RP-refill_washer()-0.0, 114-RP-refill_oil()-0.0, 115-RP-store_oil()-0.0]
	113-RP-refill_washer()-0.0 => [113-RP-refill_washer()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[114-RP-refill_oil()-0.0, 115-RP-store_oil()-0.0]
	114-RP-refill_oil()-0.0 => [114-RP-refill_oil()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[115-RP-store_oil()-0.0]
	115-RP-store_oil()-0.0 => [115-RP-store_oil()-0.0] : 
[92m	already done[0m
	115-RP-store_oil()-0.0 => DecompType.AGENDA_EMPTY
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 116-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 51-HA-Closing_hood()
decomp i= 0 : dec_handling_lights_start_checking
	51-HA-Closing_hood() => [117-HP-go_front_car()-0.0 - 118-HP-close_hood()-0.0] : dec_closing_hood
	end 0
human- Refine agenda with r_beliefs
Task to refine: 51-HA-Closing_hood()
decomp i= 0 : dec_handling_lights_start_checking
	51-HA-Closing_hood() => [119-HP-go_front_car()-0.0 - 120-HP-close_hood()-0.0] : dec_closing_hood
	end 0
refinement:
[
	dec_handling_lights_start_checking: [117-HP-go_front_car()-0.0 - 118-HP-close_hood()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [119-HP-go_front_car()-0.0 - 120-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [119-HP-go_front_car()-0.0 - 120-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [117-HP-go_front_car()-0.0 - 118-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [117-HP-go_front_car()-0.0, 118-HP-close_hood()-0.0]
decomp_r.subtasks= [119-HP-go_front_car()-0.0, 120-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 2
len(decomp_r.subtasks)= 2
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [117-HP-go_front_car()-0.0 - 118-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 121-HP-go_front_car()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-118-HP-close_hood()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_checking: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 122-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-118-HP-close_hood()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 118-HP-close_hood()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
human- Refine agenda with r_beliefs
Task to refine: 118-HP-close_hood()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement:
[
	dec_handling_lights_start_checking: [118-HP-close_hood()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [118-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [118-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [118-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [118-HP-close_hood()-0.0]
decomp_r.subtasks= [118-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [118-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 123-HP-close_hood()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_checking: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 13.0 Flag.E Type.F#3, (human check_left_light ()) -9> (human close_hood ()) prev=#1 next=[]
new_e_flagged_nodes : 
	13.0 Flag.E Type.F#3, (human check_left_light ()) -9> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes :
	13.0 Flag.E Type.F#3, (human check_left_light ()) -9> (human close_hood ()) prev=#1 next=[]
Ns before check = 16.0 Flag.S Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
Nf = 13.0 Flag.E Type.F#3, (human check_left_light ()) -9> (human close_hood ()) prev=#1 next=[]
new Ns!
Ns after check = 13.0 Flag.S Type.F#3, (human check_left_light ()) -9> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 103ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 103ms
Non relevant div:
True
Plans:
49-RP-COM_ALIGN['rear_light-None-old']-3.0 61-HP-go_behind_car()-1.0 67-RP-COM_ALIGN['oil-None-low']-3.0 68-RP-refill_oil()-1.0 69-HP-replace_rear_light()-1.0 70-RP-store_oil()-1.0 77-HP-go_front_car()-1.0 82-RP-IDLE[]-0.0 83-HP-check_left_light()-1.0 84-RP-IDLE[]-0.0 93-RP-COM_ALIGN['oil-None-full']-3.0 96-HP-close_hood()-1.0/49-RP-COM_ALIGN['rear_light-None-old']-3.0 62-HP-check_left_light()-1.0 103-RP-COM_ALIGN['oil-None-low']-3.0 104-RP-refill_oil()-1.0 109-HP-go_behind_car()-1.0 110-RP-store_oil()-1.0 111-HP-replace_rear_light()-1.0 116-RP-IDLE[]-0.0 121-HP-go_front_car()-1.0 122-RP-IDLE[]-0.0 123-HP-close_hood()-1.0
