RUN N=333 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = front 	ObsType.OBS 	loc=front
|| robot_init.at_human = front 	ObsType.OBS 	loc=front
|| robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
|| robot_init.washer = full 	ObsType.OBS 	loc=front
|| robot_init.oil = low 	ObsType.INF 	loc=front
|| robot_init.hood = open 	ObsType.OBS 	loc=front
|| robot_init.rear_light = new 	ObsType.INF 	loc=rear
|| robot_init.left_light = todo 	ObsType.INF 	loc=front
|| robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
|| human_init.at_robot = front
|| human_init.at_human = front
|| human_init.at_oil_bottle = front
|| human_init.washer = full
|| human_init.oil = full
|| human_init.hood = open
|| human_init.rear_light = old
|| human_init.left_light = todo
|| human_init.right_light = todo
|________________________________________________________________________
Start first exploration
first node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
human- Refine agenda
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [3-HA-Handling_lights() - 4-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 3-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	3-HA-Handling_lights() => [5-HA-Replacing_rear_light() - 6-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [7-HA-Checking_front_lights(), 8-HA-Replacing_rear_light(), 4-HA-Closing_hood()]
	5-HA-Replacing_rear_light() => [9-HP-go_behind_car()-0.0 - 10-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	7-HA-Checking_front_lights() => [11-HP-go_front_car()-0.0 - 12-HP-check_left_light()-0.0 - 13-HP-check_right_light()-0.0] : dec_checking_front_ligths
	11-HP-go_front_car()-0.0 => [11-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[12-HP-check_left_light()-0.0, 13-HP-check_right_light()-0.0, 8-HA-Replacing_rear_light(), 4-HA-Closing_hood()]
	end 1
human- Refine agenda with r_beliefs
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [14-HA-Handling_lights() - 15-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 14-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	14-HA-Handling_lights() => [16-HA-Replacing_rear_light() - 17-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [18-HA-Checking_front_lights(), 19-HA-Replacing_rear_light(), 15-HA-Closing_hood()]
	16-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[17-HA-Checking_front_lights(), 15-HA-Closing_hood()]
	17-HA-Checking_front_lights() => [20-HP-go_front_car()-0.0 - 21-HP-check_left_light()-0.0 - 22-HP-check_right_light()-0.0] : dec_checking_front_ligths
	20-HP-go_front_car()-0.0 => [20-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[21-HP-check_left_light()-0.0, 22-HP-check_right_light()-0.0, 15-HA-Closing_hood()]
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	18-HA-Checking_front_lights() => [23-HP-go_front_car()-0.0 - 24-HP-check_left_light()-0.0 - 25-HP-check_right_light()-0.0] : dec_checking_front_ligths
	23-HP-go_front_car()-0.0 => [23-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[24-HP-check_left_light()-0.0, 25-HP-check_right_light()-0.0, 19-HA-Replacing_rear_light(), 15-HA-Closing_hood()]
	end 1
refinement:
[
	dec_handling_lights_start_replace: [9-HP-go_behind_car()-0.0 - 10-HP-replace_rear_light()-0.0 - 6-HA-Checking_front_lights() - 4-HA-Closing_hood()]
	dec_handling_lights_start_checking: [12-HP-check_left_light()-0.0 - 13-HP-check_right_light()-0.0 - 8-HA-Replacing_rear_light() - 4-HA-Closing_hood()]
]
refinement_r:
[
	dec_handling_lights_start_replace: [21-HP-check_left_light()-0.0 - 22-HP-check_right_light()-0.0 - 15-HA-Closing_hood()]
	dec_handling_lights_start_checking: [24-HP-check_left_light()-0.0 - 25-HP-check_right_light()-0.0 - 19-HA-Replacing_rear_light() - 15-HA-Closing_hood()]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [21-HP-check_left_light()-0.0 - 22-HP-check_right_light()-0.0 - 15-HA-Closing_hood()]
	dec_handling_lights_start_checking: [24-HP-check_left_light()-0.0 - 25-HP-check_right_light()-0.0 - 19-HA-Replacing_rear_light() - 15-HA-Closing_hood()]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [9-HP-go_behind_car()-0.0 - 10-HP-replace_rear_light()-0.0 - 6-HA-Checking_front_lights() - 4-HA-Closing_hood()]
	dec_handling_lights_start_checking: [12-HP-check_left_light()-0.0 - 13-HP-check_right_light()-0.0 - 8-HA-Replacing_rear_light() - 4-HA-Closing_hood()]
]
decomp  0
decomp_h.subtasks= [9-HP-go_behind_car()-0.0, 10-HP-replace_rear_light()-0.0, 6-HA-Checking_front_lights(), 4-HA-Closing_hood()]
decomp_r.subtasks= [21-HP-check_left_light()-0.0, 22-HP-check_right_light()-0.0, 15-HA-Closing_hood()]
Not same number of subtasks
NEED of belief alignment!

# UPDATE belief divergences
	oil:None: H=full R=low
	rear_light:None: H=old R=new

Testing with 1 relevant divergence
divergence tested = oil:None: H=full R=low
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : 
	1-HA-Car_maintenance() => [26-HA-Handling_lights() - 27-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 26-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	26-HA-Handling_lights() => [28-HA-Replacing_rear_light() - 29-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [30-HA-Checking_front_lights(), 31-HA-Replacing_rear_light(), 27-HA-Closing_hood()]
	28-HA-Replacing_rear_light() => [32-HP-go_behind_car()-0.0 - 33-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	30-HA-Checking_front_lights() => [34-HP-go_front_car()-0.0 - 35-HP-check_left_light()-0.0 - 36-HP-check_right_light()-0.0] : dec_checking_front_ligths
	34-HP-go_front_car()-0.0 => [34-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[35-HP-check_left_light()-0.0, 36-HP-check_right_light()-0.0, 31-HA-Replacing_rear_light(), 27-HA-Closing_hood()]
	end 1
ref_aligned 1:
[
	dec_handling_lights_start_replace: [32-HP-go_behind_car()-0.0 - 33-HP-replace_rear_light()-0.0 - 29-HA-Checking_front_lights() - 27-HA-Closing_hood()]
	dec_handling_lights_start_checking: [35-HP-check_left_light()-0.0 - 36-HP-check_right_light()-0.0 - 31-HA-Replacing_rear_light() - 27-HA-Closing_hood()]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [21-HP-check_left_light()-0.0 - 22-HP-check_right_light()-0.0 - 15-HA-Closing_hood()]
	dec_handling_lights_start_checking: [24-HP-check_left_light()-0.0 - 25-HP-check_right_light()-0.0 - 19-HA-Replacing_rear_light() - 15-HA-Closing_hood()]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [32-HP-go_behind_car()-0.0 - 33-HP-replace_rear_light()-0.0 - 29-HA-Checking_front_lights() - 27-HA-Closing_hood()]
	dec_handling_lights_start_checking: [35-HP-check_left_light()-0.0 - 36-HP-check_right_light()-0.0 - 31-HA-Replacing_rear_light() - 27-HA-Closing_hood()]
]
decomp  0
decomp_h.subtasks= [32-HP-go_behind_car()-0.0, 33-HP-replace_rear_light()-0.0, 29-HA-Checking_front_lights(), 27-HA-Closing_hood()]
decomp_r.subtasks= [21-HP-check_left_light()-0.0, 22-HP-check_right_light()-0.0, 15-HA-Closing_hood()]
Not same number of subtasks
	divergence isn't relevant
divergence tested = rear_light:None: H=old R=new
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : 
	1-HA-Car_maintenance() => [37-HA-Handling_lights() - 38-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 37-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	37-HA-Handling_lights() => [39-HA-Replacing_rear_light() - 40-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [41-HA-Checking_front_lights(), 42-HA-Replacing_rear_light(), 38-HA-Closing_hood()]
	39-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[40-HA-Checking_front_lights(), 38-HA-Closing_hood()]
	40-HA-Checking_front_lights() => [43-HP-go_front_car()-0.0 - 44-HP-check_left_light()-0.0 - 45-HP-check_right_light()-0.0] : dec_checking_front_ligths
	43-HP-go_front_car()-0.0 => [43-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[44-HP-check_left_light()-0.0, 45-HP-check_right_light()-0.0, 38-HA-Closing_hood()]
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	41-HA-Checking_front_lights() => [46-HP-go_front_car()-0.0 - 47-HP-check_left_light()-0.0 - 48-HP-check_right_light()-0.0] : dec_checking_front_ligths
	46-HP-go_front_car()-0.0 => [46-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[47-HP-check_left_light()-0.0, 48-HP-check_right_light()-0.0, 42-HA-Replacing_rear_light(), 38-HA-Closing_hood()]
	end 1
ref_aligned 1:
[
	dec_handling_lights_start_replace: [44-HP-check_left_light()-0.0 - 45-HP-check_right_light()-0.0 - 38-HA-Closing_hood()]
	dec_handling_lights_start_checking: [47-HP-check_left_light()-0.0 - 48-HP-check_right_light()-0.0 - 42-HA-Replacing_rear_light() - 38-HA-Closing_hood()]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [21-HP-check_left_light()-0.0 - 22-HP-check_right_light()-0.0 - 15-HA-Closing_hood()]
	dec_handling_lights_start_checking: [24-HP-check_left_light()-0.0 - 25-HP-check_right_light()-0.0 - 19-HA-Replacing_rear_light() - 15-HA-Closing_hood()]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [44-HP-check_left_light()-0.0 - 45-HP-check_right_light()-0.0 - 38-HA-Closing_hood()]
	dec_handling_lights_start_checking: [47-HP-check_left_light()-0.0 - 48-HP-check_right_light()-0.0 - 42-HA-Replacing_rear_light() - 38-HA-Closing_hood()]
]
decomp  0
decomp_h.subtasks= [44-HP-check_left_light()-0.0, 45-HP-check_right_light()-0.0, 38-HA-Closing_hood()]
decomp_r.subtasks= [21-HP-check_left_light()-0.0, 22-HP-check_right_light()-0.0, 15-HA-Closing_hood()]
len(decomp_h.subtasks)= 3
len(decomp_r.subtasks)= 3
i= 0
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
same effects
decomp  1
decomp_h.subtasks= [47-HP-check_left_light()-0.0, 48-HP-check_right_light()-0.0, 42-HA-Replacing_rear_light(), 38-HA-Closing_hood()]
decomp_r.subtasks= [24-HP-check_left_light()-0.0, 25-HP-check_right_light()-0.0, 19-HA-Replacing_rear_light(), 15-HA-Closing_hood()]
len(decomp_h.subtasks)= 4
len(decomp_r.subtasks)= 4
i= 1
i= 1
i= 1
i= 1
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = todo
|________________________________________________________________________
same effects
no alignment needed
	divergence is relevant!
Relevant divergences to correct : 	rear_light:None: H=old R=new

COM: com action added = 49-RP-COM_ALIGN['rear_light-None-new']-3.0
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [50-HA-Handling_lights() - 51-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 50-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	50-HA-Handling_lights() => [52-HA-Replacing_rear_light() - 53-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [54-HA-Checking_front_lights(), 55-HA-Replacing_rear_light(), 51-HA-Closing_hood()]
	52-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[53-HA-Checking_front_lights(), 51-HA-Closing_hood()]
	53-HA-Checking_front_lights() => [56-HP-go_front_car()-0.0 - 57-HP-check_left_light()-0.0 - 58-HP-check_right_light()-0.0] : dec_checking_front_ligths
	56-HP-go_front_car()-0.0 => [56-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[57-HP-check_left_light()-0.0, 58-HP-check_right_light()-0.0, 51-HA-Closing_hood()]
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	54-HA-Checking_front_lights() => [59-HP-go_front_car()-0.0 - 60-HP-check_left_light()-0.0 - 61-HP-check_right_light()-0.0] : dec_checking_front_ligths
	59-HP-go_front_car()-0.0 => [59-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[60-HP-check_left_light()-0.0, 61-HP-check_right_light()-0.0, 55-HA-Replacing_rear_light(), 51-HA-Closing_hood()]
	end 1
refinement = 
[
	dec_handling_lights_start_replace: [57-HP-check_left_light()-0.0 - 58-HP-check_right_light()-0.0 - 51-HA-Closing_hood()]
	dec_handling_lights_start_checking: [60-HP-check_left_light()-0.0 - 61-HP-check_right_light()-0.0 - 55-HA-Replacing_rear_light() - 51-HA-Closing_hood()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 62-HP-check_left_light()-1.0
	- 63-HP-check_left_light()-1.0

=> end explo
node explored = 3.0 Flag.F Type.H#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[#2 #3]
new_e_flagged_nodes : 
	4.0 Flag.E Type.I#2, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
	4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
e_flagged_nodes :
	4.0 Flag.E Type.I#2, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
	4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
Ns before check = None
Nf = None
Ns after check = None
e_flagged_nodes after check solution:
	4.0 Flag.E Type.I#2, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
	4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]

<@> picked node = 4.0 Flag.E Type.I#2, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-58-HP-check_right_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : dec_handling_lights_start_replace
	0-RA-Car_maintenance() => [64-RP-go_front_car()-0.0 - 65-RP-refill_washer()-0.0 - 66-RP-refill_oil()-0.0 - 67-RP-store_oil()-0.0] : dec_car_maintenance_R
	64-RP-go_front_car()-0.0 => [64-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[65-RP-refill_washer()-0.0, 66-RP-refill_oil()-0.0, 67-RP-store_oil()-0.0]
	65-RP-refill_washer()-0.0 => [65-RP-refill_washer()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[66-RP-refill_oil()-0.0, 67-RP-store_oil()-0.0]
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [66-RP-refill_oil()-0.0 - 67-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-58-HP-check_right_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
[93malready done[0m
[93m66-RP-refill_oil()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs

# UPDATE belief divergences
	oil:None: H=full R=low

Testing with 1 relevant divergence
divergence tested = oil:None: H=full R=low
Task to refine: 58-HP-check_right_light()-0.0
decomp i= 0 : 
	end 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-58-HP-check_right_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
same effects
	divergence is relevant!
Relevant divergences to correct : 	oil:None: H=full R=low

COM: com action added eff = 68-RP-COM_ALIGN['oil-None-low']-3.0
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 69-RP-refill_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-67-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-58-HP-check_right_light()-0.0
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
human- Refine agenda
Task to refine: 58-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
human- Refine agenda with r_beliefs
Task to refine: 58-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
refinement:
[
	dec_handling_lights_start_replace: [58-HP-check_right_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [58-HP-check_right_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [58-HP-check_right_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [58-HP-check_right_light()-0.0]
]
decomp  0
decomp_h.subtasks= [58-HP-check_right_light()-0.0]
decomp_r.subtasks= [58-HP-check_right_light()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-67-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [58-HP-check_right_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 70-HP-check_right_light()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-67-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 67-RP-store_oil()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [67-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 71-RP-store_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 51-HA-Closing_hood()
decomp i= 0 : dec_handling_lights_start_replace
	51-HA-Closing_hood() => [72-HP-go_front_car()-0.0 - 73-HP-close_hood()-0.0] : dec_closing_hood
	72-HP-go_front_car()-0.0 => [72-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[73-HP-close_hood()-0.0]
	end 0
human- Refine agenda with r_beliefs
Task to refine: 51-HA-Closing_hood()
decomp i= 0 : dec_handling_lights_start_replace
	51-HA-Closing_hood() => [74-HP-go_front_car()-0.0 - 75-HP-close_hood()-0.0] : dec_closing_hood
	74-HP-go_front_car()-0.0 => [74-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[75-HP-close_hood()-0.0]
	end 0
refinement:
[
	dec_handling_lights_start_replace: [73-HP-close_hood()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [75-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [75-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [73-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [73-HP-close_hood()-0.0]
decomp_r.subtasks= [75-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [73-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 76-HP-close_hood()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : dec_handling_lights_start_replace
	0-RA-Car_maintenance() => [77-RP-go_front_car()-0.0 - 78-RP-refill_washer()-0.0 - 79-RP-refill_oil()-0.0 - 80-RP-store_oil()-0.0] : dec_car_maintenance_R
	77-RP-go_front_car()-0.0 => [77-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[78-RP-refill_washer()-0.0, 79-RP-refill_oil()-0.0, 80-RP-store_oil()-0.0]
	78-RP-refill_washer()-0.0 => [78-RP-refill_washer()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[79-RP-refill_oil()-0.0, 80-RP-store_oil()-0.0]
	79-RP-refill_oil()-0.0 => [79-RP-refill_oil()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[80-RP-store_oil()-0.0]
	80-RP-store_oil()-0.0 => [80-RP-store_oil()-0.0] : 
[92m	already done[0m
	80-RP-store_oil()-0.0 => DecompType.BOTH_AGENDAS_EMPTY
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 11.0 Flag.E Type.F#2, (human check_left_light ()) -5> (human close_hood ()) prev=#1 next=[]
new_e_flagged_nodes : 
	11.0 Flag.E Type.F#2, (human check_left_light ()) -5> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes :
	4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
	11.0 Flag.E Type.F#2, (human check_left_light ()) -5> (human close_hood ()) prev=#1 next=[]
Ns before check = None
Nf = 11.0 Flag.E Type.F#2, (human check_left_light ()) -5> (human close_hood ()) prev=#1 next=[]
new Ns!
Ns after check = 11.0 Flag.S Type.F#2, (human check_left_light ()) -5> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]

<@> picked node = 4.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-61-HP-check_right_light()-0.0
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : dec_handling_lights_start_checking
	0-RA-Car_maintenance() => [81-RP-go_front_car()-0.0 - 82-RP-refill_washer()-0.0 - 83-RP-refill_oil()-0.0 - 84-RP-store_oil()-0.0] : dec_car_maintenance_R
	81-RP-go_front_car()-0.0 => [81-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[82-RP-refill_washer()-0.0, 83-RP-refill_oil()-0.0, 84-RP-store_oil()-0.0]
	82-RP-refill_washer()-0.0 => [82-RP-refill_washer()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[83-RP-refill_oil()-0.0, 84-RP-store_oil()-0.0]
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [83-RP-refill_oil()-0.0 - 84-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-61-HP-check_right_light()-0.0
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
[93malready done[0m
[93m83-RP-refill_oil()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs

# UPDATE belief divergences
	oil:None: H=full R=low

Testing with 1 relevant divergence
divergence tested = oil:None: H=full R=low
Task to refine: 61-HP-check_right_light()-0.0
decomp i= 0 : 
	end 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-61-HP-check_right_light()-0.0
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
same effects
	divergence is relevant!
Relevant divergences to correct : 	oil:None: H=full R=low

COM: com action added eff = 85-RP-COM_ALIGN['oil-None-low']-3.0
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 86-RP-refill_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-84-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-61-HP-check_right_light()-0.0
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
human- Refine agenda
Task to refine: 61-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
human- Refine agenda with r_beliefs
Task to refine: 61-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement:
[
	dec_handling_lights_start_checking: [61-HP-check_right_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [61-HP-check_right_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [61-HP-check_right_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [61-HP-check_right_light()-0.0]
]
decomp  0
decomp_h.subtasks= [61-HP-check_right_light()-0.0]
decomp_r.subtasks= [61-HP-check_right_light()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-84-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [61-HP-check_right_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 87-HP-check_right_light()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-84-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 84-RP-store_oil()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [84-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 88-RP-store_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-55-HA-Replacing_rear_light()
||	-51-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 55-HA-Replacing_rear_light()
decomp i= 0 : dec_handling_lights_start_checking
	55-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue with next_task popped from agenda 51-HA-Closing_hood()
	51-HA-Closing_hood() => [89-HP-go_front_car()-0.0 - 90-HP-close_hood()-0.0] : dec_closing_hood
	89-HP-go_front_car()-0.0 => [89-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[90-HP-close_hood()-0.0]
	end 0
human- Refine agenda with r_beliefs
Task to refine: 55-HA-Replacing_rear_light()
decomp i= 0 : dec_handling_lights_start_checking
	55-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue with next_task popped from agenda 51-HA-Closing_hood()
	51-HA-Closing_hood() => [91-HP-go_front_car()-0.0 - 92-HP-close_hood()-0.0] : dec_closing_hood
	91-HP-go_front_car()-0.0 => [91-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[92-HP-close_hood()-0.0]
	end 0
refinement:
[
	dec_handling_lights_start_checking: [90-HP-close_hood()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [92-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [92-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [90-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [90-HP-close_hood()-0.0]
decomp_r.subtasks= [92-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [90-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 93-HP-close_hood()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : dec_handling_lights_start_checking
	0-RA-Car_maintenance() => [94-RP-go_front_car()-0.0 - 95-RP-refill_washer()-0.0 - 96-RP-refill_oil()-0.0 - 97-RP-store_oil()-0.0] : dec_car_maintenance_R
	94-RP-go_front_car()-0.0 => [94-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[95-RP-refill_washer()-0.0, 96-RP-refill_oil()-0.0, 97-RP-store_oil()-0.0]
	95-RP-refill_washer()-0.0 => [95-RP-refill_washer()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[96-RP-refill_oil()-0.0, 97-RP-store_oil()-0.0]
	96-RP-refill_oil()-0.0 => [96-RP-refill_oil()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[97-RP-store_oil()-0.0]
	97-RP-store_oil()-0.0 => [97-RP-store_oil()-0.0] : 
[92m	already done[0m
	97-RP-store_oil()-0.0 => DecompType.BOTH_AGENDAS_EMPTY
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 11.0 Flag.E Type.F#3, (human check_left_light ()) -5> (human close_hood ()) prev=#1 next=[]
new_e_flagged_nodes : 
	11.0 Flag.E Type.F#3, (human check_left_light ()) -5> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes :
	11.0 Flag.E Type.F#3, (human check_left_light ()) -5> (human close_hood ()) prev=#1 next=[]
Ns before check = 11.0 Flag.S Type.F#2, (human check_left_light ()) -5> (human close_hood ()) prev=#1 next=[]
Nf = 11.0 Flag.E Type.F#3, (human check_left_light ()) -5> (human close_hood ()) prev=#1 next=[]
Ns after check = 11.0 Flag.S Type.F#2, (human check_left_light ()) -5> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 73ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 73ms
Non relevant div:
False
Plans:
49-RP-COM_ALIGN['rear_light-None-new']-3.0 62-HP-check_left_light()-1.0 68-RP-COM_ALIGN['oil-None-low']-3.0 69-RP-refill_oil()-1.0 70-HP-check_right_light()-1.0 71-RP-store_oil()-1.0 76-HP-close_hood()-1.0/49-RP-COM_ALIGN['rear_light-None-new']-3.0 63-HP-check_left_light()-1.0 85-RP-COM_ALIGN['oil-None-low']-3.0 86-RP-refill_oil()-1.0 87-HP-check_right_light()-1.0 88-RP-store_oil()-1.0 93-HP-close_hood()-1.0
