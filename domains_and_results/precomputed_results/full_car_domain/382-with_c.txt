RUN N=382 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = front 	ObsType.OBS 	loc=front
|| robot_init.at_human = front 	ObsType.OBS 	loc=front
|| robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
|| robot_init.washer = full 	ObsType.OBS 	loc=front
|| robot_init.oil = low 	ObsType.INF 	loc=front
|| robot_init.hood = open 	ObsType.OBS 	loc=front
|| robot_init.rear_light = new 	ObsType.INF 	loc=rear
|| robot_init.left_light = ok 	ObsType.INF 	loc=front
|| robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
|| human_init.at_robot = front
|| human_init.at_human = front
|| human_init.at_oil_bottle = front
|| human_init.washer = full
|| human_init.oil = full
|| human_init.hood = open
|| human_init.rear_light = new
|| human_init.left_light = ok
|| human_init.right_light = ok
|________________________________________________________________________
Start first exploration
first node = 0.0 Flag.E Type.I#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : origin
	0-RA-Car_maintenance() => [3-RP-go_front_car()-0.0 - 4-RP-refill_washer()-0.0 - 5-RP-refill_oil()-0.0 - 6-RP-store_oil()-0.0] : dec_car_maintenance_R
	3-RP-go_front_car()-0.0 => [3-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[4-RP-refill_washer()-0.0, 5-RP-refill_oil()-0.0, 6-RP-store_oil()-0.0]
	4-RP-refill_washer()-0.0 => [4-RP-refill_washer()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[5-RP-refill_oil()-0.0, 6-RP-store_oil()-0.0]
	end 0
refinement = 
[
	origin: [5-RP-refill_oil()-0.0 - 6-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
[93malready done[0m
[93m5-RP-refill_oil()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs

# UPDATE belief divergences
	oil:None: H=full R=low

Testing with 1 relevant divergence
divergence tested = oil:None: H=full R=low
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : 
	1-HA-Car_maintenance() => [7-HA-Handling_lights() - 8-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 7-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	7-HA-Handling_lights() => [9-HA-Replacing_rear_light() - 10-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [11-HA-Checking_front_lights(), 12-HA-Replacing_rear_light(), 8-HA-Closing_hood()]
	9-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[10-HA-Checking_front_lights(), 8-HA-Closing_hood()]
	10-HA-Checking_front_lights() => [13-HP-go_front_car()-0.0 - 14-HP-check_left_light()-0.0 - 15-HP-check_right_light()-0.0] : dec_checking_front_ligths
	13-HP-go_front_car()-0.0 => [13-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[14-HP-check_left_light()-0.0, 15-HP-check_right_light()-0.0, 8-HA-Closing_hood()]
	14-HP-check_left_light()-0.0 => [14-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[15-HP-check_right_light()-0.0, 8-HA-Closing_hood()]
	15-HP-check_right_light()-0.0 => [15-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[8-HA-Closing_hood()]
	8-HA-Closing_hood() => [16-HP-go_front_car()-0.0 - 17-HP-close_hood()-0.0] : dec_closing_hood
	16-HP-go_front_car()-0.0 => [16-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[17-HP-close_hood()-0.0]
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	11-HA-Checking_front_lights() => [18-HP-go_front_car()-0.0 - 19-HP-check_left_light()-0.0 - 20-HP-check_right_light()-0.0] : dec_checking_front_ligths
	18-HP-go_front_car()-0.0 => [18-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[19-HP-check_left_light()-0.0, 20-HP-check_right_light()-0.0, 12-HA-Replacing_rear_light(), 8-HA-Closing_hood()]
	19-HP-check_left_light()-0.0 => [19-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[20-HP-check_right_light()-0.0, 12-HA-Replacing_rear_light(), 8-HA-Closing_hood()]
	20-HP-check_right_light()-0.0 => [20-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[12-HA-Replacing_rear_light(), 8-HA-Closing_hood()]
	12-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[8-HA-Closing_hood()]
	8-HA-Closing_hood() => [21-HP-go_front_car()-0.0 - 22-HP-close_hood()-0.0] : dec_closing_hood
	21-HP-go_front_car()-0.0 => [21-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[22-HP-close_hood()-0.0]
	end 1
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
	divergence is relevant!
Relevant divergences to correct : 	oil:None: H=full R=low

COM: com action added eff = 23-RP-COM_ALIGN['oil-None-low']-3.0
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 24-RP-refill_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [25-HA-Handling_lights() - 26-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 25-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	25-HA-Handling_lights() => [27-HA-Replacing_rear_light() - 28-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [29-HA-Checking_front_lights(), 30-HA-Replacing_rear_light(), 26-HA-Closing_hood()]
	27-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[28-HA-Checking_front_lights(), 26-HA-Closing_hood()]
	28-HA-Checking_front_lights() => [31-HP-go_front_car()-0.0 - 32-HP-check_left_light()-0.0 - 33-HP-check_right_light()-0.0] : dec_checking_front_ligths
	31-HP-go_front_car()-0.0 => [31-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[32-HP-check_left_light()-0.0, 33-HP-check_right_light()-0.0, 26-HA-Closing_hood()]
	32-HP-check_left_light()-0.0 => [32-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[33-HP-check_right_light()-0.0, 26-HA-Closing_hood()]
	33-HP-check_right_light()-0.0 => [33-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[26-HA-Closing_hood()]
	26-HA-Closing_hood() => [34-HP-go_front_car()-0.0 - 35-HP-close_hood()-0.0] : dec_closing_hood
	34-HP-go_front_car()-0.0 => [34-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[35-HP-close_hood()-0.0]
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	29-HA-Checking_front_lights() => [36-HP-go_front_car()-0.0 - 37-HP-check_left_light()-0.0 - 38-HP-check_right_light()-0.0] : dec_checking_front_ligths
	36-HP-go_front_car()-0.0 => [36-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[37-HP-check_left_light()-0.0, 38-HP-check_right_light()-0.0, 30-HA-Replacing_rear_light(), 26-HA-Closing_hood()]
	37-HP-check_left_light()-0.0 => [37-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[38-HP-check_right_light()-0.0, 30-HA-Replacing_rear_light(), 26-HA-Closing_hood()]
	38-HP-check_right_light()-0.0 => [38-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[30-HA-Replacing_rear_light(), 26-HA-Closing_hood()]
	30-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[26-HA-Closing_hood()]
	26-HA-Closing_hood() => [39-HP-go_front_car()-0.0 - 40-HP-close_hood()-0.0] : dec_closing_hood
	39-HP-go_front_car()-0.0 => [39-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[40-HP-close_hood()-0.0]
	end 1
human- Refine agenda with r_beliefs
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [41-HA-Handling_lights() - 42-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 41-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	41-HA-Handling_lights() => [43-HA-Replacing_rear_light() - 44-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [45-HA-Checking_front_lights(), 46-HA-Replacing_rear_light(), 42-HA-Closing_hood()]
	43-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[44-HA-Checking_front_lights(), 42-HA-Closing_hood()]
	44-HA-Checking_front_lights() => [47-HP-go_front_car()-0.0 - 48-HP-check_left_light()-0.0 - 49-HP-check_right_light()-0.0] : dec_checking_front_ligths
	47-HP-go_front_car()-0.0 => [47-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[48-HP-check_left_light()-0.0, 49-HP-check_right_light()-0.0, 42-HA-Closing_hood()]
	48-HP-check_left_light()-0.0 => [48-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[49-HP-check_right_light()-0.0, 42-HA-Closing_hood()]
	49-HP-check_right_light()-0.0 => [49-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[42-HA-Closing_hood()]
	42-HA-Closing_hood() => [50-HP-go_front_car()-0.0 - 51-HP-close_hood()-0.0] : dec_closing_hood
	50-HP-go_front_car()-0.0 => [50-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[51-HP-close_hood()-0.0]
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	45-HA-Checking_front_lights() => [52-HP-go_front_car()-0.0 - 53-HP-check_left_light()-0.0 - 54-HP-check_right_light()-0.0] : dec_checking_front_ligths
	52-HP-go_front_car()-0.0 => [52-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[53-HP-check_left_light()-0.0, 54-HP-check_right_light()-0.0, 46-HA-Replacing_rear_light(), 42-HA-Closing_hood()]
	53-HP-check_left_light()-0.0 => [53-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[54-HP-check_right_light()-0.0, 46-HA-Replacing_rear_light(), 42-HA-Closing_hood()]
	54-HP-check_right_light()-0.0 => [54-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[46-HA-Replacing_rear_light(), 42-HA-Closing_hood()]
	46-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[42-HA-Closing_hood()]
	42-HA-Closing_hood() => [55-HP-go_front_car()-0.0 - 56-HP-close_hood()-0.0] : dec_closing_hood
	55-HP-go_front_car()-0.0 => [55-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[56-HP-close_hood()-0.0]
	end 1
refinement:
[
	dec_handling_lights_start_replace: [35-HP-close_hood()-0.0]
	dec_handling_lights_start_checking: [40-HP-close_hood()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [51-HP-close_hood()-0.0]
	dec_handling_lights_start_checking: [56-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [51-HP-close_hood()-0.0]
	dec_handling_lights_start_checking: [56-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [35-HP-close_hood()-0.0]
	dec_handling_lights_start_checking: [40-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [35-HP-close_hood()-0.0]
decomp_r.subtasks= [51-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
decomp  1
decomp_h.subtasks= [40-HP-close_hood()-0.0]
decomp_r.subtasks= [56-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 1
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [35-HP-close_hood()-0.0]
	dec_handling_lights_start_checking: [40-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 57-HP-close_hood()-1.0
	- 58-HP-close_hood()-1.0

=> end explo
node explored = 4.0 Flag.F Type.H#1, (human BEGIN []) -2> (robot refill_oil ()) prev=None next=[#2 #3]
new_e_flagged_nodes : 
	5.0 Flag.E Type.I#2, (human close_hood ()) -1> (human close_hood ()) prev=#1 next=[]
	5.0 Flag.E Type.I#3, (human close_hood ()) -1> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes :
	5.0 Flag.E Type.I#2, (human close_hood ()) -1> (human close_hood ()) prev=#1 next=[]
	5.0 Flag.E Type.I#3, (human close_hood ()) -1> (human close_hood ()) prev=#1 next=[]
Ns before check = None
Nf = None
Ns after check = None
e_flagged_nodes after check solution:
	5.0 Flag.E Type.I#2, (human close_hood ()) -1> (human close_hood ()) prev=#1 next=[]
	5.0 Flag.E Type.I#3, (human close_hood ()) -1> (human close_hood ()) prev=#1 next=[]

<@> picked node = 5.0 Flag.E Type.I#2, (human close_hood ()) -1> (human close_hood ()) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 6-RP-store_oil()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [6-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 59-RP-store_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
human- Refine agenda with r_beliefs
refinement:
[
	dec_handling_lights_start_replace: [DecompType.AGENDA_EMPTY]
]
refinement_r:
[
	dec_handling_lights_start_replace: [DecompType.AGENDA_EMPTY]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [DecompType.AGENDA_EMPTY]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [DecompType.AGENDA_EMPTY]
]
decomp  0
decomp_h.subtasks= []
decomp_r.subtasks= []
len(decomp_h.subtasks)= 0
len(decomp_r.subtasks)= 0
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 60-HP-IDLE[]-0.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : dec_handling_lights_start_replace
	0-RA-Car_maintenance() => [61-RP-go_front_car()-0.0 - 62-RP-refill_washer()-0.0 - 63-RP-refill_oil()-0.0 - 64-RP-store_oil()-0.0] : dec_car_maintenance_R
	61-RP-go_front_car()-0.0 => [61-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[62-RP-refill_washer()-0.0, 63-RP-refill_oil()-0.0, 64-RP-store_oil()-0.0]
	62-RP-refill_washer()-0.0 => [62-RP-refill_washer()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[63-RP-refill_oil()-0.0, 64-RP-store_oil()-0.0]
	63-RP-refill_oil()-0.0 => [63-RP-refill_oil()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[64-RP-store_oil()-0.0]
	64-RP-store_oil()-0.0 => [64-RP-store_oil()-0.0] : 
[92m	already done[0m
	64-RP-store_oil()-0.0 => DecompType.BOTH_AGENDAS_EMPTY
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 6.0 Flag.E Type.F#2, (human close_hood ()) -3> (human IDLE []) prev=#1 next=[]
new_e_flagged_nodes : 
	6.0 Flag.E Type.F#2, (human close_hood ()) -3> (human IDLE []) prev=#1 next=[]
e_flagged_nodes :
	5.0 Flag.E Type.I#3, (human close_hood ()) -1> (human close_hood ()) prev=#1 next=[]
	6.0 Flag.E Type.F#2, (human close_hood ()) -3> (human IDLE []) prev=#1 next=[]
Ns before check = None
Nf = 6.0 Flag.E Type.F#2, (human close_hood ()) -3> (human IDLE []) prev=#1 next=[]
new Ns!
Ns after check = 6.0 Flag.S Type.F#2, (human close_hood ()) -3> (human IDLE []) prev=#1 next=[]
e_flagged_nodes after check solution:
	5.0 Flag.E Type.I#3, (human close_hood ()) -1> (human close_hood ()) prev=#1 next=[]

<@> picked node = 5.0 Flag.E Type.I#3, (human close_hood ()) -1> (human close_hood ()) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 6-RP-store_oil()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [6-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 65-RP-store_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
human- Refine agenda with r_beliefs
refinement:
[
	dec_handling_lights_start_checking: [DecompType.AGENDA_EMPTY]
]
refinement_r:
[
	dec_handling_lights_start_checking: [DecompType.AGENDA_EMPTY]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [DecompType.AGENDA_EMPTY]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [DecompType.AGENDA_EMPTY]
]
decomp  0
decomp_h.subtasks= []
decomp_r.subtasks= []
len(decomp_h.subtasks)= 0
len(decomp_r.subtasks)= 0
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 66-HP-IDLE[]-0.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : dec_handling_lights_start_checking
	0-RA-Car_maintenance() => [67-RP-go_front_car()-0.0 - 68-RP-refill_washer()-0.0 - 69-RP-refill_oil()-0.0 - 70-RP-store_oil()-0.0] : dec_car_maintenance_R
	67-RP-go_front_car()-0.0 => [67-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[68-RP-refill_washer()-0.0, 69-RP-refill_oil()-0.0, 70-RP-store_oil()-0.0]
	68-RP-refill_washer()-0.0 => [68-RP-refill_washer()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[69-RP-refill_oil()-0.0, 70-RP-store_oil()-0.0]
	69-RP-refill_oil()-0.0 => [69-RP-refill_oil()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[70-RP-store_oil()-0.0]
	70-RP-store_oil()-0.0 => [70-RP-store_oil()-0.0] : 
[92m	already done[0m
	70-RP-store_oil()-0.0 => DecompType.BOTH_AGENDAS_EMPTY
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 6.0 Flag.E Type.F#3, (human close_hood ()) -3> (human IDLE []) prev=#1 next=[]
new_e_flagged_nodes : 
	6.0 Flag.E Type.F#3, (human close_hood ()) -3> (human IDLE []) prev=#1 next=[]
e_flagged_nodes :
	6.0 Flag.E Type.F#3, (human close_hood ()) -3> (human IDLE []) prev=#1 next=[]
Ns before check = 6.0 Flag.S Type.F#2, (human close_hood ()) -3> (human IDLE []) prev=#1 next=[]
Nf = 6.0 Flag.E Type.F#3, (human close_hood ()) -3> (human IDLE []) prev=#1 next=[]
Ns after check = 6.0 Flag.S Type.F#2, (human close_hood ()) -3> (human IDLE []) prev=#1 next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 47ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 47ms
Non relevant div:
False
Plans:
23-RP-COM_ALIGN['oil-None-low']-3.0 24-RP-refill_oil()-1.0 57-HP-close_hood()-1.0 59-RP-store_oil()-1.0 60-HP-IDLE[]-0.0/23-RP-COM_ALIGN['oil-None-low']-3.0 24-RP-refill_oil()-1.0 58-HP-close_hood()-1.0 65-RP-store_oil()-1.0 66-HP-IDLE[]-0.0
