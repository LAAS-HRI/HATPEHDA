RUN N=120 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = front 	ObsType.OBS 	loc=front
|| robot_init.at_human = front 	ObsType.OBS 	loc=front
|| robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
|| robot_init.washer = low 	ObsType.OBS 	loc=front
|| robot_init.oil = low 	ObsType.INF 	loc=front
|| robot_init.hood = open 	ObsType.OBS 	loc=front
|| robot_init.rear_light = new 	ObsType.INF 	loc=rear
|| robot_init.left_light = ok 	ObsType.INF 	loc=front
|| robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
|| human_init.at_robot = front
|| human_init.at_human = front
|| human_init.at_oil_bottle = front
|| human_init.washer = full
|| human_init.oil = low
|| human_init.hood = open
|| human_init.rear_light = old
|| human_init.left_light = ok
|| human_init.right_light = ok
|________________________________________________________________________
Start first exploration
SA: human assessed washer <- low
first node = 0.0 Flag.E Type.I#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : origin
	0-RA-Car_maintenance() => [3-RP-go_front_car()-0.0 - 4-RP-refill_washer()-0.0 - 5-RP-refill_oil()-0.0 - 6-RP-store_oil()-0.0] : dec_car_maintenance_R
	3-RP-go_front_car()-0.0 => [3-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[4-RP-refill_washer()-0.0, 5-RP-refill_oil()-0.0, 6-RP-store_oil()-0.0]
	end 0
refinement = 
[
	origin: [4-RP-refill_washer()-0.0 - 5-RP-refill_oil()-0.0 - 6-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 7-RP-refill_washer()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-5-RP-refill_oil()-0.0
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [8-HA-Handling_lights() - 9-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 8-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	8-HA-Handling_lights() => [10-HA-Replacing_rear_light() - 11-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [12-HA-Checking_front_lights(), 13-HA-Replacing_rear_light(), 9-HA-Closing_hood()]
	10-HA-Replacing_rear_light() => [14-HP-go_behind_car()-0.0 - 15-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	12-HA-Checking_front_lights() => [16-HP-go_front_car()-0.0 - 17-HP-check_left_light()-0.0 - 18-HP-check_right_light()-0.0] : dec_checking_front_ligths
	16-HP-go_front_car()-0.0 => [16-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[17-HP-check_left_light()-0.0, 18-HP-check_right_light()-0.0, 13-HA-Replacing_rear_light(), 9-HA-Closing_hood()]
	17-HP-check_left_light()-0.0 => [17-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[18-HP-check_right_light()-0.0, 13-HA-Replacing_rear_light(), 9-HA-Closing_hood()]
	18-HP-check_right_light()-0.0 => [18-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[13-HA-Replacing_rear_light(), 9-HA-Closing_hood()]
	13-HA-Replacing_rear_light() => [19-HP-go_behind_car()-0.0 - 20-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 1
human- Refine agenda with r_beliefs
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [21-HA-Handling_lights() - 22-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 21-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	21-HA-Handling_lights() => [23-HA-Replacing_rear_light() - 24-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [25-HA-Checking_front_lights(), 26-HA-Replacing_rear_light(), 22-HA-Closing_hood()]
	23-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[24-HA-Checking_front_lights(), 22-HA-Closing_hood()]
	24-HA-Checking_front_lights() => [27-HP-go_front_car()-0.0 - 28-HP-check_left_light()-0.0 - 29-HP-check_right_light()-0.0] : dec_checking_front_ligths
	27-HP-go_front_car()-0.0 => [27-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[28-HP-check_left_light()-0.0, 29-HP-check_right_light()-0.0, 22-HA-Closing_hood()]
	28-HP-check_left_light()-0.0 => [28-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[29-HP-check_right_light()-0.0, 22-HA-Closing_hood()]
	29-HP-check_right_light()-0.0 => [29-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[22-HA-Closing_hood()]
	22-HA-Closing_hood() => [30-HP-go_front_car()-0.0 - 31-HP-close_hood()-0.0] : dec_closing_hood
	30-HP-go_front_car()-0.0 => [30-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[31-HP-close_hood()-0.0]
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	25-HA-Checking_front_lights() => [32-HP-go_front_car()-0.0 - 33-HP-check_left_light()-0.0 - 34-HP-check_right_light()-0.0] : dec_checking_front_ligths
	32-HP-go_front_car()-0.0 => [32-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[33-HP-check_left_light()-0.0, 34-HP-check_right_light()-0.0, 26-HA-Replacing_rear_light(), 22-HA-Closing_hood()]
	33-HP-check_left_light()-0.0 => [33-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[34-HP-check_right_light()-0.0, 26-HA-Replacing_rear_light(), 22-HA-Closing_hood()]
	34-HP-check_right_light()-0.0 => [34-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[26-HA-Replacing_rear_light(), 22-HA-Closing_hood()]
	26-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[22-HA-Closing_hood()]
	22-HA-Closing_hood() => [35-HP-go_front_car()-0.0 - 36-HP-close_hood()-0.0] : dec_closing_hood
	35-HP-go_front_car()-0.0 => [35-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[36-HP-close_hood()-0.0]
	end 1
refinement:
[
	dec_handling_lights_start_replace: [14-HP-go_behind_car()-0.0 - 15-HP-replace_rear_light()-0.0 - 11-HA-Checking_front_lights() - 9-HA-Closing_hood()]
	dec_handling_lights_start_checking: [19-HP-go_behind_car()-0.0 - 20-HP-replace_rear_light()-0.0 - 9-HA-Closing_hood()]
]
refinement_r:
[
	dec_handling_lights_start_replace: [31-HP-close_hood()-0.0]
	dec_handling_lights_start_checking: [36-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [31-HP-close_hood()-0.0]
	dec_handling_lights_start_checking: [36-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [14-HP-go_behind_car()-0.0 - 15-HP-replace_rear_light()-0.0 - 11-HA-Checking_front_lights() - 9-HA-Closing_hood()]
	dec_handling_lights_start_checking: [19-HP-go_behind_car()-0.0 - 20-HP-replace_rear_light()-0.0 - 9-HA-Closing_hood()]
]
decomp  0
decomp_h.subtasks= [14-HP-go_behind_car()-0.0, 15-HP-replace_rear_light()-0.0, 11-HA-Checking_front_lights(), 9-HA-Closing_hood()]
decomp_r.subtasks= [31-HP-close_hood()-0.0]
Not same number of subtasks
NEED of belief alignment!

# UPDATE belief divergences
	rear_light:None: H=old R=new

Testing with 1 relevant divergence
divergence tested = rear_light:None: H=old R=new
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : 
	1-HA-Car_maintenance() => [37-HA-Handling_lights() - 38-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 37-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	37-HA-Handling_lights() => [39-HA-Replacing_rear_light() - 40-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [41-HA-Checking_front_lights(), 42-HA-Replacing_rear_light(), 38-HA-Closing_hood()]
	39-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[40-HA-Checking_front_lights(), 38-HA-Closing_hood()]
	40-HA-Checking_front_lights() => [43-HP-go_front_car()-0.0 - 44-HP-check_left_light()-0.0 - 45-HP-check_right_light()-0.0] : dec_checking_front_ligths
	43-HP-go_front_car()-0.0 => [43-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[44-HP-check_left_light()-0.0, 45-HP-check_right_light()-0.0, 38-HA-Closing_hood()]
	44-HP-check_left_light()-0.0 => [44-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[45-HP-check_right_light()-0.0, 38-HA-Closing_hood()]
	45-HP-check_right_light()-0.0 => [45-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[38-HA-Closing_hood()]
	38-HA-Closing_hood() => [46-HP-go_front_car()-0.0 - 47-HP-close_hood()-0.0] : dec_closing_hood
	46-HP-go_front_car()-0.0 => [46-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[47-HP-close_hood()-0.0]
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	41-HA-Checking_front_lights() => [48-HP-go_front_car()-0.0 - 49-HP-check_left_light()-0.0 - 50-HP-check_right_light()-0.0] : dec_checking_front_ligths
	48-HP-go_front_car()-0.0 => [48-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[49-HP-check_left_light()-0.0, 50-HP-check_right_light()-0.0, 42-HA-Replacing_rear_light(), 38-HA-Closing_hood()]
	49-HP-check_left_light()-0.0 => [49-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[50-HP-check_right_light()-0.0, 42-HA-Replacing_rear_light(), 38-HA-Closing_hood()]
	50-HP-check_right_light()-0.0 => [50-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[42-HA-Replacing_rear_light(), 38-HA-Closing_hood()]
	42-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[38-HA-Closing_hood()]
	38-HA-Closing_hood() => [51-HP-go_front_car()-0.0 - 52-HP-close_hood()-0.0] : dec_closing_hood
	51-HP-go_front_car()-0.0 => [51-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[52-HP-close_hood()-0.0]
	end 1
ref_aligned 1:
[
	dec_handling_lights_start_replace: [47-HP-close_hood()-0.0]
	dec_handling_lights_start_checking: [52-HP-close_hood()-0.0]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [31-HP-close_hood()-0.0]
	dec_handling_lights_start_checking: [36-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [47-HP-close_hood()-0.0]
	dec_handling_lights_start_checking: [52-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [47-HP-close_hood()-0.0]
decomp_r.subtasks= [31-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-5-RP-refill_oil()-0.0
||	-6-RP-store_oil()-0.0
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
[93m47-HP-close_hood()-0.0 not applicable[0m
[93m47-HP-close_hood()-0.0 not applicable[0m
same effects
decomp  1
decomp_h.subtasks= [52-HP-close_hood()-0.0]
decomp_r.subtasks= [36-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 1
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-5-RP-refill_oil()-0.0
||	-6-RP-store_oil()-0.0
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
[93m52-HP-close_hood()-0.0 not applicable[0m
[93m52-HP-close_hood()-0.0 not applicable[0m
same effects
no alignment needed
	divergence is relevant!
Relevant divergences to correct : 	rear_light:None: H=old R=new

COM: com action added = 53-RP-COM_ALIGN['rear_light-None-new']-3.0
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [54-HA-Handling_lights() - 55-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 54-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	54-HA-Handling_lights() => [56-HA-Replacing_rear_light() - 57-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [58-HA-Checking_front_lights(), 59-HA-Replacing_rear_light(), 55-HA-Closing_hood()]
	56-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[57-HA-Checking_front_lights(), 55-HA-Closing_hood()]
	57-HA-Checking_front_lights() => [60-HP-go_front_car()-0.0 - 61-HP-check_left_light()-0.0 - 62-HP-check_right_light()-0.0] : dec_checking_front_ligths
	60-HP-go_front_car()-0.0 => [60-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[61-HP-check_left_light()-0.0, 62-HP-check_right_light()-0.0, 55-HA-Closing_hood()]
	61-HP-check_left_light()-0.0 => [61-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[62-HP-check_right_light()-0.0, 55-HA-Closing_hood()]
	62-HP-check_right_light()-0.0 => [62-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[55-HA-Closing_hood()]
	55-HA-Closing_hood() => [63-HP-go_front_car()-0.0 - 64-HP-close_hood()-0.0] : dec_closing_hood
	63-HP-go_front_car()-0.0 => [63-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[64-HP-close_hood()-0.0]
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	58-HA-Checking_front_lights() => [65-HP-go_front_car()-0.0 - 66-HP-check_left_light()-0.0 - 67-HP-check_right_light()-0.0] : dec_checking_front_ligths
	65-HP-go_front_car()-0.0 => [65-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[66-HP-check_left_light()-0.0, 67-HP-check_right_light()-0.0, 59-HA-Replacing_rear_light(), 55-HA-Closing_hood()]
	66-HP-check_left_light()-0.0 => [66-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[67-HP-check_right_light()-0.0, 59-HA-Replacing_rear_light(), 55-HA-Closing_hood()]
	67-HP-check_right_light()-0.0 => [67-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[59-HA-Replacing_rear_light(), 55-HA-Closing_hood()]
	59-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[55-HA-Closing_hood()]
	55-HA-Closing_hood() => [68-HP-go_front_car()-0.0 - 69-HP-close_hood()-0.0] : dec_closing_hood
	68-HP-go_front_car()-0.0 => [68-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[69-HP-close_hood()-0.0]
	end 1
refinement = 
[
	dec_handling_lights_start_replace: [64-HP-close_hood()-0.0]
	dec_handling_lights_start_checking: [69-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
[93m64-HP-close_hood()-0.0 not applicable[0m
close_hood not feasible...
Decomp OK
apply acting agent
[93m69-HP-close_hood()-0.0 not applicable[0m
close_hood not feasible...
applied refinement = 
next actions:
	- 70-HP-WAIT[]-2.0
	- 71-HP-WAIT[]-2.0

=> end explo
node explored = 4.0 Flag.F Type.H#1, (human BEGIN []) -2> (robot refill_washer ()) prev=None next=[#2 #3]
new_e_flagged_nodes : 
	6.0 Flag.E Type.I#2, (human WAIT []) -1> (human WAIT []) prev=#1 next=[]
	6.0 Flag.E Type.I#3, (human WAIT []) -1> (human WAIT []) prev=#1 next=[]
e_flagged_nodes :
	6.0 Flag.E Type.I#2, (human WAIT []) -1> (human WAIT []) prev=#1 next=[]
	6.0 Flag.E Type.I#3, (human WAIT []) -1> (human WAIT []) prev=#1 next=[]
Ns before check = None
Nf = None
Ns after check = None
e_flagged_nodes after check solution:
	6.0 Flag.E Type.I#2, (human WAIT []) -1> (human WAIT []) prev=#1 next=[]
	6.0 Flag.E Type.I#3, (human WAIT []) -1> (human WAIT []) prev=#1 next=[]

<@> picked node = 6.0 Flag.E Type.I#2, (human WAIT []) -1> (human WAIT []) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-5-RP-refill_oil()-0.0
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-64-HP-close_hood()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 5-RP-refill_oil()-0.0
decomp i= 0 : origin
	end 0
refinement = 
[
	origin: [5-RP-refill_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-64-HP-close_hood()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 72-RP-refill_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-64-HP-close_hood()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 64-HP-close_hood()-0.0
decomp i= 0 : origin
	end 0
human- Refine agenda with r_beliefs
Task to refine: 64-HP-close_hood()-0.0
decomp i= 0 : origin
	end 0
refinement:
[
	origin: [64-HP-close_hood()-0.0]
]
refinement_r:
[
	origin: [64-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	origin: [64-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	origin: [64-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [64-HP-close_hood()-0.0]
decomp_r.subtasks= [64-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	origin: [64-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 73-HP-close_hood()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 6-RP-store_oil()-0.0
decomp i= 0 : origin
	end 0
refinement = 
[
	origin: [6-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 74-RP-store_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
human- Refine agenda with r_beliefs
refinement:
[
	origin: [DecompType.BOTH_AGENDAS_EMPTY]
]
refinement_r:
[
	origin: [DecompType.BOTH_AGENDAS_EMPTY]
]
refinement_r_beliefs:
[
	origin: [DecompType.BOTH_AGENDAS_EMPTY]
]
refinement_h_beliefs:
[
	origin: [DecompType.BOTH_AGENDAS_EMPTY]
]
decomp  0
decomp_h.subtasks= []
decomp_r.subtasks= []
len(decomp_h.subtasks)= 0
len(decomp_r.subtasks)= 0
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	origin: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 9.0 Flag.E Type.F#2, (human WAIT []) -4> (robot store_oil ()) prev=#1 next=[]
new_e_flagged_nodes : 
	9.0 Flag.E Type.F#2, (human WAIT []) -4> (robot store_oil ()) prev=#1 next=[]
e_flagged_nodes :
	6.0 Flag.E Type.I#3, (human WAIT []) -1> (human WAIT []) prev=#1 next=[]
	9.0 Flag.E Type.F#2, (human WAIT []) -4> (robot store_oil ()) prev=#1 next=[]
Ns before check = None
Nf = 9.0 Flag.E Type.F#2, (human WAIT []) -4> (robot store_oil ()) prev=#1 next=[]
new Ns!
Ns after check = 9.0 Flag.S Type.F#2, (human WAIT []) -4> (robot store_oil ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	6.0 Flag.E Type.I#3, (human WAIT []) -1> (human WAIT []) prev=#1 next=[]

<@> picked node = 6.0 Flag.E Type.I#3, (human WAIT []) -1> (human WAIT []) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-5-RP-refill_oil()-0.0
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-69-HP-close_hood()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 5-RP-refill_oil()-0.0
decomp i= 0 : origin
	end 0
refinement = 
[
	origin: [5-RP-refill_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-69-HP-close_hood()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 75-RP-refill_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-69-HP-close_hood()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 69-HP-close_hood()-0.0
decomp i= 0 : origin
	end 0
human- Refine agenda with r_beliefs
Task to refine: 69-HP-close_hood()-0.0
decomp i= 0 : origin
	end 0
refinement:
[
	origin: [69-HP-close_hood()-0.0]
]
refinement_r:
[
	origin: [69-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	origin: [69-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	origin: [69-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [69-HP-close_hood()-0.0]
decomp_r.subtasks= [69-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	origin: [69-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 76-HP-close_hood()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 6-RP-store_oil()-0.0
decomp i= 0 : origin
	end 0
refinement = 
[
	origin: [6-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 77-RP-store_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
human- Refine agenda with r_beliefs
refinement:
[
	origin: [DecompType.BOTH_AGENDAS_EMPTY]
]
refinement_r:
[
	origin: [DecompType.BOTH_AGENDAS_EMPTY]
]
refinement_r_beliefs:
[
	origin: [DecompType.BOTH_AGENDAS_EMPTY]
]
refinement_h_beliefs:
[
	origin: [DecompType.BOTH_AGENDAS_EMPTY]
]
decomp  0
decomp_h.subtasks= []
decomp_r.subtasks= []
len(decomp_h.subtasks)= 0
len(decomp_r.subtasks)= 0
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	origin: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 9.0 Flag.E Type.F#3, (human WAIT []) -4> (robot store_oil ()) prev=#1 next=[]
new_e_flagged_nodes : 
	9.0 Flag.E Type.F#3, (human WAIT []) -4> (robot store_oil ()) prev=#1 next=[]
e_flagged_nodes :
	9.0 Flag.E Type.F#3, (human WAIT []) -4> (robot store_oil ()) prev=#1 next=[]
Ns before check = 9.0 Flag.S Type.F#2, (human WAIT []) -4> (robot store_oil ()) prev=#1 next=[]
Nf = 9.0 Flag.E Type.F#3, (human WAIT []) -4> (robot store_oil ()) prev=#1 next=[]
Ns after check = 9.0 Flag.S Type.F#2, (human WAIT []) -4> (robot store_oil ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 61ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 61ms
Non relevant div:
False
Plans:
7-RP-refill_washer()-1.0 53-RP-COM_ALIGN['rear_light-None-new']-3.0 70-HP-WAIT[]-2.0 72-RP-refill_oil()-1.0 73-HP-close_hood()-1.0 74-RP-store_oil()-1.0/7-RP-refill_washer()-1.0 53-RP-COM_ALIGN['rear_light-None-new']-3.0 71-HP-WAIT[]-2.0 75-RP-refill_oil()-1.0 76-HP-close_hood()-1.0 77-RP-store_oil()-1.0
