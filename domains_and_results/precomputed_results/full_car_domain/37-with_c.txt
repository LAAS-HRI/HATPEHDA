RUN N=37 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = front 	ObsType.OBS 	loc=front
|| robot_init.at_human = front 	ObsType.OBS 	loc=front
|| robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
|| robot_init.washer = low 	ObsType.OBS 	loc=front
|| robot_init.oil = low 	ObsType.INF 	loc=front
|| robot_init.hood = open 	ObsType.OBS 	loc=front
|| robot_init.rear_light = old 	ObsType.INF 	loc=rear
|| robot_init.left_light = ok 	ObsType.INF 	loc=front
|| robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
|| human_init.at_robot = front
|| human_init.at_human = front
|| human_init.at_oil_bottle = front
|| human_init.washer = low
|| human_init.oil = full
|| human_init.hood = open
|| human_init.rear_light = old
|| human_init.left_light = ok
|| human_init.right_light = todo
|________________________________________________________________________
Start first exploration
first node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
human- Refine agenda
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [3-HA-Handling_lights() - 4-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 3-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	3-HA-Handling_lights() => [5-HA-Replacing_rear_light() - 6-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [7-HA-Checking_front_lights(), 8-HA-Replacing_rear_light(), 4-HA-Closing_hood()]
	5-HA-Replacing_rear_light() => [9-HP-go_behind_car()-0.0 - 10-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	7-HA-Checking_front_lights() => [11-HP-go_front_car()-0.0 - 12-HP-check_left_light()-0.0 - 13-HP-check_right_light()-0.0] : dec_checking_front_ligths
	11-HP-go_front_car()-0.0 => [11-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[12-HP-check_left_light()-0.0, 13-HP-check_right_light()-0.0, 8-HA-Replacing_rear_light(), 4-HA-Closing_hood()]
	12-HP-check_left_light()-0.0 => [12-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[13-HP-check_right_light()-0.0, 8-HA-Replacing_rear_light(), 4-HA-Closing_hood()]
	end 1
human- Refine agenda with r_beliefs
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [14-HA-Handling_lights() - 15-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 14-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	14-HA-Handling_lights() => [16-HA-Replacing_rear_light() - 17-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [18-HA-Checking_front_lights(), 19-HA-Replacing_rear_light(), 15-HA-Closing_hood()]
	16-HA-Replacing_rear_light() => [20-HP-go_behind_car()-0.0 - 21-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	18-HA-Checking_front_lights() => [22-HP-go_front_car()-0.0 - 23-HP-check_left_light()-0.0 - 24-HP-check_right_light()-0.0] : dec_checking_front_ligths
	22-HP-go_front_car()-0.0 => [22-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[23-HP-check_left_light()-0.0, 24-HP-check_right_light()-0.0, 19-HA-Replacing_rear_light(), 15-HA-Closing_hood()]
	23-HP-check_left_light()-0.0 => [23-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[24-HP-check_right_light()-0.0, 19-HA-Replacing_rear_light(), 15-HA-Closing_hood()]
	end 1
refinement:
[
	dec_handling_lights_start_replace: [9-HP-go_behind_car()-0.0 - 10-HP-replace_rear_light()-0.0 - 6-HA-Checking_front_lights() - 4-HA-Closing_hood()]
	dec_handling_lights_start_checking: [13-HP-check_right_light()-0.0 - 8-HA-Replacing_rear_light() - 4-HA-Closing_hood()]
]
refinement_r:
[
	dec_handling_lights_start_replace: [20-HP-go_behind_car()-0.0 - 21-HP-replace_rear_light()-0.0 - 17-HA-Checking_front_lights() - 15-HA-Closing_hood()]
	dec_handling_lights_start_checking: [24-HP-check_right_light()-0.0 - 19-HA-Replacing_rear_light() - 15-HA-Closing_hood()]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [20-HP-go_behind_car()-0.0 - 21-HP-replace_rear_light()-0.0 - 17-HA-Checking_front_lights() - 15-HA-Closing_hood()]
	dec_handling_lights_start_checking: [24-HP-check_right_light()-0.0 - 19-HA-Replacing_rear_light() - 15-HA-Closing_hood()]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [9-HP-go_behind_car()-0.0 - 10-HP-replace_rear_light()-0.0 - 6-HA-Checking_front_lights() - 4-HA-Closing_hood()]
	dec_handling_lights_start_checking: [13-HP-check_right_light()-0.0 - 8-HA-Replacing_rear_light() - 4-HA-Closing_hood()]
]
decomp  0
decomp_h.subtasks= [9-HP-go_behind_car()-0.0, 10-HP-replace_rear_light()-0.0, 6-HA-Checking_front_lights(), 4-HA-Closing_hood()]
decomp_r.subtasks= [20-HP-go_behind_car()-0.0, 21-HP-replace_rear_light()-0.0, 17-HA-Checking_front_lights(), 15-HA-Closing_hood()]
len(decomp_h.subtasks)= 4
len(decomp_r.subtasks)= 4
i= 0
i= 0
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
same effects
decomp  1
decomp_h.subtasks= [13-HP-check_right_light()-0.0, 8-HA-Replacing_rear_light(), 4-HA-Closing_hood()]
decomp_r.subtasks= [24-HP-check_right_light()-0.0, 19-HA-Replacing_rear_light(), 15-HA-Closing_hood()]
len(decomp_h.subtasks)= 3
len(decomp_r.subtasks)= 3
i= 1
i= 1
i= 1
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [9-HP-go_behind_car()-0.0 - 10-HP-replace_rear_light()-0.0 - 6-HA-Checking_front_lights() - 4-HA-Closing_hood()]
	dec_handling_lights_start_checking: [13-HP-check_right_light()-0.0 - 8-HA-Replacing_rear_light() - 4-HA-Closing_hood()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 25-HP-go_behind_car()-1.0
	- 26-HP-check_right_light()-1.0

=> end explo
node explored = 0.0 Flag.F Type.H#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[#2 #3]
new_e_flagged_nodes : 
	1.0 Flag.E Type.I#2, (human go_behind_car ()) -1> (human go_behind_car ()) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (human check_right_light ()) -1> (human check_right_light ()) prev=#1 next=[]
e_flagged_nodes :
	1.0 Flag.E Type.I#2, (human go_behind_car ()) -1> (human go_behind_car ()) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (human check_right_light ()) -1> (human check_right_light ()) prev=#1 next=[]
Ns before check = None
Nf = None
Ns after check = None
e_flagged_nodes after check solution:
	1.0 Flag.E Type.I#2, (human go_behind_car ()) -1> (human go_behind_car ()) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (human check_right_light ()) -1> (human check_right_light ()) prev=#1 next=[]

<@> picked node = 1.0 Flag.E Type.I#2, (human go_behind_car ()) -1> (human go_behind_car ()) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-10-HP-replace_rear_light()-0.0
||	-6-HA-Checking_front_lights()
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : dec_handling_lights_start_replace
	0-RA-Car_maintenance() => [27-RP-go_front_car()-0.0 - 28-RP-refill_washer()-0.0 - 29-RP-refill_oil()-0.0 - 30-RP-store_oil()-0.0] : dec_car_maintenance_R
	27-RP-go_front_car()-0.0 => [27-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[28-RP-refill_washer()-0.0, 29-RP-refill_oil()-0.0, 30-RP-store_oil()-0.0]
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [28-RP-refill_washer()-0.0 - 29-RP-refill_oil()-0.0 - 30-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-10-HP-replace_rear_light()-0.0
||	-6-HA-Checking_front_lights()
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 31-RP-refill_washer()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-29-RP-refill_oil()-0.0
||	-30-RP-store_oil()-0.0
| AGENDA human =
||	-10-HP-replace_rear_light()-0.0
||	-6-HA-Checking_front_lights()
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
human- Refine agenda
Task to refine: 10-HP-replace_rear_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
human- Refine agenda with r_beliefs
Task to refine: 10-HP-replace_rear_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
refinement:
[
	dec_handling_lights_start_replace: [10-HP-replace_rear_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [10-HP-replace_rear_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [10-HP-replace_rear_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [10-HP-replace_rear_light()-0.0]
]
decomp  0
decomp_h.subtasks= [10-HP-replace_rear_light()-0.0]
decomp_r.subtasks= [10-HP-replace_rear_light()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-29-RP-refill_oil()-0.0
||	-30-RP-store_oil()-0.0
| AGENDA human =
||	-6-HA-Checking_front_lights()
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [10-HP-replace_rear_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 32-HP-replace_rear_light()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-29-RP-refill_oil()-0.0
||	-30-RP-store_oil()-0.0
| AGENDA human =
||	-6-HA-Checking_front_lights()
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
robot- Refine agenda
Task to refine: 29-RP-refill_oil()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [29-RP-refill_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-30-RP-store_oil()-0.0
| AGENDA human =
||	-6-HA-Checking_front_lights()
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
[93malready done[0m
[93m29-RP-refill_oil()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs

# UPDATE belief divergences
	washer:None: H=low R=full
	oil:None: H=full R=low

Testing with 1 relevant divergence
divergence tested = washer:None: H=low R=full
Task to refine: 6-HA-Checking_front_lights()
decomp i= 0 : 
	6-HA-Checking_front_lights() => [33-HP-go_front_car()-0.0 - 34-HP-check_left_light()-0.0 - 35-HP-check_right_light()-0.0] : dec_checking_front_ligths
	end 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-29-RP-refill_oil()-0.0
||	-30-RP-store_oil()-0.0
| AGENDA human =
||	-6-HA-Checking_front_lights()
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
[93malready done[0m
[93m29-RP-refill_oil()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
	divergence isn't relevant
divergence tested = oil:None: H=full R=low
Task to refine: 6-HA-Checking_front_lights()
decomp i= 0 : 
	6-HA-Checking_front_lights() => [36-HP-go_front_car()-0.0 - 37-HP-check_left_light()-0.0 - 38-HP-check_right_light()-0.0] : dec_checking_front_ligths
	end 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-29-RP-refill_oil()-0.0
||	-30-RP-store_oil()-0.0
| AGENDA human =
||	-6-HA-Checking_front_lights()
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
same effects
	divergence is relevant!
Relevant divergences to correct : 	oil:None: H=full R=low

COM: com action added eff = 39-RP-COM_ALIGN['oil-None-low']-3.0
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 40-RP-refill_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-29-RP-refill_oil()-0.0
||	-30-RP-store_oil()-0.0
| AGENDA human =
||	-6-HA-Checking_front_lights()
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
human- Refine agenda
Task to refine: 6-HA-Checking_front_lights()
decomp i= 0 : dec_handling_lights_start_replace
	6-HA-Checking_front_lights() => [41-HP-go_front_car()-0.0 - 42-HP-check_left_light()-0.0 - 43-HP-check_right_light()-0.0] : dec_checking_front_ligths
	end 0
human- Refine agenda with r_beliefs
Task to refine: 6-HA-Checking_front_lights()
decomp i= 0 : dec_handling_lights_start_replace
	6-HA-Checking_front_lights() => [44-HP-go_front_car()-0.0 - 45-HP-check_left_light()-0.0 - 46-HP-check_right_light()-0.0] : dec_checking_front_ligths
	end 0
refinement:
[
	dec_handling_lights_start_replace: [41-HP-go_front_car()-0.0 - 42-HP-check_left_light()-0.0 - 43-HP-check_right_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [44-HP-go_front_car()-0.0 - 45-HP-check_left_light()-0.0 - 46-HP-check_right_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [44-HP-go_front_car()-0.0 - 45-HP-check_left_light()-0.0 - 46-HP-check_right_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [41-HP-go_front_car()-0.0 - 42-HP-check_left_light()-0.0 - 43-HP-check_right_light()-0.0]
]
decomp  0
decomp_h.subtasks= [41-HP-go_front_car()-0.0, 42-HP-check_left_light()-0.0, 43-HP-check_right_light()-0.0]
decomp_r.subtasks= [44-HP-go_front_car()-0.0, 45-HP-check_left_light()-0.0, 46-HP-check_right_light()-0.0]
len(decomp_h.subtasks)= 3
len(decomp_r.subtasks)= 3
i= 0
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-29-RP-refill_oil()-0.0
||	-30-RP-store_oil()-0.0
| AGENDA human =
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [41-HP-go_front_car()-0.0 - 42-HP-check_left_light()-0.0 - 43-HP-check_right_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed washer <- full
applied refinement = 
next actions:
	- 47-HP-go_front_car()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-29-RP-refill_oil()-0.0
||	-30-RP-store_oil()-0.0
| AGENDA human =
||	-42-HP-check_left_light()-0.0
||	-43-HP-check_right_light()-0.0
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
robot- Refine agenda
Task to refine: 29-RP-refill_oil()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	29-RP-refill_oil()-0.0 => [29-RP-refill_oil()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 30-RP-store_oil()-0.0
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [30-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-42-HP-check_left_light()-0.0
||	-43-HP-check_right_light()-0.0
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 48-RP-store_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-42-HP-check_left_light()-0.0
||	-43-HP-check_right_light()-0.0
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
human- Refine agenda
Task to refine: 42-HP-check_left_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	42-HP-check_left_light()-0.0 => [42-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 43-HP-check_right_light()-0.0
	end 0
human- Refine agenda with r_beliefs
Task to refine: 42-HP-check_left_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	42-HP-check_left_light()-0.0 => [42-HP-check_left_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 43-HP-check_right_light()-0.0
	end 0
refinement:
[
	dec_handling_lights_start_replace: [43-HP-check_right_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [43-HP-check_right_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [43-HP-check_right_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [43-HP-check_right_light()-0.0]
]
decomp  0
decomp_h.subtasks= [43-HP-check_right_light()-0.0]
decomp_r.subtasks= [43-HP-check_right_light()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = todo 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = todo
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [43-HP-check_right_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 49-HP-check_right_light()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_replace: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 50-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 4-HA-Closing_hood()
decomp i= 0 : dec_handling_lights_start_replace
	4-HA-Closing_hood() => [51-HP-go_front_car()-0.0 - 52-HP-close_hood()-0.0] : dec_closing_hood
	51-HP-go_front_car()-0.0 => [51-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[52-HP-close_hood()-0.0]
	end 0
human- Refine agenda with r_beliefs
Task to refine: 4-HA-Closing_hood()
decomp i= 0 : dec_handling_lights_start_replace
	4-HA-Closing_hood() => [53-HP-go_front_car()-0.0 - 54-HP-close_hood()-0.0] : dec_closing_hood
	53-HP-go_front_car()-0.0 => [53-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[54-HP-close_hood()-0.0]
	end 0
refinement:
[
	dec_handling_lights_start_replace: [52-HP-close_hood()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [54-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [54-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [52-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [52-HP-close_hood()-0.0]
decomp_r.subtasks= [54-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
[93m52-HP-close_hood()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
NEED of belief alignment!

# UPDATE belief divergences
	oil:None: H=low R=full

Testing with 1 relevant divergence
divergence tested = oil:None: H=low R=full
Task to refine: 4-HA-Closing_hood()
decomp i= 0 : 
	4-HA-Closing_hood() => [55-HP-go_front_car()-0.0 - 56-HP-close_hood()-0.0] : dec_closing_hood
	55-HP-go_front_car()-0.0 => [55-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[56-HP-close_hood()-0.0]
	end 0
ref_aligned 1:
[
	: [56-HP-close_hood()-0.0]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [54-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	: [56-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [56-HP-close_hood()-0.0]
decomp_r.subtasks= [54-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
	divergence is relevant!
Relevant divergences to correct : 	oil:None: H=low R=full

COM: com action added = 57-RP-COM_ALIGN['oil-None-full']-3.0
Task to refine: 4-HA-Closing_hood()
decomp i= 0 : dec_handling_lights_start_replace
	4-HA-Closing_hood() => [58-HP-go_front_car()-0.0 - 59-HP-close_hood()-0.0] : dec_closing_hood
	58-HP-go_front_car()-0.0 => [58-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[59-HP-close_hood()-0.0]
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [59-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 60-HP-close_hood()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_replace: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 14.0 Flag.E Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
new_e_flagged_nodes : 
	14.0 Flag.E Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes :
	1.0 Flag.E Type.I#3, (human check_right_light ()) -1> (human check_right_light ()) prev=#1 next=[]
	14.0 Flag.E Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
Ns before check = None
Nf = 14.0 Flag.E Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
new Ns!
Ns after check = 14.0 Flag.S Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	1.0 Flag.E Type.I#3, (human check_right_light ()) -1> (human check_right_light ()) prev=#1 next=[]

<@> picked node = 1.0 Flag.E Type.I#3, (human check_right_light ()) -1> (human check_right_light ()) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-8-HA-Replacing_rear_light()
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : dec_handling_lights_start_checking
	0-RA-Car_maintenance() => [61-RP-go_front_car()-0.0 - 62-RP-refill_washer()-0.0 - 63-RP-refill_oil()-0.0 - 64-RP-store_oil()-0.0] : dec_car_maintenance_R
	61-RP-go_front_car()-0.0 => [61-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[62-RP-refill_washer()-0.0, 63-RP-refill_oil()-0.0, 64-RP-store_oil()-0.0]
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [62-RP-refill_washer()-0.0 - 63-RP-refill_oil()-0.0 - 64-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-8-HA-Replacing_rear_light()
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 65-RP-refill_washer()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-63-RP-refill_oil()-0.0
||	-64-RP-store_oil()-0.0
| AGENDA human =
||	-8-HA-Replacing_rear_light()
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 8-HA-Replacing_rear_light()
decomp i= 0 : dec_handling_lights_start_checking
	8-HA-Replacing_rear_light() => [66-HP-go_behind_car()-0.0 - 67-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
human- Refine agenda with r_beliefs
Task to refine: 8-HA-Replacing_rear_light()
decomp i= 0 : dec_handling_lights_start_checking
	8-HA-Replacing_rear_light() => [68-HP-go_behind_car()-0.0 - 69-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
refinement:
[
	dec_handling_lights_start_checking: [66-HP-go_behind_car()-0.0 - 67-HP-replace_rear_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [68-HP-go_behind_car()-0.0 - 69-HP-replace_rear_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [68-HP-go_behind_car()-0.0 - 69-HP-replace_rear_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [66-HP-go_behind_car()-0.0 - 67-HP-replace_rear_light()-0.0]
]
decomp  0
decomp_h.subtasks= [66-HP-go_behind_car()-0.0, 67-HP-replace_rear_light()-0.0]
decomp_r.subtasks= [68-HP-go_behind_car()-0.0, 69-HP-replace_rear_light()-0.0]
len(decomp_h.subtasks)= 2
len(decomp_r.subtasks)= 2
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-63-RP-refill_oil()-0.0
||	-64-RP-store_oil()-0.0
| AGENDA human =
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [66-HP-go_behind_car()-0.0 - 67-HP-replace_rear_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 70-HP-go_behind_car()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-63-RP-refill_oil()-0.0
||	-64-RP-store_oil()-0.0
| AGENDA human =
||	-67-HP-replace_rear_light()-0.0
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 63-RP-refill_oil()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [63-RP-refill_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-64-RP-store_oil()-0.0
| AGENDA human =
||	-67-HP-replace_rear_light()-0.0
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
[93malready done[0m
[93m63-RP-refill_oil()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs

# UPDATE belief divergences
	oil:None: H=full R=low

Testing with 1 relevant divergence
divergence tested = oil:None: H=full R=low
Task to refine: 67-HP-replace_rear_light()-0.0
decomp i= 0 : 
	end 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-63-RP-refill_oil()-0.0
||	-64-RP-store_oil()-0.0
| AGENDA human =
||	-67-HP-replace_rear_light()-0.0
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
	divergence is relevant!
Relevant divergences to correct : 	oil:None: H=full R=low

COM: com action added eff = 71-RP-COM_ALIGN['oil-None-low']-3.0
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 72-RP-refill_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-63-RP-refill_oil()-0.0
||	-64-RP-store_oil()-0.0
| AGENDA human =
||	-67-HP-replace_rear_light()-0.0
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 67-HP-replace_rear_light()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
human- Refine agenda with r_beliefs
Task to refine: 67-HP-replace_rear_light()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement:
[
	dec_handling_lights_start_checking: [67-HP-replace_rear_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [67-HP-replace_rear_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [67-HP-replace_rear_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [67-HP-replace_rear_light()-0.0]
]
decomp  0
decomp_h.subtasks= [67-HP-replace_rear_light()-0.0]
decomp_r.subtasks= [67-HP-replace_rear_light()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-63-RP-refill_oil()-0.0
||	-64-RP-store_oil()-0.0
| AGENDA human =
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [67-HP-replace_rear_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 73-HP-replace_rear_light()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-63-RP-refill_oil()-0.0
||	-64-RP-store_oil()-0.0
| AGENDA human =
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 63-RP-refill_oil()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	63-RP-refill_oil()-0.0 => [63-RP-refill_oil()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 64-RP-store_oil()-0.0
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [64-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 74-RP-store_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-4-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 4-HA-Closing_hood()
decomp i= 0 : dec_handling_lights_start_checking
	4-HA-Closing_hood() => [75-HP-go_front_car()-0.0 - 76-HP-close_hood()-0.0] : dec_closing_hood
	end 0
human- Refine agenda with r_beliefs
Task to refine: 4-HA-Closing_hood()
decomp i= 0 : dec_handling_lights_start_checking
	4-HA-Closing_hood() => [77-HP-go_front_car()-0.0 - 78-HP-close_hood()-0.0] : dec_closing_hood
	end 0
refinement:
[
	dec_handling_lights_start_checking: [75-HP-go_front_car()-0.0 - 76-HP-close_hood()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [77-HP-go_front_car()-0.0 - 78-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [77-HP-go_front_car()-0.0 - 78-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [75-HP-go_front_car()-0.0 - 76-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [75-HP-go_front_car()-0.0, 76-HP-close_hood()-0.0]
decomp_r.subtasks= [77-HP-go_front_car()-0.0, 78-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 2
len(decomp_r.subtasks)= 2
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [75-HP-go_front_car()-0.0 - 76-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 79-HP-go_front_car()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-76-HP-close_hood()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_checking: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 80-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-76-HP-close_hood()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 76-HP-close_hood()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
human- Refine agenda with r_beliefs
Task to refine: 76-HP-close_hood()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement:
[
	dec_handling_lights_start_checking: [76-HP-close_hood()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [76-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [76-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [76-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [76-HP-close_hood()-0.0]
decomp_r.subtasks= [76-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
[93m76-HP-close_hood()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
NEED of belief alignment!

# UPDATE belief divergences
	at_oil_bottle:None: H=front R=cabinet
	oil:None: H=low R=full

Testing with 1 relevant divergence
divergence tested = at_oil_bottle:None: H=front R=cabinet
Task to refine: 76-HP-close_hood()-0.0
decomp i= 0 : 
	end 0
ref_aligned 1:
[
	: [76-HP-close_hood()-0.0]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [76-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	: [76-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [76-HP-close_hood()-0.0]
decomp_r.subtasks= [76-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
[93m76-HP-close_hood()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
	divergence isn't relevant
divergence tested = oil:None: H=low R=full
Task to refine: 76-HP-close_hood()-0.0
decomp i= 0 : 
	end 0
ref_aligned 1:
[
	: [76-HP-close_hood()-0.0]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [76-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	: [76-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [76-HP-close_hood()-0.0]
decomp_r.subtasks= [76-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
	divergence is relevant!
Relevant divergences to correct : 	oil:None: H=low R=full

COM: com action added = 81-RP-COM_ALIGN['oil-None-full']-3.0
Task to refine: 76-HP-close_hood()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [76-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 82-HP-close_hood()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_checking: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 14.0 Flag.E Type.F#3, (human check_right_light ()) -9> (human close_hood ()) prev=#1 next=[]
new_e_flagged_nodes : 
	14.0 Flag.E Type.F#3, (human check_right_light ()) -9> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes :
	14.0 Flag.E Type.F#3, (human check_right_light ()) -9> (human close_hood ()) prev=#1 next=[]
Ns before check = 14.0 Flag.S Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
Nf = 14.0 Flag.E Type.F#3, (human check_right_light ()) -9> (human close_hood ()) prev=#1 next=[]
Ns after check = 14.0 Flag.S Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 85ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 85ms
Non relevant div:
True
Plans:
25-HP-go_behind_car()-1.0 31-RP-refill_washer()-1.0 32-HP-replace_rear_light()-1.0 39-RP-COM_ALIGN['oil-None-low']-3.0 40-RP-refill_oil()-1.0 47-HP-go_front_car()-1.0 48-RP-store_oil()-1.0 49-HP-check_right_light()-1.0 50-RP-IDLE[]-0.0 57-RP-COM_ALIGN['oil-None-full']-3.0 60-HP-close_hood()-1.0/26-HP-check_right_light()-1.0 65-RP-refill_washer()-1.0 70-HP-go_behind_car()-1.0 71-RP-COM_ALIGN['oil-None-low']-3.0 72-RP-refill_oil()-1.0 73-HP-replace_rear_light()-1.0 74-RP-store_oil()-1.0 79-HP-go_front_car()-1.0 80-RP-IDLE[]-0.0 81-RP-COM_ALIGN['oil-None-full']-3.0 82-HP-close_hood()-1.0
