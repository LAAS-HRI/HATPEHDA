RUN N=26 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = front 	ObsType.OBS 	loc=front
|| robot_init.at_human = front 	ObsType.OBS 	loc=front
|| robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
|| robot_init.washer = low 	ObsType.OBS 	loc=front
|| robot_init.oil = low 	ObsType.INF 	loc=front
|| robot_init.hood = open 	ObsType.OBS 	loc=front
|| robot_init.rear_light = old 	ObsType.INF 	loc=rear
|| robot_init.left_light = todo 	ObsType.INF 	loc=front
|| robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
|| human_init.at_robot = front
|| human_init.at_human = front
|| human_init.at_oil_bottle = front
|| human_init.washer = full
|| human_init.oil = low
|| human_init.hood = open
|| human_init.rear_light = new
|| human_init.left_light = todo
|| human_init.right_light = ok
|________________________________________________________________________
Start first exploration
SA: human assessed washer <- low
first node = 0.0 Flag.E Type.I#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-Car_maintenance()
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-Car_maintenance()
decomp i= 0 : origin
	0-RA-Car_maintenance() => [3-RP-go_front_car()-0.0 - 4-RP-refill_washer()-0.0 - 5-RP-refill_oil()-0.0 - 6-RP-store_oil()-0.0] : dec_car_maintenance_R
	3-RP-go_front_car()-0.0 => [3-RP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[4-RP-refill_washer()-0.0, 5-RP-refill_oil()-0.0, 6-RP-store_oil()-0.0]
	end 0
refinement = 
[
	origin: [4-RP-refill_washer()-0.0 - 5-RP-refill_oil()-0.0 - 6-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = low 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = low
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 7-RP-refill_washer()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-5-RP-refill_oil()-0.0
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-1-HA-Car_maintenance()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [8-HA-Handling_lights() - 9-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 8-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	8-HA-Handling_lights() => [10-HA-Replacing_rear_light() - 11-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [12-HA-Checking_front_lights(), 13-HA-Replacing_rear_light(), 9-HA-Closing_hood()]
	10-HA-Replacing_rear_light() => [] : dec_replacing_rear_light
[92m	refines into nothing[0m
	continue .. next_subtasks=[11-HA-Checking_front_lights(), 9-HA-Closing_hood()]
	11-HA-Checking_front_lights() => [14-HP-go_front_car()-0.0 - 15-HP-check_left_light()-0.0 - 16-HP-check_right_light()-0.0] : dec_checking_front_ligths
	14-HP-go_front_car()-0.0 => [14-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[15-HP-check_left_light()-0.0, 16-HP-check_right_light()-0.0, 9-HA-Closing_hood()]
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	12-HA-Checking_front_lights() => [17-HP-go_front_car()-0.0 - 18-HP-check_left_light()-0.0 - 19-HP-check_right_light()-0.0] : dec_checking_front_ligths
	17-HP-go_front_car()-0.0 => [17-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[18-HP-check_left_light()-0.0, 19-HP-check_right_light()-0.0, 13-HA-Replacing_rear_light(), 9-HA-Closing_hood()]
	end 1
human- Refine agenda with r_beliefs
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [20-HA-Handling_lights() - 21-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 20-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	20-HA-Handling_lights() => [22-HA-Replacing_rear_light() - 23-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [24-HA-Checking_front_lights(), 25-HA-Replacing_rear_light(), 21-HA-Closing_hood()]
	22-HA-Replacing_rear_light() => [26-HP-go_behind_car()-0.0 - 27-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	24-HA-Checking_front_lights() => [28-HP-go_front_car()-0.0 - 29-HP-check_left_light()-0.0 - 30-HP-check_right_light()-0.0] : dec_checking_front_ligths
	28-HP-go_front_car()-0.0 => [28-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[29-HP-check_left_light()-0.0, 30-HP-check_right_light()-0.0, 25-HA-Replacing_rear_light(), 21-HA-Closing_hood()]
	end 1
refinement:
[
	dec_handling_lights_start_replace: [15-HP-check_left_light()-0.0 - 16-HP-check_right_light()-0.0 - 9-HA-Closing_hood()]
	dec_handling_lights_start_checking: [18-HP-check_left_light()-0.0 - 19-HP-check_right_light()-0.0 - 13-HA-Replacing_rear_light() - 9-HA-Closing_hood()]
]
refinement_r:
[
	dec_handling_lights_start_replace: [26-HP-go_behind_car()-0.0 - 27-HP-replace_rear_light()-0.0 - 23-HA-Checking_front_lights() - 21-HA-Closing_hood()]
	dec_handling_lights_start_checking: [29-HP-check_left_light()-0.0 - 30-HP-check_right_light()-0.0 - 25-HA-Replacing_rear_light() - 21-HA-Closing_hood()]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [26-HP-go_behind_car()-0.0 - 27-HP-replace_rear_light()-0.0 - 23-HA-Checking_front_lights() - 21-HA-Closing_hood()]
	dec_handling_lights_start_checking: [29-HP-check_left_light()-0.0 - 30-HP-check_right_light()-0.0 - 25-HA-Replacing_rear_light() - 21-HA-Closing_hood()]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [15-HP-check_left_light()-0.0 - 16-HP-check_right_light()-0.0 - 9-HA-Closing_hood()]
	dec_handling_lights_start_checking: [18-HP-check_left_light()-0.0 - 19-HP-check_right_light()-0.0 - 13-HA-Replacing_rear_light() - 9-HA-Closing_hood()]
]
decomp  0
decomp_h.subtasks= [15-HP-check_left_light()-0.0, 16-HP-check_right_light()-0.0, 9-HA-Closing_hood()]
decomp_r.subtasks= [26-HP-go_behind_car()-0.0, 27-HP-replace_rear_light()-0.0, 23-HA-Checking_front_lights(), 21-HA-Closing_hood()]
Not same number of subtasks
NEED of belief alignment!

# UPDATE belief divergences
	rear_light:None: H=new R=old

Testing with 1 relevant divergence
divergence tested = rear_light:None: H=new R=old
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : 
	1-HA-Car_maintenance() => [31-HA-Handling_lights() - 32-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 31-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	31-HA-Handling_lights() => [33-HA-Replacing_rear_light() - 34-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [35-HA-Checking_front_lights(), 36-HA-Replacing_rear_light(), 32-HA-Closing_hood()]
	33-HA-Replacing_rear_light() => [37-HP-go_behind_car()-0.0 - 38-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	35-HA-Checking_front_lights() => [39-HP-go_front_car()-0.0 - 40-HP-check_left_light()-0.0 - 41-HP-check_right_light()-0.0] : dec_checking_front_ligths
	39-HP-go_front_car()-0.0 => [39-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[40-HP-check_left_light()-0.0, 41-HP-check_right_light()-0.0, 36-HA-Replacing_rear_light(), 32-HA-Closing_hood()]
	end 1
ref_aligned 1:
[
	dec_handling_lights_start_replace: [37-HP-go_behind_car()-0.0 - 38-HP-replace_rear_light()-0.0 - 34-HA-Checking_front_lights() - 32-HA-Closing_hood()]
	dec_handling_lights_start_checking: [40-HP-check_left_light()-0.0 - 41-HP-check_right_light()-0.0 - 36-HA-Replacing_rear_light() - 32-HA-Closing_hood()]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [26-HP-go_behind_car()-0.0 - 27-HP-replace_rear_light()-0.0 - 23-HA-Checking_front_lights() - 21-HA-Closing_hood()]
	dec_handling_lights_start_checking: [29-HP-check_left_light()-0.0 - 30-HP-check_right_light()-0.0 - 25-HA-Replacing_rear_light() - 21-HA-Closing_hood()]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [37-HP-go_behind_car()-0.0 - 38-HP-replace_rear_light()-0.0 - 34-HA-Checking_front_lights() - 32-HA-Closing_hood()]
	dec_handling_lights_start_checking: [40-HP-check_left_light()-0.0 - 41-HP-check_right_light()-0.0 - 36-HA-Replacing_rear_light() - 32-HA-Closing_hood()]
]
decomp  0
decomp_h.subtasks= [37-HP-go_behind_car()-0.0, 38-HP-replace_rear_light()-0.0, 34-HA-Checking_front_lights(), 32-HA-Closing_hood()]
decomp_r.subtasks= [26-HP-go_behind_car()-0.0, 27-HP-replace_rear_light()-0.0, 23-HA-Checking_front_lights(), 21-HA-Closing_hood()]
len(decomp_h.subtasks)= 4
len(decomp_r.subtasks)= 4
i= 0
i= 0
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-5-RP-refill_oil()-0.0
||	-6-RP-store_oil()-0.0
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
same effects
decomp  1
decomp_h.subtasks= [40-HP-check_left_light()-0.0, 41-HP-check_right_light()-0.0, 36-HA-Replacing_rear_light(), 32-HA-Closing_hood()]
decomp_r.subtasks= [29-HP-check_left_light()-0.0, 30-HP-check_right_light()-0.0, 25-HA-Replacing_rear_light(), 21-HA-Closing_hood()]
len(decomp_h.subtasks)= 4
len(decomp_r.subtasks)= 4
i= 1
i= 1
i= 1
i= 1
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-5-RP-refill_oil()-0.0
||	-6-RP-store_oil()-0.0
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
	divergence is relevant!
Relevant divergences to correct : 	rear_light:None: H=new R=old

COM: com action added = 42-RP-COM_ALIGN['rear_light-None-old']-3.0
Task to refine: 1-HA-Car_maintenance()
decomp i= 0 : origin
	1-HA-Car_maintenance() => [43-HA-Handling_lights() - 44-HA-Closing_hood()] : dec_car_maintenance_H
	multiple decs for 43-HA-Handling_lights():  dec_handling_lights_start_replace  dec_handling_lights_start_checking 
	43-HA-Handling_lights() => [45-HA-Replacing_rear_light() - 46-HA-Checking_front_lights()] : dec_handling_lights_start_replace
		decomposition 1 : dec_handling_lights_start_checking created : [47-HA-Checking_front_lights(), 48-HA-Replacing_rear_light(), 44-HA-Closing_hood()]
	45-HA-Replacing_rear_light() => [49-HP-go_behind_car()-0.0 - 50-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
decomp i= 1 : dec_handling_lights_start_checking
	47-HA-Checking_front_lights() => [51-HP-go_front_car()-0.0 - 52-HP-check_left_light()-0.0 - 53-HP-check_right_light()-0.0] : dec_checking_front_ligths
	51-HP-go_front_car()-0.0 => [51-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[52-HP-check_left_light()-0.0, 53-HP-check_right_light()-0.0, 48-HA-Replacing_rear_light(), 44-HA-Closing_hood()]
	end 1
refinement = 
[
	dec_handling_lights_start_replace: [49-HP-go_behind_car()-0.0 - 50-HP-replace_rear_light()-0.0 - 46-HA-Checking_front_lights() - 44-HA-Closing_hood()]
	dec_handling_lights_start_checking: [52-HP-check_left_light()-0.0 - 53-HP-check_right_light()-0.0 - 48-HA-Replacing_rear_light() - 44-HA-Closing_hood()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 54-HP-go_behind_car()-1.0
	- 55-HP-check_left_light()-1.0

=> end explo
node explored = 4.0 Flag.F Type.H#1, (human BEGIN []) -2> (robot refill_washer ()) prev=None next=[#2 #3]
new_e_flagged_nodes : 
	5.0 Flag.E Type.I#2, (human go_behind_car ()) -1> (human go_behind_car ()) prev=#1 next=[]
	5.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
e_flagged_nodes :
	5.0 Flag.E Type.I#2, (human go_behind_car ()) -1> (human go_behind_car ()) prev=#1 next=[]
	5.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
Ns before check = None
Nf = None
Ns after check = None
e_flagged_nodes after check solution:
	5.0 Flag.E Type.I#2, (human go_behind_car ()) -1> (human go_behind_car ()) prev=#1 next=[]
	5.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]

<@> picked node = 5.0 Flag.E Type.I#2, (human go_behind_car ()) -1> (human go_behind_car ()) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-5-RP-refill_oil()-0.0
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-50-HP-replace_rear_light()-0.0
||	-46-HA-Checking_front_lights()
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 5-RP-refill_oil()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [5-RP-refill_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-50-HP-replace_rear_light()-0.0
||	-46-HA-Checking_front_lights()
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 56-RP-refill_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-50-HP-replace_rear_light()-0.0
||	-46-HA-Checking_front_lights()
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 50-HP-replace_rear_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
human- Refine agenda with r_beliefs
Task to refine: 50-HP-replace_rear_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
refinement:
[
	dec_handling_lights_start_replace: [50-HP-replace_rear_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [50-HP-replace_rear_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [50-HP-replace_rear_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [50-HP-replace_rear_light()-0.0]
]
decomp  0
decomp_h.subtasks= [50-HP-replace_rear_light()-0.0]
decomp_r.subtasks= [50-HP-replace_rear_light()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-46-HA-Checking_front_lights()
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [50-HP-replace_rear_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 57-HP-replace_rear_light()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-46-HA-Checking_front_lights()
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 6-RP-store_oil()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [6-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-46-HA-Checking_front_lights()
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 58-RP-store_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-46-HA-Checking_front_lights()
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 46-HA-Checking_front_lights()
decomp i= 0 : dec_handling_lights_start_replace
	46-HA-Checking_front_lights() => [59-HP-go_front_car()-0.0 - 60-HP-check_left_light()-0.0 - 61-HP-check_right_light()-0.0] : dec_checking_front_ligths
	end 0
human- Refine agenda with r_beliefs
Task to refine: 46-HA-Checking_front_lights()
decomp i= 0 : dec_handling_lights_start_replace
	46-HA-Checking_front_lights() => [62-HP-go_front_car()-0.0 - 63-HP-check_left_light()-0.0 - 64-HP-check_right_light()-0.0] : dec_checking_front_ligths
	end 0
refinement:
[
	dec_handling_lights_start_replace: [59-HP-go_front_car()-0.0 - 60-HP-check_left_light()-0.0 - 61-HP-check_right_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [62-HP-go_front_car()-0.0 - 63-HP-check_left_light()-0.0 - 64-HP-check_right_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [62-HP-go_front_car()-0.0 - 63-HP-check_left_light()-0.0 - 64-HP-check_right_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [59-HP-go_front_car()-0.0 - 60-HP-check_left_light()-0.0 - 61-HP-check_right_light()-0.0]
]
decomp  0
decomp_h.subtasks= [59-HP-go_front_car()-0.0, 60-HP-check_left_light()-0.0, 61-HP-check_right_light()-0.0]
decomp_r.subtasks= [62-HP-go_front_car()-0.0, 63-HP-check_left_light()-0.0, 64-HP-check_right_light()-0.0]
len(decomp_h.subtasks)= 3
len(decomp_r.subtasks)= 3
i= 0
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [59-HP-go_front_car()-0.0 - 60-HP-check_left_light()-0.0 - 61-HP-check_right_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 65-HP-go_front_car()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-60-HP-check_left_light()-0.0
||	-61-HP-check_right_light()-0.0
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_replace: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 66-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-60-HP-check_left_light()-0.0
||	-61-HP-check_right_light()-0.0
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 60-HP-check_left_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
human- Refine agenda with r_beliefs
Task to refine: 60-HP-check_left_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	end 0
refinement:
[
	dec_handling_lights_start_replace: [60-HP-check_left_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [60-HP-check_left_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [60-HP-check_left_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [60-HP-check_left_light()-0.0]
]
decomp  0
decomp_h.subtasks= [60-HP-check_left_light()-0.0]
decomp_r.subtasks= [60-HP-check_left_light()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-61-HP-check_right_light()-0.0
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = todo 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = todo
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_replace: [60-HP-check_left_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 67-HP-check_left_light()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-61-HP-check_right_light()-0.0
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_replace: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 68-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-61-HP-check_right_light()-0.0
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 61-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	61-HP-check_right_light()-0.0 => [61-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 44-HA-Closing_hood()
	44-HA-Closing_hood() => [69-HP-go_front_car()-0.0 - 70-HP-close_hood()-0.0] : dec_closing_hood
	69-HP-go_front_car()-0.0 => [69-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[70-HP-close_hood()-0.0]
	end 0
human- Refine agenda with r_beliefs
Task to refine: 61-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	61-HP-check_right_light()-0.0 => [61-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 44-HA-Closing_hood()
	44-HA-Closing_hood() => [71-HP-go_front_car()-0.0 - 72-HP-close_hood()-0.0] : dec_closing_hood
	71-HP-go_front_car()-0.0 => [71-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[72-HP-close_hood()-0.0]
	end 0
refinement:
[
	dec_handling_lights_start_replace: [70-HP-close_hood()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_replace: [72-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [72-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_replace: [70-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [70-HP-close_hood()-0.0]
decomp_r.subtasks= [72-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
[93m70-HP-close_hood()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
NEED of belief alignment!

# UPDATE belief divergences
	at_oil_bottle:None: H=front R=cabinet
	oil:None: H=low R=full

Testing with 1 relevant divergence
divergence tested = at_oil_bottle:None: H=front R=cabinet
Task to refine: 61-HP-check_right_light()-0.0
decomp i= 0 : 
	61-HP-check_right_light()-0.0 => [61-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 44-HA-Closing_hood()
	44-HA-Closing_hood() => [73-HP-go_front_car()-0.0 - 74-HP-close_hood()-0.0] : dec_closing_hood
	73-HP-go_front_car()-0.0 => [73-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[74-HP-close_hood()-0.0]
	end 0
ref_aligned 1:
[
	: [74-HP-close_hood()-0.0]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [72-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	: [74-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [74-HP-close_hood()-0.0]
decomp_r.subtasks= [72-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = cabinet
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
[93m74-HP-close_hood()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
	divergence isn't relevant
divergence tested = oil:None: H=low R=full
Task to refine: 61-HP-check_right_light()-0.0
decomp i= 0 : 
	61-HP-check_right_light()-0.0 => [61-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 44-HA-Closing_hood()
	44-HA-Closing_hood() => [75-HP-go_front_car()-0.0 - 76-HP-close_hood()-0.0] : dec_closing_hood
	75-HP-go_front_car()-0.0 => [75-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[76-HP-close_hood()-0.0]
	end 0
ref_aligned 1:
[
	: [76-HP-close_hood()-0.0]
]
Check if ok
refinement_r_beliefs:
[
	dec_handling_lights_start_replace: [72-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	: [76-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [76-HP-close_hood()-0.0]
decomp_r.subtasks= [72-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
	divergence is relevant!
Relevant divergences to correct : 	oil:None: H=low R=full

COM: com action added = 77-RP-COM_ALIGN['oil-None-full']-3.0
Task to refine: 61-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_replace
	61-HP-check_right_light()-0.0 => [61-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 44-HA-Closing_hood()
	44-HA-Closing_hood() => [78-HP-go_front_car()-0.0 - 79-HP-close_hood()-0.0] : dec_closing_hood
	78-HP-go_front_car()-0.0 => [78-HP-go_front_car()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[79-HP-close_hood()-0.0]
	end 0
refinement = 
[
	dec_handling_lights_start_replace: [79-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 80-HP-close_hood()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_replace: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 14.0 Flag.E Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
new_e_flagged_nodes : 
	14.0 Flag.E Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes :
	5.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
	14.0 Flag.E Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
Ns before check = None
Nf = 14.0 Flag.E Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
new Ns!
Ns after check = 14.0 Flag.S Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	5.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]

<@> picked node = 5.0 Flag.E Type.I#3, (human check_left_light ()) -1> (human check_left_light ()) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-5-RP-refill_oil()-0.0
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-53-HP-check_right_light()-0.0
||	-48-HA-Replacing_rear_light()
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 5-RP-refill_oil()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [5-RP-refill_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-53-HP-check_right_light()-0.0
||	-48-HA-Replacing_rear_light()
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = low 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = low
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 81-RP-refill_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-53-HP-check_right_light()-0.0
||	-48-HA-Replacing_rear_light()
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 53-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	53-HP-check_right_light()-0.0 => [53-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 48-HA-Replacing_rear_light()
	48-HA-Replacing_rear_light() => [82-HP-go_behind_car()-0.0 - 83-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
human- Refine agenda with r_beliefs
Task to refine: 53-HP-check_right_light()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	53-HP-check_right_light()-0.0 => [53-HP-check_right_light()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 48-HA-Replacing_rear_light()
	48-HA-Replacing_rear_light() => [84-HP-go_behind_car()-0.0 - 85-HP-replace_rear_light()-0.0] : dec_replacing_rear_light
	end 0
refinement:
[
	dec_handling_lights_start_checking: [82-HP-go_behind_car()-0.0 - 83-HP-replace_rear_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [84-HP-go_behind_car()-0.0 - 85-HP-replace_rear_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [84-HP-go_behind_car()-0.0 - 85-HP-replace_rear_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [82-HP-go_behind_car()-0.0 - 83-HP-replace_rear_light()-0.0]
]
decomp  0
decomp_h.subtasks= [82-HP-go_behind_car()-0.0, 83-HP-replace_rear_light()-0.0]
decomp_r.subtasks= [84-HP-go_behind_car()-0.0, 85-HP-replace_rear_light()-0.0]
len(decomp_h.subtasks)= 2
len(decomp_r.subtasks)= 2
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [82-HP-go_behind_car()-0.0 - 83-HP-replace_rear_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 86-HP-go_behind_car()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-6-RP-store_oil()-0.0
| AGENDA human =
||	-83-HP-replace_rear_light()-0.0
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
Task to refine: 6-RP-store_oil()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement = 
[
	dec_handling_lights_start_checking: [6-RP-store_oil()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-83-HP-replace_rear_light()-0.0
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = front 	ObsType.INF 	loc=front
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 87-RP-store_oil()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-83-HP-replace_rear_light()-0.0
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 83-HP-replace_rear_light()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
human- Refine agenda with r_beliefs
Task to refine: 83-HP-replace_rear_light()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement:
[
	dec_handling_lights_start_checking: [83-HP-replace_rear_light()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [83-HP-replace_rear_light()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [83-HP-replace_rear_light()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [83-HP-replace_rear_light()-0.0]
]
decomp  0
decomp_h.subtasks= [83-HP-replace_rear_light()-0.0]
decomp_r.subtasks= [83-HP-replace_rear_light()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = old 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = old
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [83-HP-replace_rear_light()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 88-HP-replace_rear_light()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_checking: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 89-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-44-HA-Closing_hood()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 44-HA-Closing_hood()
decomp i= 0 : dec_handling_lights_start_checking
	44-HA-Closing_hood() => [90-HP-go_front_car()-0.0 - 91-HP-close_hood()-0.0] : dec_closing_hood
	end 0
human- Refine agenda with r_beliefs
Task to refine: 44-HA-Closing_hood()
decomp i= 0 : dec_handling_lights_start_checking
	44-HA-Closing_hood() => [92-HP-go_front_car()-0.0 - 93-HP-close_hood()-0.0] : dec_closing_hood
	end 0
refinement:
[
	dec_handling_lights_start_checking: [90-HP-go_front_car()-0.0 - 91-HP-close_hood()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [92-HP-go_front_car()-0.0 - 93-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [92-HP-go_front_car()-0.0 - 93-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [90-HP-go_front_car()-0.0 - 91-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [90-HP-go_front_car()-0.0, 91-HP-close_hood()-0.0]
decomp_r.subtasks= [92-HP-go_front_car()-0.0, 93-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 2
len(decomp_r.subtasks)= 2
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = rear 	ObsType.OBS 	loc=rear
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = rear
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [90-HP-go_front_car()-0.0 - 91-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 94-HP-go_front_car()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-91-HP-close_hood()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_checking: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 95-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-91-HP-close_hood()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
human- Refine agenda
Task to refine: 91-HP-close_hood()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
human- Refine agenda with r_beliefs
Task to refine: 91-HP-close_hood()-0.0
decomp i= 0 : dec_handling_lights_start_checking
	end 0
refinement:
[
	dec_handling_lights_start_checking: [91-HP-close_hood()-0.0]
]
refinement_r:
[
	dec_handling_lights_start_checking: [91-HP-close_hood()-0.0]
]
refinement_r_beliefs:
[
	dec_handling_lights_start_checking: [91-HP-close_hood()-0.0]
]
refinement_h_beliefs:
[
	dec_handling_lights_start_checking: [91-HP-close_hood()-0.0]
]
decomp  0
decomp_h.subtasks= [91-HP-close_hood()-0.0]
decomp_r.subtasks= [91-HP-close_hood()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = open 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = open
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	dec_handling_lights_start_checking: [91-HP-close_hood()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 96-HP-close_hood()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = front 	ObsType.OBS 	loc=front
||robot_init.at_human = front 	ObsType.OBS 	loc=front
||robot_init.at_oil_bottle = cabinet 	ObsType.INF 	loc=cabinet
||robot_init.washer = full 	ObsType.OBS 	loc=front
||robot_init.oil = full 	ObsType.INF 	loc=front
||robot_init.hood = closed 	ObsType.OBS 	loc=front
||robot_init.rear_light = new 	ObsType.INF 	loc=rear
||robot_init.left_light = ok 	ObsType.INF 	loc=front
||robot_init.right_light = ok 	ObsType.INF 	loc=front
| STATE human =
||human_init.at_robot = front
||human_init.at_human = front
||human_init.at_oil_bottle = front
||human_init.washer = full
||human_init.oil = full
||human_init.hood = closed
||human_init.rear_light = new
||human_init.left_light = ok
||human_init.right_light = ok
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_handling_lights_start_checking: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 11.0 Flag.E Type.F#3, (human check_left_light ()) -9> (human close_hood ()) prev=#1 next=[]
new_e_flagged_nodes : 
	11.0 Flag.E Type.F#3, (human check_left_light ()) -9> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes :
	11.0 Flag.E Type.F#3, (human check_left_light ()) -9> (human close_hood ()) prev=#1 next=[]
Ns before check = 14.0 Flag.S Type.F#2, (human go_behind_car ()) -9> (human close_hood ()) prev=#1 next=[]
Nf = 11.0 Flag.E Type.F#3, (human check_left_light ()) -9> (human close_hood ()) prev=#1 next=[]
new Ns!
Ns after check = 11.0 Flag.S Type.F#3, (human check_left_light ()) -9> (human close_hood ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 87ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 87ms
Non relevant div:
True
Plans:
7-RP-refill_washer()-1.0 42-RP-COM_ALIGN['rear_light-None-old']-3.0 54-HP-go_behind_car()-1.0 56-RP-refill_oil()-1.0 57-HP-replace_rear_light()-1.0 58-RP-store_oil()-1.0 65-HP-go_front_car()-1.0 66-RP-IDLE[]-0.0 67-HP-check_left_light()-1.0 68-RP-IDLE[]-0.0 77-RP-COM_ALIGN['oil-None-full']-3.0 80-HP-close_hood()-1.0/7-RP-refill_washer()-1.0 42-RP-COM_ALIGN['rear_light-None-old']-3.0 55-HP-check_left_light()-1.0 81-RP-refill_oil()-1.0 86-HP-go_behind_car()-1.0 87-RP-store_oil()-1.0 88-HP-replace_rear_light()-1.0 89-RP-IDLE[]-0.0 94-HP-go_front_car()-1.0 95-RP-IDLE[]-0.0 96-HP-close_hood()-1.0
