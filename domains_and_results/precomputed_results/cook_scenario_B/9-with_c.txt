RUN N=9 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-1-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
|| robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
| STATE human =
|| human_init.at_robot = kitchen
|| human_init.at_human = kitchen
|| human_init.at_pasta = room
|| human_init.salt_added = False
|| human_init.pot_fire = off
|________________________________________________________________________
Start first exploration
SA: human assessed at_pasta <- kitchen
first node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-1-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = False
||human_init.pot_fire = off
|________________________________________________________________________
human- Refine agenda
Task to refine: 1-HA-cook()
decomp i= 0 : origin
	1-HA-cook() => [3-HA-get_pasta() - 4-HA-come_pour_pasta()] : dec_cook_H
	3-HA-get_pasta() => [5-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 1-HA-cook()
decomp i= 0 : origin
	1-HA-cook() => [6-HA-get_pasta() - 7-HA-come_pour_pasta()] : dec_cook_H
	6-HA-get_pasta() => [8-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
refinement:
[
	origin: [5-HP-grab_pasta()-0.0 - 4-HA-come_pour_pasta()]
]
refinement_r:
[
	origin: [8-HP-grab_pasta()-0.0 - 7-HA-come_pour_pasta()]
]
refinement_r_beliefs:
[
	origin: [8-HP-grab_pasta()-0.0 - 7-HA-come_pour_pasta()]
]
refinement_h_beliefs:
[
	origin: [5-HP-grab_pasta()-0.0 - 4-HA-come_pour_pasta()]
]
decomp  0
decomp_h.subtasks= [5-HP-grab_pasta()-0.0, 4-HA-come_pour_pasta()]
decomp_r.subtasks= [8-HP-grab_pasta()-0.0, 7-HA-come_pour_pasta()]
len(decomp_h.subtasks)= 2
len(decomp_r.subtasks)= 2
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = False
||human_init.pot_fire = off
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	origin: [5-HP-grab_pasta()-0.0 - 4-HA-come_pour_pasta()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 9-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-4-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-cook()
decomp i= 0 : origin
	0-RA-cook() => [10-RA-come_add_salt() - 11-RA-come_turn_on_pot_fire()] : dec_cook_R
	10-RA-come_add_salt() => [12-RP-add_salt()-0.0] : dec_come_add_salt_close
	end 0
refinement = 
[
	origin: [12-RP-add_salt()-0.0 - 11-RA-come_turn_on_pot_fire()]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-4-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 13-RP-add_salt()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-11-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-4-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
|________________________________________________________________________
human- Refine agenda
Task to refine: 4-HA-come_pour_pasta()
decomp i= 0 : origin
	4-HA-come_pour_pasta() => [14-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 4-HA-come_pour_pasta()
decomp i= 0 : origin
	4-HA-come_pour_pasta() => [15-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
refinement:
[
	origin: [14-HP-pour_pasta()-0.0]
]
refinement_r:
[
	origin: [15-HP-pour_pasta()-0.0]
]
refinement_r_beliefs:
[
	origin: [15-HP-pour_pasta()-0.0]
]
refinement_h_beliefs:
[
	origin: [14-HP-pour_pasta()-0.0]
]
decomp  0
decomp_h.subtasks= [14-HP-pour_pasta()-0.0]
decomp_r.subtasks= [15-HP-pour_pasta()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-11-RA-come_turn_on_pot_fire()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
|________________________________________________________________________
[93m14-HP-pour_pasta()-0.0 not applicable[0m
[93m14-HP-pour_pasta()-0.0 not applicable[0m
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	origin: [14-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
[93m14-HP-pour_pasta()-0.0 not applicable[0m
pour_pasta not feasible...
applied refinement = 
next actions:
	- 16-HP-WAIT[]-2.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-11-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-14-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
|________________________________________________________________________
robot- Refine agenda
Task to refine: 11-RA-come_turn_on_pot_fire()
decomp i= 0 : origin
	11-RA-come_turn_on_pot_fire() => [17-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 0
refinement = 
[
	origin: [17-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-14-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 18-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-14-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
|________________________________________________________________________
human- Refine agenda
Task to refine: 14-HP-pour_pasta()-0.0
decomp i= 0 : origin
	end 0
human- Refine agenda with r_beliefs
Task to refine: 14-HP-pour_pasta()-0.0
decomp i= 0 : origin
	end 0
refinement:
[
	origin: [14-HP-pour_pasta()-0.0]
]
refinement_r:
[
	origin: [14-HP-pour_pasta()-0.0]
]
refinement_r_beliefs:
[
	origin: [14-HP-pour_pasta()-0.0]
]
refinement_h_beliefs:
[
	origin: [14-HP-pour_pasta()-0.0]
]
decomp  0
decomp_h.subtasks= [14-HP-pour_pasta()-0.0]
decomp_r.subtasks= [14-HP-pour_pasta()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	origin: [14-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 19-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	origin: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 6.0 Flag.E Type.F#1, (robot BEGIN []) -6> (human pour_pasta ()) prev=None next=[]
new_e_flagged_nodes : 
	6.0 Flag.E Type.F#1, (robot BEGIN []) -6> (human pour_pasta ()) prev=None next=[]
e_flagged_nodes :
	6.0 Flag.E Type.F#1, (robot BEGIN []) -6> (human pour_pasta ()) prev=None next=[]
Ns before check = None
Nf = 6.0 Flag.E Type.F#1, (robot BEGIN []) -6> (human pour_pasta ()) prev=None next=[]
new Ns!
Ns after check = 6.0 Flag.S Type.F#1, (robot BEGIN []) -6> (human pour_pasta ()) prev=None next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 18ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 18ms
Non relevant div:
False
Plans:
9-HP-grab_pasta()-1.0 13-RP-add_salt()-1.0 16-HP-WAIT[]-2.0 18-RP-turn_on_pot_fire()-1.0 19-HP-pour_pasta()-1.0
