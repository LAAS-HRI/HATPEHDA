RUN N=91 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-1-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.at_pasta = room 	ObsType.OBS 	loc=room
|| robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
|| robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
|| human_init.at_robot = kitchen
|| human_init.at_human = kitchen
|| human_init.at_pasta = room
|| human_init.salt_added = False
|| human_init.pot_fire = on
|________________________________________________________________________
Start first exploration
first node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-1-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
human- Refine agenda
Task to refine: 1-HA-cook()
decomp i= 0 : origin
	1-HA-cook() => [3-HA-get_pasta() - 4-HA-come_pour_pasta()] : dec_cook_H
	3-HA-get_pasta() => [5-HP-move('room',)-0.0 - 6-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 1-HA-cook()
decomp i= 0 : origin
	1-HA-cook() => [7-HA-get_pasta() - 8-HA-come_pour_pasta()] : dec_cook_H
	7-HA-get_pasta() => [9-HP-move('room',)-0.0 - 10-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
refinement:
[
	origin: [5-HP-move('room',)-0.0 - 6-HP-grab_pasta()-0.0 - 4-HA-come_pour_pasta()]
]
refinement_r:
[
	origin: [9-HP-move('room',)-0.0 - 10-HP-grab_pasta()-0.0 - 8-HA-come_pour_pasta()]
]
refinement_r_beliefs:
[
	origin: [9-HP-move('room',)-0.0 - 10-HP-grab_pasta()-0.0 - 8-HA-come_pour_pasta()]
]
refinement_h_beliefs:
[
	origin: [5-HP-move('room',)-0.0 - 6-HP-grab_pasta()-0.0 - 4-HA-come_pour_pasta()]
]
decomp  0
decomp_h.subtasks= [5-HP-move('room',)-0.0, 6-HP-grab_pasta()-0.0, 4-HA-come_pour_pasta()]
decomp_r.subtasks= [9-HP-move('room',)-0.0, 10-HP-grab_pasta()-0.0, 8-HA-come_pour_pasta()]
len(decomp_h.subtasks)= 3
len(decomp_r.subtasks)= 3
i= 0
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	origin: [5-HP-move('room',)-0.0 - 6-HP-grab_pasta()-0.0 - 4-HA-come_pour_pasta()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 11-HP-move('room',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-6-HP-grab_pasta()-0.0
||	-4-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-cook()
decomp i= 0 : origin
	0-RA-cook() => [12-RA-come_add_salt() - 13-RA-come_turn_on_pot_fire()] : dec_cook_R
	12-RA-come_add_salt() => [14-RP-add_salt()-0.0] : dec_come_add_salt_close
	end 0
refinement = 
[
	origin: [14-RP-add_salt()-0.0 - 13-RA-come_turn_on_pot_fire()]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-6-HP-grab_pasta()-0.0
||	-4-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 15-RP-add_salt()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-13-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-6-HP-grab_pasta()-0.0
||	-4-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
human- Refine agenda
Task to refine: 6-HP-grab_pasta()-0.0
decomp i= 0 : origin
	end 0
human- Refine agenda with r_beliefs
Task to refine: 6-HP-grab_pasta()-0.0
decomp i= 0 : origin
	end 0
refinement:
[
	origin: [6-HP-grab_pasta()-0.0]
]
refinement_r:
[
	origin: [6-HP-grab_pasta()-0.0]
]
refinement_r_beliefs:
[
	origin: [6-HP-grab_pasta()-0.0]
]
refinement_h_beliefs:
[
	origin: [6-HP-grab_pasta()-0.0]
]
decomp  0
decomp_h.subtasks= [6-HP-grab_pasta()-0.0]
decomp_r.subtasks= [6-HP-grab_pasta()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-13-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-4-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	origin: [6-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 16-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-13-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-4-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
robot- Refine agenda
Task to refine: 13-RA-come_turn_on_pot_fire()
decomp i= 0 : origin
	13-RA-come_turn_on_pot_fire() => [17-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	17-RP-turn_on_pot_fire()-0.0 => [17-RP-turn_on_pot_fire()-0.0] : 
[92m	already done[0m
	17-RP-turn_on_pot_fire()-0.0 => DecompType.AGENDA_EMPTY
	end 0
refinement = 
[
	origin: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 18-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-4-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
human- Refine agenda
Task to refine: 4-HA-come_pour_pasta()
decomp i= 0 : origin
	4-HA-come_pour_pasta() => [19-HP-move('kitchen',)-0.0 - 20-HP-pour_pasta()-0.0] : dec_come_pour_pasta_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 4-HA-come_pour_pasta()
decomp i= 0 : origin
	4-HA-come_pour_pasta() => [21-HP-move('kitchen',)-0.0 - 22-HP-pour_pasta()-0.0] : dec_come_pour_pasta_far
	end 0
refinement:
[
	origin: [19-HP-move('kitchen',)-0.0 - 20-HP-pour_pasta()-0.0]
]
refinement_r:
[
	origin: [21-HP-move('kitchen',)-0.0 - 22-HP-pour_pasta()-0.0]
]
refinement_r_beliefs:
[
	origin: [21-HP-move('kitchen',)-0.0 - 22-HP-pour_pasta()-0.0]
]
refinement_h_beliefs:
[
	origin: [19-HP-move('kitchen',)-0.0 - 20-HP-pour_pasta()-0.0]
]
decomp  0
decomp_h.subtasks= [19-HP-move('kitchen',)-0.0, 20-HP-pour_pasta()-0.0]
decomp_r.subtasks= [21-HP-move('kitchen',)-0.0, 22-HP-pour_pasta()-0.0]
len(decomp_h.subtasks)= 2
len(decomp_r.subtasks)= 2
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	origin: [19-HP-move('kitchen',)-0.0 - 20-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 23-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-20-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	origin: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 24-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-20-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
human- Refine agenda
Task to refine: 20-HP-pour_pasta()-0.0
decomp i= 0 : origin
	end 0
human- Refine agenda with r_beliefs
Task to refine: 20-HP-pour_pasta()-0.0
decomp i= 0 : origin
	end 0
refinement:
[
	origin: [20-HP-pour_pasta()-0.0]
]
refinement_r:
[
	origin: [20-HP-pour_pasta()-0.0]
]
refinement_r_beliefs:
[
	origin: [20-HP-pour_pasta()-0.0]
]
refinement_h_beliefs:
[
	origin: [20-HP-pour_pasta()-0.0]
]
decomp  0
decomp_h.subtasks= [20-HP-pour_pasta()-0.0]
decomp_r.subtasks= [20-HP-pour_pasta()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
[93m20-HP-pour_pasta()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
NEED of belief alignment!

# UPDATE belief divergences
	salt_added:None: H=False R=True

Testing with 1 relevant divergence
divergence tested = salt_added:None: H=False R=True
Task to refine: 20-HP-pour_pasta()-0.0
decomp i= 0 : 
	end 0
ref_aligned 1:
[
	: [20-HP-pour_pasta()-0.0]
]
Check if ok
refinement_r_beliefs:
[
	origin: [20-HP-pour_pasta()-0.0]
]
refinement_h_beliefs:
[
	: [20-HP-pour_pasta()-0.0]
]
decomp  0
decomp_h.subtasks= [20-HP-pour_pasta()-0.0]
decomp_r.subtasks= [20-HP-pour_pasta()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
|________________________________________________________________________
same effects
no alignment needed
	divergence is relevant!
Relevant divergences to correct : 	salt_added:None: H=False R=True

COM: com action added = 25-RP-COM_ALIGN['salt_added-None-True']-3.0
Task to refine: 20-HP-pour_pasta()-0.0
decomp i= 0 : origin
	end 0
refinement = 
[
	origin: [20-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Trying to create delaying branch
rel_divs= 	salt_added:None: H=False R=True

	div not initial!
		testing n= 7.0 Flag.E Type.I#1, (robot BEGIN []) -7> (robot COM_ALIGN ['salt_added-None-True']) prev=None next=[]
	div node identified :  7.0 Flag.E Type.I#1, (robot BEGIN []) -7> (robot COM_ALIGN ['salt_added-None-True']) prev=None next=[]
	testing action= 11-HP-move('room',)-1.0
		R-Agenda in [0-RA-cook()]
		H-Agenda in [6-HP-grab_pasta()-0.0, 4-HA-come_pour_pasta()]
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-1-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
before acting
after acting
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-1-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
after other
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-1-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
action.next= [15-RP-add_salt()-1.0]
	testing action= 15-RP-add_salt()-1.0
		R-Agenda in [13-RA-come_turn_on_pot_fire()]
		H-Agenda in [6-HP-grab_pasta()-0.0, 4-HA-come_pour_pasta()]
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-1-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
before acting
after acting
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-1-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
after other
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-1-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
agendas:
div_action.agent_agendas[g_human_name]= [6-HP-grab_pasta()-0.0, 4-HA-come_pour_pasta()]
div_action.agent_agendas[g_robot_name]= [13-RA-come_turn_on_pot_fire()]
	div action identified :  15-RP-add_salt()-1.0
__________________________________________________________________________
| AGENDA robot =
||	-15-RP-add_salt()-1.0
||	-13-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-6-HP-grab_pasta()-0.0
||	-4-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
	Branching:
BRANCHING current_cost= 7.0
	div_node_bottom created =>  7.0 Flag.E Type.I#2, (robot add_salt ()) -6> (robot COM_ALIGN ['salt_added-None-True']) prev=#1 next=[]
	delay_node created =>  1.0 Flag.E Type.D#3, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	div_node edited =>  1.0 Flag.F Type.R#1, (robot BEGIN []) -1> (human move ('room',)) prev=None next=[#2 #3]
applied refinement = 
next actions:
	- 26-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	origin: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 1.0 Flag.F Type.R#1, (robot BEGIN []) -1> (human move ('room',)) prev=None next=[#2 #3]
new_e_flagged_nodes : 
	1.0 Flag.E Type.D#3, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	8.0 Flag.E Type.F#2, (robot add_salt ()) -7> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes :
	1.0 Flag.E Type.D#3, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	8.0 Flag.E Type.F#2, (robot add_salt ()) -7> (human pour_pasta ()) prev=#1 next=[]
Ns before check = None
Nf = 8.0 Flag.E Type.F#2, (robot add_salt ()) -7> (human pour_pasta ()) prev=#1 next=[]
new Ns!
Ns after check = 8.0 Flag.S Type.F#2, (robot add_salt ()) -7> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	1.0 Flag.E Type.D#3, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]

<@> picked node = 1.0 Flag.E Type.D#3, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-15-RP-add_salt()-1.0
||	-13-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-6-HP-grab_pasta()-0.0
||	-4-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
human- Refine agenda
Task to refine: 6-HP-grab_pasta()-0.0
decomp i= 0 : delaying
	end 0
human- Refine agenda with r_beliefs
Task to refine: 6-HP-grab_pasta()-0.0
decomp i= 0 : delaying
	end 0
refinement:
[
	delaying: [6-HP-grab_pasta()-0.0]
]
refinement_r:
[
	delaying: [6-HP-grab_pasta()-0.0]
]
refinement_r_beliefs:
[
	delaying: [6-HP-grab_pasta()-0.0]
]
refinement_h_beliefs:
[
	delaying: [6-HP-grab_pasta()-0.0]
]
decomp  0
decomp_h.subtasks= [6-HP-grab_pasta()-0.0]
decomp_r.subtasks= [6-HP-grab_pasta()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-15-RP-add_salt()-1.0
||	-13-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-4-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	delaying: [6-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 28-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-15-RP-add_salt()-1.0
||	-13-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-4-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
applied refinement = 
next actions:
	- 29-RP-DELAY[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-15-RP-add_salt()-1.0
||	-13-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-4-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
human- Refine agenda
Task to refine: 4-HA-come_pour_pasta()
decomp i= 0 : delaying
	4-HA-come_pour_pasta() => [30-HP-move('kitchen',)-0.0 - 31-HP-pour_pasta()-0.0] : dec_come_pour_pasta_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 4-HA-come_pour_pasta()
decomp i= 0 : delaying
	4-HA-come_pour_pasta() => [32-HP-move('kitchen',)-0.0 - 33-HP-pour_pasta()-0.0] : dec_come_pour_pasta_far
	end 0
refinement:
[
	delaying: [30-HP-move('kitchen',)-0.0 - 31-HP-pour_pasta()-0.0]
]
refinement_r:
[
	delaying: [32-HP-move('kitchen',)-0.0 - 33-HP-pour_pasta()-0.0]
]
refinement_r_beliefs:
[
	delaying: [32-HP-move('kitchen',)-0.0 - 33-HP-pour_pasta()-0.0]
]
refinement_h_beliefs:
[
	delaying: [30-HP-move('kitchen',)-0.0 - 31-HP-pour_pasta()-0.0]
]
decomp  0
decomp_h.subtasks= [30-HP-move('kitchen',)-0.0, 31-HP-pour_pasta()-0.0]
decomp_r.subtasks= [32-HP-move('kitchen',)-0.0, 33-HP-pour_pasta()-0.0]
len(decomp_h.subtasks)= 2
len(decomp_r.subtasks)= 2
i= 0
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-15-RP-add_salt()-1.0
||	-13-RA-come_turn_on_pot_fire()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	delaying: [30-HP-move('kitchen',)-0.0 - 31-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 34-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-15-RP-add_salt()-1.0
||	-13-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-31-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
robot- Refine agenda
Task to refine: 15-RP-add_salt()-1.0
decomp i= 0 : delaying
	end 0
refinement = 
[
	delaying: [15-RP-add_salt()-1.0]
]
Decomp OK
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-13-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-31-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
same effects
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 35-RP-add_salt()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-13-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-31-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
|________________________________________________________________________
human- Refine agenda
Task to refine: 31-HP-pour_pasta()-0.0
decomp i= 0 : delaying
	end 0
human- Refine agenda with r_beliefs
Task to refine: 31-HP-pour_pasta()-0.0
decomp i= 0 : delaying
	end 0
refinement:
[
	delaying: [31-HP-pour_pasta()-0.0]
]
refinement_r:
[
	delaying: [31-HP-pour_pasta()-0.0]
]
refinement_r_beliefs:
[
	delaying: [31-HP-pour_pasta()-0.0]
]
refinement_h_beliefs:
[
	delaying: [31-HP-pour_pasta()-0.0]
]
decomp  0
decomp_h.subtasks= [31-HP-pour_pasta()-0.0]
decomp_r.subtasks= [31-HP-pour_pasta()-0.0]
len(decomp_h.subtasks)= 1
len(decomp_r.subtasks)= 1
i= 0
checking if diff effects
__________________________________________________________________________
| AGENDA robot =
||	-13-RA-come_turn_on_pot_fire()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
|________________________________________________________________________
same effects
no alignment needed
No relevant belief divergence for refinement
refinement = 
[
	delaying: [31-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 36-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-13-RA-come_turn_on_pot_fire()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
|________________________________________________________________________
robot- Refine agenda
Task to refine: 13-RA-come_turn_on_pot_fire()
decomp i= 0 : delaying
	13-RA-come_turn_on_pot_fire() => [37-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	37-RP-turn_on_pot_fire()-0.0 => [37-RP-turn_on_pot_fire()-0.0] : 
[92m	already done[0m
	37-RP-turn_on_pot_fire()-0.0 => DecompType.BOTH_AGENDAS_EMPTY
	end 0
refinement = 
[
	delaying: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 5.0 Flag.E Type.F#3, (robot DELAY []) -6> (human pour_pasta ()) prev=#1 next=[]
new_e_flagged_nodes : 
	5.0 Flag.E Type.F#3, (robot DELAY []) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes :
	5.0 Flag.E Type.F#3, (robot DELAY []) -6> (human pour_pasta ()) prev=#1 next=[]
Ns before check = 8.0 Flag.S Type.F#2, (robot add_salt ()) -7> (human pour_pasta ()) prev=#1 next=[]
Nf = 5.0 Flag.E Type.F#3, (robot DELAY []) -6> (human pour_pasta ()) prev=#1 next=[]
new Ns!
Ns after check = 5.0 Flag.S Type.F#3, (robot DELAY []) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 57ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 57ms
Non relevant div:
False
Plans:
11-HP-move('room',)-1.0 15-RP-add_salt()-1.0 16-HP-grab_pasta()-1.0 18-RP-IDLE[]-0.0 23-HP-move('kitchen',)-1.0 24-RP-IDLE[]-0.0 25-RP-COM_ALIGN['salt_added-None-True']-3.0 26-HP-pour_pasta()-1.0/11-HP-move('room',)-1.0 27-RP-DELAY[]-0.0 28-HP-grab_pasta()-1.0 29-RP-DELAY[]-0.0 34-HP-move('kitchen',)-1.0 35-RP-add_salt()-1.0 36-HP-pour_pasta()-1.0
