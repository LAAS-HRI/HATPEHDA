RUN N=230 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-1-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.at_human = room 	ObsType.OBS 	loc=room
|| robot_init.at_pasta = room 	ObsType.OBS 	loc=room
|| robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
|| robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
| STATE human =
|| human_init.at_robot = kitchen
|| human_init.at_human = room
|| human_init.at_pasta = kitchen
|| human_init.salt_added = True
|| human_init.pot_fire = on
|________________________________________________________________________
Start first exploration
SA: human assessed at_pasta <- room
first node = 0.0 Flag.E Type.I#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-1-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = True
||human_init.pot_fire = on
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-cook()
decomp i= 0 : origin
	0-RA-cook() => [3-RA-come_add_salt() - 4-RA-come_turn_on_pot_fire()] : dec_cook_R
	3-RA-come_add_salt() => [5-RP-add_salt()-0.0] : dec_come_add_salt_close
	5-RP-add_salt()-0.0 => [5-RP-add_salt()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[4-RA-come_turn_on_pot_fire()]
	4-RA-come_turn_on_pot_fire() => [6-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 0
refinement = 
[
	origin: [6-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
[93malready done[0m
[93m6-RP-turn_on_pot_fire()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs

# UPDATE belief divergences
	pot_fire:None: H=on R=off

Testing with 1 relevant divergence
divergence tested = pot_fire:None: H=on R=off
Task to refine: 1-HA-cook()
decomp i= 0 : 
	1-HA-cook() => [7-HA-get_pasta() - 8-HA-come_pour_pasta()] : dec_cook_H
	7-HA-get_pasta() => [9-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
	divergence is relevant!
Relevant divergences to correct : 	pot_fire:None: H=on R=off

COM: com action added eff = 10-RP-COM_ALIGN['pot_fire-None-off']-3.0
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 11-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-1-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = True
||human_init.pot_fire = off
|________________________________________________________________________
human- Refine agenda
Task to refine: 1-HA-cook()
decomp i= 0 : origin
	1-HA-cook() => [12-HA-get_pasta() - 13-HA-come_pour_pasta()] : dec_cook_H
	12-HA-get_pasta() => [14-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 1-HA-cook()
decomp i= 0 : origin
	1-HA-cook() => [15-HA-get_pasta() - 16-HA-come_pour_pasta()] : dec_cook_H
	15-HA-get_pasta() => [17-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	origin: [14-HP-grab_pasta()-0.0 - 13-HA-come_pour_pasta()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 18-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-13-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-cook()
decomp i= 0 : origin
	0-RA-cook() => [19-RA-come_add_salt() - 20-RA-come_turn_on_pot_fire()] : dec_cook_R
	19-RA-come_add_salt() => [21-RP-add_salt()-0.0] : dec_come_add_salt_close
	21-RP-add_salt()-0.0 => [21-RP-add_salt()-0.0] : 
[92m	already done[0m
	continue .. next_subtasks=[20-RA-come_turn_on_pot_fire()]
	20-RA-come_turn_on_pot_fire() => [22-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	22-RP-turn_on_pot_fire()-0.0 => [22-RP-turn_on_pot_fire()-0.0] : 
[92m	already done[0m
	22-RP-turn_on_pot_fire()-0.0 => DecompType.AGENDA_EMPTY
	end 0
refinement = 
[
	origin: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 23-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-13-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
|________________________________________________________________________
human- Refine agenda
Task to refine: 13-HA-come_pour_pasta()
decomp i= 0 : origin
	13-HA-come_pour_pasta() => [24-HP-move('kitchen',)-0.0 - 25-HP-pour_pasta()-0.0] : dec_come_pour_pasta_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 13-HA-come_pour_pasta()
decomp i= 0 : origin
	13-HA-come_pour_pasta() => [26-HP-move('kitchen',)-0.0 - 27-HP-pour_pasta()-0.0] : dec_come_pour_pasta_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	origin: [24-HP-move('kitchen',)-0.0 - 25-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed pot_fire <- on
applied refinement = 
next actions:
	- 28-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-25-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	origin: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 29-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-25-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
|________________________________________________________________________
human- Refine agenda
Task to refine: 25-HP-pour_pasta()-0.0
decomp i= 0 : origin
	end 0
human- Refine agenda with r_beliefs
Task to refine: 25-HP-pour_pasta()-0.0
decomp i= 0 : origin
	end 0
No relevant belief divergence for refinement
refinement = 
[
	origin: [25-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 30-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	origin: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 7.0 Flag.E Type.F#1, (human BEGIN []) -7> (human pour_pasta ()) prev=None next=[]
new_e_flagged_nodes : 
	7.0 Flag.E Type.F#1, (human BEGIN []) -7> (human pour_pasta ()) prev=None next=[]
e_flagged_nodes :
	7.0 Flag.E Type.F#1, (human BEGIN []) -7> (human pour_pasta ()) prev=None next=[]
Ns before check = None
Nf = 7.0 Flag.E Type.F#1, (human BEGIN []) -7> (human pour_pasta ()) prev=None next=[]
new Ns!
Ns after check = 7.0 Flag.S Type.F#1, (human BEGIN []) -7> (human pour_pasta ()) prev=None next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 24ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 24ms
Non relevant div:
False
Plans:
10-RP-COM_ALIGN['pot_fire-None-off']-3.0 11-RP-turn_on_pot_fire()-1.0 18-HP-grab_pasta()-1.0 23-RP-IDLE[]-0.0 28-HP-move('kitchen',)-1.0 29-RP-IDLE[]-0.0 30-HP-pour_pasta()-1.0
