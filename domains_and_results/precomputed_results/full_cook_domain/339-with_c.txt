RUN N=339 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-1-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = room 	ObsType.OBS 	loc=room
|| robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.at_pasta = room 	ObsType.OBS 	loc=room
|| robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
|| robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
|| human_init.at_robot = room
|| human_init.at_human = kitchen
|| human_init.at_pasta = kitchen
|| human_init.salt_added = False
|| human_init.pot_fire = on
|________________________________________________________________________
Start first exploration
first node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-1-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = room 	ObsType.OBS 	loc=room
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = room
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
human- Refine agenda
Task to refine: 1-HA-cook()
decomp i= 0 : origin
	1-HA-cook() => [3-HA-get_pasta() - 4-HA-come_pour_pasta()] : dec_cook_H
	3-HA-get_pasta() => [5-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 1-HA-cook()
decomp i= 0 : origin
	1-HA-cook() => [6-HA-get_pasta() - 7-HA-come_pour_pasta()] : dec_cook_H
	6-HA-get_pasta() => [8-HP-move('room',)-0.0 - 9-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
Not same number of subtasks
NEED of belief alignment!

# UPDATE belief divergences
	at_pasta:None: H=kitchen R=room

Testing with 1 relevant divergence
divergence tested = at_pasta:None: H=kitchen R=room
Task to refine: 1-HA-cook()
decomp i= 0 : 
	1-HA-cook() => [10-HA-get_pasta() - 11-HA-come_pour_pasta()] : dec_cook_H
	10-HA-get_pasta() => [12-HP-move('room',)-0.0 - 13-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
	divergence is relevant!
Relevant divergences to correct : 	at_pasta:None: H=kitchen R=room

COM: com action added = 14-RP-COM_ALIGN['at_pasta-None-room']-3.0
Task to refine: 1-HA-cook()
decomp i= 0 : origin
	1-HA-cook() => [15-HA-get_pasta() - 16-HA-come_pour_pasta()] : dec_cook_H
	15-HA-get_pasta() => [17-HP-move('room',)-0.0 - 18-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
refinement = 
[
	origin: [17-HP-move('room',)-0.0 - 18-HP-grab_pasta()-0.0 - 16-HA-come_pour_pasta()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 19-HP-move('room',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
| AGENDA human =
||	-18-HP-grab_pasta()-0.0
||	-16-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = room 	ObsType.OBS 	loc=room
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = room
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-cook()
decomp i= 0 : origin
	0-RA-cook() => [20-RA-come_add_salt() - 21-RA-come_turn_on_pot_fire()] : dec_cook_R
	20-RA-come_add_salt() => [22-RP-move('kitchen',)-0.0 - 23-RP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
refinement = 
[
	origin: [22-RP-move('kitchen',)-0.0 - 23-RP-add_salt()-0.0 - 21-RA-come_turn_on_pot_fire()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 24-RP-move('kitchen',)-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-23-RP-add_salt()-0.0
||	-21-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-18-HP-grab_pasta()-0.0
||	-16-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = room
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
human- Refine agenda
Task to refine: 18-HP-grab_pasta()-0.0
decomp i= 0 : origin
	end 0
human- Refine agenda with r_beliefs
Task to refine: 18-HP-grab_pasta()-0.0
decomp i= 0 : origin
	end 0
No relevant belief divergence for refinement
refinement = 
[
	origin: [18-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 25-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-23-RP-add_salt()-0.0
||	-21-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-16-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = room
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
robot- Refine agenda
Task to refine: 23-RP-add_salt()-0.0
decomp i= 0 : origin
	end 0
refinement = 
[
	origin: [23-RP-add_salt()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 26-RP-add_salt()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-21-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-16-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = room
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
human- Refine agenda
Task to refine: 16-HA-come_pour_pasta()
decomp i= 0 : origin
	16-HA-come_pour_pasta() => [27-HP-move('kitchen',)-0.0 - 28-HP-pour_pasta()-0.0] : dec_come_pour_pasta_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 16-HA-come_pour_pasta()
decomp i= 0 : origin
	16-HA-come_pour_pasta() => [29-HP-move('kitchen',)-0.0 - 30-HP-pour_pasta()-0.0] : dec_come_pour_pasta_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	origin: [27-HP-move('kitchen',)-0.0 - 28-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed at_robot <- kitchen
applied refinement = 
next actions:
	- 31-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-21-RA-come_turn_on_pot_fire()
| AGENDA human =
||	-28-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
robot- Refine agenda
Task to refine: 21-RA-come_turn_on_pot_fire()
decomp i= 0 : origin
	21-RA-come_turn_on_pot_fire() => [32-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	32-RP-turn_on_pot_fire()-0.0 => [32-RP-turn_on_pot_fire()-0.0] : 
[92m	already done[0m
	32-RP-turn_on_pot_fire()-0.0 => DecompType.AGENDA_EMPTY
	end 0
refinement = 
[
	origin: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 33-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-28-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
|________________________________________________________________________
human- Refine agenda
Task to refine: 28-HP-pour_pasta()-0.0
decomp i= 0 : origin
	end 0
human- Refine agenda with r_beliefs
Task to refine: 28-HP-pour_pasta()-0.0
decomp i= 0 : origin
	end 0
[93m28-HP-pour_pasta()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
NEED of belief alignment!

# UPDATE belief divergences
	salt_added:None: H=False R=True

Testing with 1 relevant divergence
divergence tested = salt_added:None: H=False R=True
Task to refine: 28-HP-pour_pasta()-0.0
decomp i= 0 : 
	end 0
	divergence is relevant!
Relevant divergences to correct : 	salt_added:None: H=False R=True

COM: com action added = 34-RP-COM_ALIGN['salt_added-None-True']-3.0
Task to refine: 28-HP-pour_pasta()-0.0
decomp i= 0 : origin
	end 0
refinement = 
[
	origin: [28-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 35-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	origin: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 12.0 Flag.E Type.F#1, (robot BEGIN []) -8> (human pour_pasta ()) prev=None next=[]
new_e_flagged_nodes : 
	12.0 Flag.E Type.F#1, (robot BEGIN []) -8> (human pour_pasta ()) prev=None next=[]
e_flagged_nodes :
	12.0 Flag.E Type.F#1, (robot BEGIN []) -8> (human pour_pasta ()) prev=None next=[]
Ns before check = None
Nf = 12.0 Flag.E Type.F#1, (robot BEGIN []) -8> (human pour_pasta ()) prev=None next=[]
new Ns!
Ns after check = 12.0 Flag.S Type.F#1, (robot BEGIN []) -8> (human pour_pasta ()) prev=None next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 29ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 29ms
Non relevant div:
False
Plans:
14-RP-COM_ALIGN['at_pasta-None-room']-3.0 19-HP-move('room',)-1.0 24-RP-move('kitchen',)-1.0 25-HP-grab_pasta()-1.0 26-RP-add_salt()-1.0 31-HP-move('kitchen',)-1.0 33-RP-IDLE[]-0.0 34-RP-COM_ALIGN['salt_added-None-True']-3.0 35-HP-pour_pasta()-1.0
