RUN N=69 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.at_pasta = room 	ObsType.OBS 	loc=room
|| robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
|| robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
|| robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
|| human_init.at_robot = kitchen
|| human_init.at_human = kitchen
|| human_init.at_pasta = kitchen
|| human_init.salt_added = True
|| human_init.pot_fire = off
|| human_init.counter_clean = False
|________________________________________________________________________
Start first exploration
first node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : origin
	2-HA-cook() => [4-HA-get_pasta() - 5-HA-come_pour_pasta()] : dec_cook_H_1
	4-HA-get_pasta() => [6-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : origin
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [7-HA-get_pasta() - 8-HA-come_add_salt() - 9-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [10-HP-add_salt()-0.0, 11-HA-get_pasta(), 12-HA-come_pour_pasta()]
	7-HA-get_pasta() => [13-HP-move('room',)-0.0 - 14-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
Different number of decomposition
NEED of belief alignment!

# UPDATE belief divergences
	at_pasta:None: H=kitchen R=room
	salt_added:None: H=True R=False

Testing with 1 relevant divergence
divergence tested = at_pasta:None: H=kitchen R=room
Task to refine: 2-HA-cook()
decomp i= 0 : 
	2-HA-cook() => [15-HA-get_pasta() - 16-HA-come_pour_pasta()] : dec_cook_H_1
	15-HA-get_pasta() => [17-HP-move('room',)-0.0 - 18-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
Different number of decomposition
	divergence isn't relevant
divergence tested = salt_added:None: H=True R=False
Task to refine: 2-HA-cook()
decomp i= 0 : 
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [19-HA-get_pasta() - 20-HA-come_add_salt() - 21-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [22-HP-add_salt()-0.0, 23-HA-get_pasta(), 24-HA-come_pour_pasta()]
	19-HA-get_pasta() => [25-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
Not same number of subtasks
	divergence isn't relevant
Testing with 2 relevant divergences
divs tested :
at_pasta:None: H=kitchen R=room
salt_added:None: H=True R=False
Task to refine: 2-HA-cook()
decomp i= 0 : 
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [26-HA-get_pasta() - 27-HA-come_add_salt() - 28-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [29-HP-add_salt()-0.0, 30-HA-get_pasta(), 31-HA-come_pour_pasta()]
	26-HA-get_pasta() => [32-HP-move('room',)-0.0 - 33-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
	divergences are relevant!
Relevant divergences to correct : 	at_pasta:None: H=kitchen R=room
	salt_added:None: H=True R=False

COM: com action added = 34-RP-COM_ALIGN['at_pasta-room', 'salt_added-False']-3.0
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : origin
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [35-HA-get_pasta() - 36-HA-come_add_salt() - 37-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [38-HP-add_salt()-0.0, 39-HA-get_pasta(), 40-HA-come_pour_pasta()]
	35-HA-get_pasta() => [41-HP-move('room',)-0.0 - 42-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : origin
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [43-HA-get_pasta() - 44-HA-come_add_salt() - 45-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [46-HP-add_salt()-0.0, 47-HA-get_pasta(), 48-HA-come_pour_pasta()]
	43-HA-get_pasta() => [49-HP-move('room',)-0.0 - 50-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [41-HP-move('room',)-0.0 - 42-HP-grab_pasta()-0.0 - 36-HA-come_add_salt() - 37-HA-come_pour_pasta()]
	dec_cook_H_2: [38-HP-add_salt()-0.0 - 39-HA-get_pasta() - 40-HA-come_pour_pasta()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 51-HP-move('room',)-1.0
	- 52-HP-add_salt()-1.0

=> end explo
node explored = 0.0 Flag.F Type.H#1, (robot BEGIN []) -1> (robot COM_ALIGN ['at_pasta-room', 'salt_added-False']) prev=None next=[#2 #3]
new_e_flagged_nodes : 
	1.0 Flag.E Type.I#2, (human move ('room',)) -1> (human move ('room',)) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (human add_salt ()) -1> (human add_salt ()) prev=#1 next=[]
e_flagged_nodes :
	1.0 Flag.E Type.I#2, (human move ('room',)) -1> (human move ('room',)) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (human add_salt ()) -1> (human add_salt ()) prev=#1 next=[]
Ns before check = None
Nf = None
Ns after check = None
e_flagged_nodes after check solution:
	1.0 Flag.E Type.I#2, (human move ('room',)) -1> (human move ('room',)) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (human add_salt ()) -1> (human add_salt ()) prev=#1 next=[]

<@> picked node = 1.0 Flag.E Type.I#2, (human move ('room',)) -1> (human move ('room',)) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-42-HP-grab_pasta()-0.0
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-cook()
decomp i= 0 : dec_cook_H_1
	multiple decs for 0-RA-cook():  dec_cook_R_1  dec_cook_R_2 
	0-RA-cook() => [53-RA-come_add_salt() - 54-RA-come_turn_on_pot_fire()] : dec_cook_R_1
		decomposition 1 : dec_cook_R_2 created : [55-RA-come_turn_on_pot_fire(), 56-RA-come_add_salt()]
	53-RA-come_add_salt() => [57-RP-add_salt()-0.0] : dec_come_add_salt_close
	end 0
decomp i= 1 : dec_cook_R_2
	55-RA-come_turn_on_pot_fire() => [58-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 1
refinement = 
[
	dec_cook_R_1: [57-RP-add_salt()-0.0 - 54-RA-come_turn_on_pot_fire()]
	dec_cook_R_2: [58-RP-turn_on_pot_fire()-0.0 - 56-RA-come_add_salt()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 59-RP-add_salt()-1.0
	- 60-RP-turn_on_pot_fire()-1.0

=> end explo
node explored = 1.0 Flag.F Type.R#2, (human move ('room',)) -1> (human move ('room',)) prev=#1 next=[#4 #5]
new_e_flagged_nodes : 
	2.0 Flag.E Type.I#4, (robot add_salt ()) -1> (robot add_salt ()) prev=#2 next=[]
	2.0 Flag.E Type.I#5, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#2 next=[]
e_flagged_nodes :
	1.0 Flag.E Type.I#3, (human add_salt ()) -1> (human add_salt ()) prev=#1 next=[]
	2.0 Flag.E Type.I#4, (robot add_salt ()) -1> (robot add_salt ()) prev=#2 next=[]
	2.0 Flag.E Type.I#5, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#2 next=[]
Ns before check = None
Nf = None
Ns after check = None
e_flagged_nodes after check solution:
	1.0 Flag.E Type.I#3, (human add_salt ()) -1> (human add_salt ()) prev=#1 next=[]
	2.0 Flag.E Type.I#4, (robot add_salt ()) -1> (robot add_salt ()) prev=#2 next=[]
	2.0 Flag.E Type.I#5, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#2 next=[]

<@> picked node = 1.0 Flag.E Type.I#3, (human add_salt ()) -1> (human add_salt ()) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-39-HA-get_pasta()
||	-40-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = room
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-cook()
decomp i= 0 : dec_cook_H_2
	0-RA-cook() => [61-RA-come_turn_on_pot_fire()] : dec_cook_R_1
	61-RA-come_turn_on_pot_fire() => [62-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 0
refinement = 
[
	dec_cook_H_2: [62-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 63-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-39-HA-get_pasta()
||	-40-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = room
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 39-HA-get_pasta()
decomp i= 0 : dec_cook_H_2
	39-HA-get_pasta() => [64-HP-move('room',)-0.0 - 65-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 39-HA-get_pasta()
decomp i= 0 : dec_cook_H_2
	39-HA-get_pasta() => [66-HP-move('room',)-0.0 - 67-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [64-HP-move('room',)-0.0 - 65-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 68-HP-move('room',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-65-HP-grab_pasta()-0.0
||	-40-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : dec_cook_H_2
	1-RA-come_clean_counter() => [69-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_H_2: [69-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 70-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-65-HP-grab_pasta()-0.0
||	-40-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 65-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
human- Refine agenda with r_beliefs
Task to refine: 65-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [65-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 71-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-40-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 72-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-40-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 40-HA-come_pour_pasta()
decomp i= 0 : dec_cook_H_2
	40-HA-come_pour_pasta() => [73-HP-move('kitchen',)-0.0 - 74-HP-pour_pasta()-0.0] : dec_come_pour_pasta_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 40-HA-come_pour_pasta()
decomp i= 0 : dec_cook_H_2
	40-HA-come_pour_pasta() => [75-HP-move('kitchen',)-0.0 - 76-HP-pour_pasta()-0.0] : dec_come_pour_pasta_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [73-HP-move('kitchen',)-0.0 - 74-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 77-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-74-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 78-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-74-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 74-HP-pour_pasta()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
human- Refine agenda with r_beliefs
Task to refine: 74-HP-pour_pasta()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [74-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 79-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 7.0 Flag.E Type.F#3, (human add_salt ()) -9> (human pour_pasta ()) prev=#1 next=[]
new_e_flagged_nodes : 
	7.0 Flag.E Type.F#3, (human add_salt ()) -9> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes :
	2.0 Flag.E Type.I#4, (robot add_salt ()) -1> (robot add_salt ()) prev=#2 next=[]
	2.0 Flag.E Type.I#5, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#2 next=[]
	7.0 Flag.E Type.F#3, (human add_salt ()) -9> (human pour_pasta ()) prev=#1 next=[]
Ns before check = None
Nf = 7.0 Flag.E Type.F#3, (human add_salt ()) -9> (human pour_pasta ()) prev=#1 next=[]
new Ns!
Ns after check = 7.0 Flag.S Type.F#3, (human add_salt ()) -9> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	2.0 Flag.E Type.I#4, (robot add_salt ()) -1> (robot add_salt ()) prev=#2 next=[]
	2.0 Flag.E Type.I#5, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#2 next=[]

<@> picked node = 2.0 Flag.E Type.I#4, (robot add_salt ()) -1> (robot add_salt ()) prev=#2 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-54-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-42-HP-grab_pasta()-0.0
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 42-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_R_1
	end 0
human- Refine agenda with r_beliefs
Task to refine: 42-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_R_1
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_1: [42-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 80-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-54-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 54-RA-come_turn_on_pot_fire()
decomp i= 0 : dec_cook_R_1
	54-RA-come_turn_on_pot_fire() => [81-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 0
refinement = 
[
	dec_cook_R_1: [81-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 82-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 36-HA-come_add_salt()
decomp i= 0 : dec_cook_R_1
	36-HA-come_add_salt() => [83-HP-move('kitchen',)-0.0 - 84-HP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 36-HA-come_add_salt()
decomp i= 0 : dec_cook_R_1
	36-HA-come_add_salt() => [85-HP-move('kitchen',)-0.0 - 86-HP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_1: [83-HP-move('kitchen',)-0.0 - 84-HP-add_salt()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed pot_fire <- on
applied refinement = 
next actions:
	- 87-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-84-HP-add_salt()-0.0
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : dec_cook_R_1
	1-RA-come_clean_counter() => [88-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_R_1: [88-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 89-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-84-HP-add_salt()-0.0
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
Task to refine: 84-HP-add_salt()-0.0
decomp i= 0 : dec_cook_R_1
	end 0
human- Refine agenda with r_beliefs
Task to refine: 84-HP-add_salt()-0.0
decomp i= 0 : dec_cook_R_1
	84-HP-add_salt()-0.0 => [84-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 37-HA-come_pour_pasta()
	37-HA-come_pour_pasta() => [90-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
Not same task name
NEED of belief alignment!

# UPDATE belief divergences
	salt_added:None: H=False R=True

Testing with 1 relevant divergence
divergence tested = salt_added:None: H=False R=True
Task to refine: 84-HP-add_salt()-0.0
decomp i= 0 : 
	84-HP-add_salt()-0.0 => [84-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 37-HA-come_pour_pasta()
	37-HA-come_pour_pasta() => [91-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
	divergence is relevant!
Relevant divergences to correct : 	salt_added:None: H=False R=True

COM: com action added = 92-RP-COM_ALIGN['salt_added-True']-3.0
human- Refine agenda
Task to refine: 84-HP-add_salt()-0.0
decomp i= 0 : dec_cook_R_1
	84-HP-add_salt()-0.0 => [84-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 37-HA-come_pour_pasta()
	37-HA-come_pour_pasta() => [93-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 84-HP-add_salt()-0.0
decomp i= 0 : dec_cook_R_1
	84-HP-add_salt()-0.0 => [84-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 37-HA-come_pour_pasta()
	37-HA-come_pour_pasta() => [94-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_1: [93-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Trying to create delaying branch
rel_divs= 	salt_added:None: H=False R=True

	div not initial!
		testing n= 6.0 Flag.E Type.I#4, (robot add_salt ()) -5> (robot COM_ALIGN ['salt_added-True']) prev=#2 next=[]
	div node identified :  6.0 Flag.E Type.I#4, (robot add_salt ()) -5> (robot COM_ALIGN ['salt_added-True']) prev=#2 next=[]
	testing action= 59-RP-add_salt()-1.0
		R-Agenda in [54-RA-come_turn_on_pot_fire(), 1-RA-come_clean_counter()]
		H-Agenda in [42-HP-grab_pasta()-0.0, 36-HA-come_add_salt(), 37-HA-come_pour_pasta()]
before acting
after acting
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-42-HP-grab_pasta()-0.0
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
after other
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-42-HP-grab_pasta()-0.0
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
agendas:
div_action.agent_agendas[CM.g_human_name]= [42-HP-grab_pasta()-0.0, 36-HA-come_add_salt(), 37-HA-come_pour_pasta()]
div_action.agent_agendas[CM.g_robot_name]= [54-RA-come_turn_on_pot_fire(), 1-RA-come_clean_counter()]
	div action identified :  59-RP-add_salt()-1.0
__________________________________________________________________________
| AGENDA robot =
||	-59-RP-add_salt()-1.0
||	-54-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-42-HP-grab_pasta()-0.0
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
	Branching:
	delay_node created =>  1.0 Flag.E Type.D#6, (robot DELAY []) -1> (robot DELAY []) prev=#2 next=[]
applied refinement = 
next actions:
	- 95-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_R_1: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 7.0 Flag.E Type.F#4, (robot add_salt ()) -6> (human pour_pasta ()) prev=#2 next=[]
new_e_flagged_nodes : 
	1.0 Flag.E Type.D#6, (robot DELAY []) -1> (robot DELAY []) prev=#2 next=[]
	7.0 Flag.E Type.F#4, (robot add_salt ()) -6> (human pour_pasta ()) prev=#2 next=[]
e_flagged_nodes :
	2.0 Flag.E Type.I#5, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#2 next=[]
	1.0 Flag.E Type.D#6, (robot DELAY []) -1> (robot DELAY []) prev=#2 next=[]
	7.0 Flag.E Type.F#4, (robot add_salt ()) -6> (human pour_pasta ()) prev=#2 next=[]
Ns before check = 7.0 Flag.S Type.F#3, (human add_salt ()) -9> (human pour_pasta ()) prev=#1 next=[]
Nf = 7.0 Flag.E Type.F#4, (robot add_salt ()) -6> (human pour_pasta ()) prev=#2 next=[]
Ns after check = 7.0 Flag.S Type.F#3, (human add_salt ()) -9> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	2.0 Flag.E Type.I#5, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#2 next=[]
	1.0 Flag.E Type.D#6, (robot DELAY []) -1> (robot DELAY []) prev=#2 next=[]

<@> picked node = 1.0 Flag.E Type.D#6, (robot DELAY []) -1> (robot DELAY []) prev=#2 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-59-RP-add_salt()-1.0
||	-54-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-42-HP-grab_pasta()-0.0
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 42-HP-grab_pasta()-0.0
decomp i= 0 : delaying
	end 0
human- Refine agenda with r_beliefs
Task to refine: 42-HP-grab_pasta()-0.0
decomp i= 0 : delaying
	end 0
No relevant belief divergence for refinement
refinement = 
[
	delaying: [42-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 97-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-59-RP-add_salt()-1.0
||	-54-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
applied refinement = 
next actions:
	- 98-RP-DELAY[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-59-RP-add_salt()-1.0
||	-54-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 36-HA-come_add_salt()
decomp i= 0 : delaying
	36-HA-come_add_salt() => [99-HP-move('kitchen',)-0.0 - 100-HP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 36-HA-come_add_salt()
decomp i= 0 : delaying
	36-HA-come_add_salt() => [101-HP-move('kitchen',)-0.0 - 102-HP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	delaying: [99-HP-move('kitchen',)-0.0 - 100-HP-add_salt()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 103-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-59-RP-add_salt()-1.0
||	-54-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-100-HP-add_salt()-0.0
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 59-RP-add_salt()-1.0
decomp i= 0 : delaying
	end 0
refinement = 
[
	delaying: [59-RP-add_salt()-1.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 104-RP-add_salt()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-54-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-100-HP-add_salt()-0.0
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 100-HP-add_salt()-0.0
decomp i= 0 : delaying
	100-HP-add_salt()-0.0 => [100-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 37-HA-come_pour_pasta()
	37-HA-come_pour_pasta() => [105-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 100-HP-add_salt()-0.0
decomp i= 0 : delaying
	100-HP-add_salt()-0.0 => [100-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 37-HA-come_pour_pasta()
	37-HA-come_pour_pasta() => [106-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
[93m105-HP-pour_pasta()-0.0 not applicable[0m
[93m105-HP-pour_pasta()-0.0 not applicable[0m
No relevant belief divergence for refinement
refinement = 
[
	delaying: [105-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
[93m105-HP-pour_pasta()-0.0 not applicable[0m
pour_pasta not feasible...
applied refinement = 
next actions:
	- 107-HP-WAIT[]-2.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-54-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-105-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 54-RA-come_turn_on_pot_fire()
decomp i= 0 : delaying
	54-RA-come_turn_on_pot_fire() => [108-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 0
refinement = 
[
	delaying: [108-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 109-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-105-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 105-HP-pour_pasta()-0.0
decomp i= 0 : delaying
	end 0
human- Refine agenda with r_beliefs
Task to refine: 105-HP-pour_pasta()-0.0
decomp i= 0 : delaying
	end 0
No relevant belief divergence for refinement
refinement = 
[
	delaying: [105-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 110-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : delaying
	1-RA-come_clean_counter() => [111-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	delaying: [111-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 112-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
human- Refine agenda with r_beliefs
No relevant belief divergence for refinement
refinement = 
[
	delaying: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 9.0 Flag.E Type.F#6, (robot DELAY []) -9> (robot clean_counter ()) prev=#2 next=[]
new_e_flagged_nodes : 
	9.0 Flag.E Type.F#6, (robot DELAY []) -9> (robot clean_counter ()) prev=#2 next=[]
e_flagged_nodes :
	2.0 Flag.E Type.I#5, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#2 next=[]
	9.0 Flag.E Type.F#6, (robot DELAY []) -9> (robot clean_counter ()) prev=#2 next=[]
Ns before check = 7.0 Flag.S Type.F#3, (human add_salt ()) -9> (human pour_pasta ()) prev=#1 next=[]
Nf = 9.0 Flag.E Type.F#6, (robot DELAY []) -9> (robot clean_counter ()) prev=#2 next=[]
Ns after check = 7.0 Flag.S Type.F#3, (human add_salt ()) -9> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	2.0 Flag.E Type.I#5, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#2 next=[]

<@> picked node = 2.0 Flag.E Type.I#5, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#2 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-56-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-42-HP-grab_pasta()-0.0
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 42-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_R_2
	end 0
human- Refine agenda with r_beliefs
Task to refine: 42-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_R_2
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_2: [42-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 113-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-56-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 56-RA-come_add_salt()
decomp i= 0 : dec_cook_R_2
	56-RA-come_add_salt() => [114-RP-add_salt()-0.0] : dec_come_add_salt_close
	end 0
refinement = 
[
	dec_cook_R_2: [114-RP-add_salt()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 115-RP-add_salt()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 36-HA-come_add_salt()
decomp i= 0 : dec_cook_R_2
	36-HA-come_add_salt() => [116-HP-move('kitchen',)-0.0 - 117-HP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 36-HA-come_add_salt()
decomp i= 0 : dec_cook_R_2
	36-HA-come_add_salt() => [118-HP-move('kitchen',)-0.0 - 119-HP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_2: [116-HP-move('kitchen',)-0.0 - 117-HP-add_salt()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed pot_fire <- on
applied refinement = 
next actions:
	- 120-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-117-HP-add_salt()-0.0
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : dec_cook_R_2
	1-RA-come_clean_counter() => [121-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_R_2: [121-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 122-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-117-HP-add_salt()-0.0
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
Task to refine: 117-HP-add_salt()-0.0
decomp i= 0 : dec_cook_R_2
	end 0
human- Refine agenda with r_beliefs
Task to refine: 117-HP-add_salt()-0.0
decomp i= 0 : dec_cook_R_2
	117-HP-add_salt()-0.0 => [117-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 37-HA-come_pour_pasta()
	37-HA-come_pour_pasta() => [123-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
Not same task name
NEED of belief alignment!

# UPDATE belief divergences
	salt_added:None: H=False R=True

Testing with 1 relevant divergence
divergence tested = salt_added:None: H=False R=True
Task to refine: 117-HP-add_salt()-0.0
decomp i= 0 : 
	117-HP-add_salt()-0.0 => [117-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 37-HA-come_pour_pasta()
	37-HA-come_pour_pasta() => [124-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
	divergence is relevant!
Relevant divergences to correct : 	salt_added:None: H=False R=True

COM: com action added = 125-RP-COM_ALIGN['salt_added-True']-3.0
human- Refine agenda
Task to refine: 117-HP-add_salt()-0.0
decomp i= 0 : dec_cook_R_2
	117-HP-add_salt()-0.0 => [117-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 37-HA-come_pour_pasta()
	37-HA-come_pour_pasta() => [126-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 117-HP-add_salt()-0.0
decomp i= 0 : dec_cook_R_2
	117-HP-add_salt()-0.0 => [117-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 37-HA-come_pour_pasta()
	37-HA-come_pour_pasta() => [127-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_2: [126-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Trying to create delaying branch
rel_divs= 	salt_added:None: H=False R=True

	div not initial!
		testing n= 6.0 Flag.E Type.I#5, (robot turn_on_pot_fire ()) -5> (robot COM_ALIGN ['salt_added-True']) prev=#2 next=[]
	div node identified :  6.0 Flag.E Type.I#5, (robot turn_on_pot_fire ()) -5> (robot COM_ALIGN ['salt_added-True']) prev=#2 next=[]
	testing action= 60-RP-turn_on_pot_fire()-1.0
		R-Agenda in [56-RA-come_add_salt(), 1-RA-come_clean_counter()]
		H-Agenda in [42-HP-grab_pasta()-0.0, 36-HA-come_add_salt(), 37-HA-come_pour_pasta()]
before acting
after acting
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-42-HP-grab_pasta()-0.0
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
after other
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-42-HP-grab_pasta()-0.0
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
action.next= [113-HP-grab_pasta()-1.0]
	testing action= 113-HP-grab_pasta()-1.0
		R-Agenda in [56-RA-come_add_salt(), 1-RA-come_clean_counter()]
		H-Agenda in [36-HA-come_add_salt(), 37-HA-come_pour_pasta()]
before acting
after acting
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-42-HP-grab_pasta()-0.0
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
after other
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-42-HP-grab_pasta()-0.0
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
action.next= [115-RP-add_salt()-1.0]
	testing action= 115-RP-add_salt()-1.0
		R-Agenda in [1-RA-come_clean_counter()]
		H-Agenda in [36-HA-come_add_salt(), 37-HA-come_pour_pasta()]
before acting
after acting
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-42-HP-grab_pasta()-0.0
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
after other
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-42-HP-grab_pasta()-0.0
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
agendas:
div_action.agent_agendas[CM.g_human_name]= [36-HA-come_add_salt(), 37-HA-come_pour_pasta()]
div_action.agent_agendas[CM.g_robot_name]= [1-RA-come_clean_counter()]
	div action identified :  115-RP-add_salt()-1.0
__________________________________________________________________________
| AGENDA robot =
||	-115-RP-add_salt()-1.0
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
	Branching:
BRANCHING current_cost= 6.0
	div_node_bottom created =>  6.0 Flag.E Type.I#7, (robot add_salt ()) -3> (robot COM_ALIGN ['salt_added-True']) prev=#5 next=[]
	delay_node created =>  3.0 Flag.E Type.D#8, (robot DELAY []) -1> (robot DELAY []) prev=#5 next=[]
	div_node edited =>  3.0 Flag.F Type.R#5, (robot turn_on_pot_fire ()) -2> (human grab_pasta ()) prev=#2 next=[#7 #8]
applied refinement = 
next actions:
	- 128-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_R_2: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 3.0 Flag.F Type.R#5, (robot turn_on_pot_fire ()) -2> (human grab_pasta ()) prev=#2 next=[#7 #8]
new_e_flagged_nodes : 
	3.0 Flag.E Type.D#8, (robot DELAY []) -1> (robot DELAY []) prev=#5 next=[]
	7.0 Flag.E Type.F#7, (robot add_salt ()) -4> (human pour_pasta ()) prev=#5 next=[]
e_flagged_nodes :
	3.0 Flag.E Type.D#8, (robot DELAY []) -1> (robot DELAY []) prev=#5 next=[]
	7.0 Flag.E Type.F#7, (robot add_salt ()) -4> (human pour_pasta ()) prev=#5 next=[]
Ns before check = 7.0 Flag.S Type.F#3, (human add_salt ()) -9> (human pour_pasta ()) prev=#1 next=[]
Nf = 7.0 Flag.E Type.F#7, (robot add_salt ()) -4> (human pour_pasta ()) prev=#5 next=[]
Ns after check = 7.0 Flag.S Type.F#3, (human add_salt ()) -9> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	3.0 Flag.E Type.D#8, (robot DELAY []) -1> (robot DELAY []) prev=#5 next=[]

<@> picked node = 3.0 Flag.E Type.D#8, (robot DELAY []) -1> (robot DELAY []) prev=#5 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-115-RP-add_salt()-1.0
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-36-HA-come_add_salt()
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 36-HA-come_add_salt()
decomp i= 0 : delaying
	36-HA-come_add_salt() => [130-HP-move('kitchen',)-0.0 - 131-HP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 36-HA-come_add_salt()
decomp i= 0 : delaying
	36-HA-come_add_salt() => [132-HP-move('kitchen',)-0.0 - 133-HP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	delaying: [130-HP-move('kitchen',)-0.0 - 131-HP-add_salt()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed pot_fire <- on
applied refinement = 
next actions:
	- 134-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-115-RP-add_salt()-1.0
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-131-HP-add_salt()-0.0
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 115-RP-add_salt()-1.0
decomp i= 0 : delaying
	end 0
refinement = 
[
	delaying: [115-RP-add_salt()-1.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 135-RP-add_salt()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-131-HP-add_salt()-0.0
||	-37-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 131-HP-add_salt()-0.0
decomp i= 0 : delaying
	131-HP-add_salt()-0.0 => [131-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 37-HA-come_pour_pasta()
	37-HA-come_pour_pasta() => [136-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 131-HP-add_salt()-0.0
decomp i= 0 : delaying
	131-HP-add_salt()-0.0 => [131-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 37-HA-come_pour_pasta()
	37-HA-come_pour_pasta() => [137-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	delaying: [136-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 138-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : delaying
	1-RA-come_clean_counter() => [139-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	delaying: [139-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 140-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
human- Refine agenda with r_beliefs
No relevant belief divergence for refinement
refinement = 
[
	delaying: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 7.0 Flag.E Type.F#8, (robot DELAY []) -5> (robot clean_counter ()) prev=#5 next=[]
new_e_flagged_nodes : 
	7.0 Flag.E Type.F#8, (robot DELAY []) -5> (robot clean_counter ()) prev=#5 next=[]
e_flagged_nodes :
	7.0 Flag.E Type.F#8, (robot DELAY []) -5> (robot clean_counter ()) prev=#5 next=[]
Ns before check = 7.0 Flag.S Type.F#3, (human add_salt ()) -9> (human pour_pasta ()) prev=#1 next=[]
Nf = 7.0 Flag.E Type.F#8, (robot DELAY []) -5> (robot clean_counter ()) prev=#5 next=[]
Ns after check = 7.0 Flag.S Type.F#3, (human add_salt ()) -9> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 319ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 319ms
Non relevant div:
True
Plans:
34-RP-COM_ALIGN['at_pasta-room', 'salt_added-False']-3.0 51-HP-move('room',)-1.0 59-RP-add_salt()-1.0 80-HP-grab_pasta()-1.0 82-RP-turn_on_pot_fire()-1.0 87-HP-move('kitchen',)-1.0 89-RP-clean_counter()-1.0 92-RP-COM_ALIGN['salt_added-True']-3.0 95-HP-pour_pasta()-1.0/34-RP-COM_ALIGN['at_pasta-room', 'salt_added-False']-3.0 51-HP-move('room',)-1.0 60-RP-turn_on_pot_fire()-1.0 113-HP-grab_pasta()-1.0 115-RP-add_salt()-1.0 120-HP-move('kitchen',)-1.0 122-RP-clean_counter()-1.0 125-RP-COM_ALIGN['salt_added-True']-3.0 128-HP-pour_pasta()-1.0/34-RP-COM_ALIGN['at_pasta-room', 'salt_added-False']-3.0 51-HP-move('room',)-1.0 60-RP-turn_on_pot_fire()-1.0 113-HP-grab_pasta()-1.0 129-RP-DELAY[]-0.0 134-HP-move('kitchen',)-1.0 135-RP-add_salt()-1.0 138-HP-pour_pasta()-1.0 140-RP-clean_counter()-1.0/34-RP-COM_ALIGN['at_pasta-room', 'salt_added-False']-3.0 51-HP-move('room',)-1.0 96-RP-DELAY[]-0.0 97-HP-grab_pasta()-1.0 98-RP-DELAY[]-0.0 103-HP-move('kitchen',)-1.0 104-RP-add_salt()-1.0 107-HP-WAIT[]-2.0 109-RP-turn_on_pot_fire()-1.0 110-HP-pour_pasta()-1.0 112-RP-clean_counter()-1.0/34-RP-COM_ALIGN['at_pasta-room', 'salt_added-False']-3.0 52-HP-add_salt()-1.0 63-RP-turn_on_pot_fire()-1.0 68-HP-move('room',)-1.0 70-RP-clean_counter()-1.0 71-HP-grab_pasta()-1.0 72-RP-IDLE[]-0.0 77-HP-move('kitchen',)-1.0 78-RP-IDLE[]-0.0 79-HP-pour_pasta()-1.0
best_traces:
[140-RP-clean_counter()-1.0, 79-HP-pour_pasta()-1.0]
best_metrics:
(1.0, 0.0, 8.5, 0.5)
