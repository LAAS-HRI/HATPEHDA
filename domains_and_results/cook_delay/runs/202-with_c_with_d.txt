RUN N=202 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.at_human = room 	ObsType.OBS 	loc=room
|| robot_init.at_pasta = room 	ObsType.OBS 	loc=room
|| robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
|| robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
|| robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
|| human_init.at_robot = kitchen
|| human_init.at_human = room
|| human_init.at_pasta = room
|| human_init.salt_added = False
|| human_init.pot_fire = on
|| human_init.counter_clean = False
|________________________________________________________________________
Start first exploration
first node = 0.0 Flag.E Type.I#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-cook()
decomp i= 0 : origin
	multiple decs for 0-RA-cook():  dec_cook_R_1  dec_cook_R_2 
	0-RA-cook() => [4-RA-come_add_salt() - 5-RA-come_turn_on_pot_fire()] : dec_cook_R_1
		decomposition 1 : dec_cook_R_2 created : [6-RA-come_turn_on_pot_fire(), 7-RA-come_add_salt()]
	4-RA-come_add_salt() => [8-RP-add_salt()-0.0] : dec_come_add_salt_close
	end 0
decomp i= 1 : dec_cook_R_2
	6-RA-come_turn_on_pot_fire() => [9-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 1
refinement = 
[
	dec_cook_R_1: [8-RP-add_salt()-0.0 - 5-RA-come_turn_on_pot_fire()]
	dec_cook_R_2: [9-RP-turn_on_pot_fire()-0.0 - 7-RA-come_add_salt()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
[93malready done[0m
[93m9-RP-turn_on_pot_fire()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs

# UPDATE belief divergences
	pot_fire:None: H=on R=off

Testing with 1 relevant divergence
divergence tested = pot_fire:None: H=on R=off
Task to refine: 2-HA-cook()
decomp i= 0 : 
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [11-HA-get_pasta() - 12-HA-come_add_salt() - 13-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [14-HP-add_salt()-0.0, 15-HA-get_pasta(), 16-HA-come_pour_pasta()]
	11-HA-get_pasta() => [17-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
	divergence is relevant!
Relevant divergences to correct : 	pot_fire:None: H=on R=off

COM: com action added eff = 18-RP-COM_ALIGN['pot_fire-off']-3.0
robot- Refine agenda
Task to refine: 0-RA-cook()
decomp i= 0 : origin
	multiple decs for 0-RA-cook():  dec_cook_R_1  dec_cook_R_2 
	0-RA-cook() => [19-RA-come_add_salt() - 20-RA-come_turn_on_pot_fire()] : dec_cook_R_1
		decomposition 1 : dec_cook_R_2 created : [21-RA-come_turn_on_pot_fire(), 22-RA-come_add_salt()]
	19-RA-come_add_salt() => [23-RP-add_salt()-0.0] : dec_come_add_salt_close
	end 0
decomp i= 1 : dec_cook_R_2
	21-RA-come_turn_on_pot_fire() => [24-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 1
refinement = 
[
	dec_cook_R_1: [23-RP-add_salt()-0.0 - 20-RA-come_turn_on_pot_fire()]
	dec_cook_R_2: [24-RP-turn_on_pot_fire()-0.0 - 22-RA-come_add_salt()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 25-RP-add_salt()-1.0
	- 26-RP-turn_on_pot_fire()-1.0

=> end explo
node explored = 0.0 Flag.F Type.H#1, (human BEGIN []) -1> (robot COM_ALIGN ['pot_fire-off']) prev=None next=[#2 #3]
new_e_flagged_nodes : 
	1.0 Flag.E Type.I#2, (robot add_salt ()) -1> (robot add_salt ()) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#1 next=[]
e_flagged_nodes :
	1.0 Flag.E Type.I#2, (robot add_salt ()) -1> (robot add_salt ()) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#1 next=[]
Ns before check = None
Nf = None
Ns after check = None
e_flagged_nodes after check solution:
	1.0 Flag.E Type.I#2, (robot add_salt ()) -1> (robot add_salt ()) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#1 next=[]

<@> picked node = 1.0 Flag.E Type.I#2, (robot add_salt ()) -1> (robot add_salt ()) prev=#1 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_1
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [27-HA-get_pasta() - 28-HA-come_add_salt() - 29-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [30-HP-add_salt()-0.0, 31-HA-get_pasta(), 32-HA-come_pour_pasta()]
	27-HA-get_pasta() => [33-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_1
	2-HA-cook() => [34-HA-get_pasta() - 35-HA-come_pour_pasta()] : dec_cook_H_1
	34-HA-get_pasta() => [36-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
Different number of decomposition
NEED of belief alignment!

# UPDATE belief divergences
	salt_added:None: H=False R=True

Testing with 1 relevant divergence
divergence tested = salt_added:None: H=False R=True
Task to refine: 2-HA-cook()
decomp i= 0 : 
	2-HA-cook() => [37-HA-get_pasta() - 38-HA-come_pour_pasta()] : dec_cook_H_1
	37-HA-get_pasta() => [39-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
	divergence is relevant!
Relevant divergences to correct : 	salt_added:None: H=False R=True

COM: com action added = 40-RP-COM_ALIGN['salt_added-True']-3.0
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_1
	2-HA-cook() => [41-HA-get_pasta() - 42-HA-come_pour_pasta()] : dec_cook_H_1
	41-HA-get_pasta() => [43-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_1
	2-HA-cook() => [44-HA-get_pasta() - 45-HA-come_pour_pasta()] : dec_cook_H_1
	44-HA-get_pasta() => [46-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_1: [43-HP-grab_pasta()-0.0 - 42-HA-come_pour_pasta()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Trying to create delaying branch
rel_divs= 	salt_added:None: H=False R=True

	div not initial!
		testing n= 1.0 Flag.E Type.I#2, (robot add_salt ()) -1> (robot COM_ALIGN ['salt_added-True']) prev=#1 next=[]
	div node identified :  1.0 Flag.E Type.I#2, (robot add_salt ()) -1> (robot COM_ALIGN ['salt_added-True']) prev=#1 next=[]
	testing action= 25-RP-add_salt()-1.0
		R-Agenda in [20-RA-come_turn_on_pot_fire(), 1-RA-come_clean_counter()]
		H-Agenda in [2-HA-cook()]
before acting
after acting
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
after other
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
agendas:
div_action.agent_agendas[CM.g_human_name]= [2-HA-cook()]
div_action.agent_agendas[CM.g_robot_name]= [20-RA-come_turn_on_pot_fire(), 1-RA-come_clean_counter()]
	div action identified :  25-RP-add_salt()-1.0
__________________________________________________________________________
| AGENDA robot =
||	-25-RP-add_salt()-1.0
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
	Branching:
	delay_node created =>  3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
applied refinement = 
next actions:
	- 47-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-42-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 20-RA-come_turn_on_pot_fire()
decomp i= 0 : dec_cook_R_1
	20-RA-come_turn_on_pot_fire() => [49-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 0
refinement = 
[
	dec_cook_R_1: [49-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 50-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-42-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 42-HA-come_pour_pasta()
decomp i= 0 : dec_cook_R_1
	42-HA-come_pour_pasta() => [51-HP-move('kitchen',)-0.0 - 52-HP-pour_pasta()-0.0] : dec_come_pour_pasta_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 42-HA-come_pour_pasta()
decomp i= 0 : dec_cook_R_1
	42-HA-come_pour_pasta() => [53-HP-move('kitchen',)-0.0 - 54-HP-pour_pasta()-0.0] : dec_come_pour_pasta_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_1: [51-HP-move('kitchen',)-0.0 - 52-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed pot_fire <- on
applied refinement = 
next actions:
	- 55-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-52-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : dec_cook_R_1
	1-RA-come_clean_counter() => [56-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_R_1: [56-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 57-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-52-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
Task to refine: 52-HP-pour_pasta()-0.0
decomp i= 0 : dec_cook_R_1
	end 0
human- Refine agenda with r_beliefs
Task to refine: 52-HP-pour_pasta()-0.0
decomp i= 0 : dec_cook_R_1
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_1: [52-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 58-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_R_1: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 6.0 Flag.E Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
new_e_flagged_nodes : 
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	6.0 Flag.E Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes :
	1.0 Flag.E Type.I#3, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#1 next=[]
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	6.0 Flag.E Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
Ns before check = None
Nf = 6.0 Flag.E Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
new Ns!
Ns after check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	1.0 Flag.E Type.I#3, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#1 next=[]
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]

<@> picked node = 1.0 Flag.E Type.I#3, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#1 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-22-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_2
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [59-HA-get_pasta() - 60-HA-come_add_salt() - 61-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [62-HP-add_salt()-0.0, 63-HA-get_pasta(), 64-HA-come_pour_pasta()]
	59-HA-get_pasta() => [65-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_2
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [66-HA-get_pasta() - 67-HA-come_add_salt() - 68-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [69-HP-add_salt()-0.0, 70-HA-get_pasta(), 71-HA-come_pour_pasta()]
	66-HA-get_pasta() => [72-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [65-HP-grab_pasta()-0.0 - 60-HA-come_add_salt() - 61-HA-come_pour_pasta()]
	dec_cook_H_2: [62-HP-add_salt()-0.0 - 63-HA-get_pasta() - 64-HA-come_pour_pasta()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 73-HP-grab_pasta()-1.0
	- 74-HP-add_salt()-1.0

=> end explo
node explored = 1.0 Flag.F Type.H#3, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#1 next=[#5 #6]
new_e_flagged_nodes : 
	2.0 Flag.E Type.I#5, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#3 next=[]
	2.0 Flag.E Type.I#6, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]
e_flagged_nodes :
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	2.0 Flag.E Type.I#5, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#3 next=[]
	2.0 Flag.E Type.I#6, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]
Ns before check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
Nf = None
Ns after check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	2.0 Flag.E Type.I#5, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#3 next=[]
	2.0 Flag.E Type.I#6, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]

<@> picked node = 2.0 Flag.E Type.I#5, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#3 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-22-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-60-HA-come_add_salt()
||	-61-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 22-RA-come_add_salt()
decomp i= 0 : dec_cook_H_1
	22-RA-come_add_salt() => [75-RP-add_salt()-0.0] : dec_come_add_salt_close
	end 0
refinement = 
[
	dec_cook_H_1: [75-RP-add_salt()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 76-RP-add_salt()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-60-HA-come_add_salt()
||	-61-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 60-HA-come_add_salt()
decomp i= 0 : dec_cook_H_1
	60-HA-come_add_salt() => [77-HP-move('kitchen',)-0.0 - 78-HP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 60-HA-come_add_salt()
decomp i= 0 : dec_cook_H_1
	60-HA-come_add_salt() => [79-HP-move('kitchen',)-0.0 - 80-HP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [77-HP-move('kitchen',)-0.0 - 78-HP-add_salt()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed pot_fire <- on
applied refinement = 
next actions:
	- 81-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-78-HP-add_salt()-0.0
||	-61-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : dec_cook_H_1
	1-RA-come_clean_counter() => [82-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_H_1: [82-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 83-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-78-HP-add_salt()-0.0
||	-61-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
Task to refine: 78-HP-add_salt()-0.0
decomp i= 0 : dec_cook_H_1
	end 0
human- Refine agenda with r_beliefs
Task to refine: 78-HP-add_salt()-0.0
decomp i= 0 : dec_cook_H_1
	78-HP-add_salt()-0.0 => [78-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 61-HA-come_pour_pasta()
	61-HA-come_pour_pasta() => [84-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
Not same task name
NEED of belief alignment!

# UPDATE belief divergences
	salt_added:None: H=False R=True

Testing with 1 relevant divergence
divergence tested = salt_added:None: H=False R=True
Task to refine: 78-HP-add_salt()-0.0
decomp i= 0 : 
	78-HP-add_salt()-0.0 => [78-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 61-HA-come_pour_pasta()
	61-HA-come_pour_pasta() => [85-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
	divergence is relevant!
Relevant divergences to correct : 	salt_added:None: H=False R=True

COM: com action added = 86-RP-COM_ALIGN['salt_added-True']-3.0
human- Refine agenda
Task to refine: 78-HP-add_salt()-0.0
decomp i= 0 : dec_cook_H_1
	78-HP-add_salt()-0.0 => [78-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 61-HA-come_pour_pasta()
	61-HA-come_pour_pasta() => [87-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 78-HP-add_salt()-0.0
decomp i= 0 : dec_cook_H_1
	78-HP-add_salt()-0.0 => [78-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 61-HA-come_pour_pasta()
	61-HA-come_pour_pasta() => [88-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [87-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Trying to create delaying branch
rel_divs= 	salt_added:None: H=False R=True

	div not initial!
		testing n= 5.0 Flag.E Type.I#5, (human grab_pasta ()) -4> (robot COM_ALIGN ['salt_added-True']) prev=#3 next=[]
	div node identified :  5.0 Flag.E Type.I#5, (human grab_pasta ()) -4> (robot COM_ALIGN ['salt_added-True']) prev=#3 next=[]
	testing action= 73-HP-grab_pasta()-1.0
		R-Agenda in [22-RA-come_add_salt(), 1-RA-come_clean_counter()]
		H-Agenda in [60-HA-come_add_salt(), 61-HA-come_pour_pasta()]
before acting
after acting
__________________________________________________________________________
| AGENDA robot =
||	-22-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
after other
__________________________________________________________________________
| AGENDA robot =
||	-22-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
action.next= [76-RP-add_salt()-1.0]
	testing action= 76-RP-add_salt()-1.0
		R-Agenda in [1-RA-come_clean_counter()]
		H-Agenda in [60-HA-come_add_salt(), 61-HA-come_pour_pasta()]
before acting
after acting
__________________________________________________________________________
| AGENDA robot =
||	-22-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
after other
__________________________________________________________________________
| AGENDA robot =
||	-22-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
agendas:
div_action.agent_agendas[CM.g_human_name]= [60-HA-come_add_salt(), 61-HA-come_pour_pasta()]
div_action.agent_agendas[CM.g_robot_name]= [1-RA-come_clean_counter()]
	div action identified :  76-RP-add_salt()-1.0
__________________________________________________________________________
| AGENDA robot =
||	-76-RP-add_salt()-1.0
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-60-HA-come_add_salt()
||	-61-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
	Branching:
BRANCHING current_cost= 5.0
	div_node_bottom created =>  5.0 Flag.E Type.I#7, (robot add_salt ()) -3> (robot COM_ALIGN ['salt_added-True']) prev=#5 next=[]
	delay_node created =>  2.0 Flag.E Type.D#8, (robot DELAY []) -1> (robot DELAY []) prev=#5 next=[]
	div_node edited =>  2.0 Flag.F Type.R#5, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#3 next=[#7 #8]
applied refinement = 
next actions:
	- 89-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_1: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 2.0 Flag.F Type.R#5, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#3 next=[#7 #8]
new_e_flagged_nodes : 
	2.0 Flag.E Type.D#8, (robot DELAY []) -1> (robot DELAY []) prev=#5 next=[]
	6.0 Flag.E Type.F#7, (robot add_salt ()) -4> (human pour_pasta ()) prev=#5 next=[]
e_flagged_nodes :
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	2.0 Flag.E Type.I#6, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]
	2.0 Flag.E Type.D#8, (robot DELAY []) -1> (robot DELAY []) prev=#5 next=[]
	6.0 Flag.E Type.F#7, (robot add_salt ()) -4> (human pour_pasta ()) prev=#5 next=[]
Ns before check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
Nf = 6.0 Flag.E Type.F#7, (robot add_salt ()) -4> (human pour_pasta ()) prev=#5 next=[]
Ns after check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	2.0 Flag.E Type.I#6, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]
	2.0 Flag.E Type.D#8, (robot DELAY []) -1> (robot DELAY []) prev=#5 next=[]

<@> picked node = 2.0 Flag.E Type.I#6, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-22-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-63-HA-get_pasta()
||	-64-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 22-RA-come_add_salt()
decomp i= 0 : dec_cook_H_2
	22-RA-come_add_salt() => [91-RP-add_salt()-0.0] : dec_come_add_salt_close
	91-RP-add_salt()-0.0 => [91-RP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 1-RA-come_clean_counter()
	1-RA-come_clean_counter() => [92-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_H_2: [92-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 93-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-63-HA-get_pasta()
||	-64-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 63-HA-get_pasta()
decomp i= 0 : dec_cook_H_2
	63-HA-get_pasta() => [94-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 63-HA-get_pasta()
decomp i= 0 : dec_cook_H_2
	63-HA-get_pasta() => [95-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [94-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 96-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-64-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 97-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-64-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 64-HA-come_pour_pasta()
decomp i= 0 : dec_cook_H_2
	64-HA-come_pour_pasta() => [98-HP-move('kitchen',)-0.0 - 99-HP-pour_pasta()-0.0] : dec_come_pour_pasta_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 64-HA-come_pour_pasta()
decomp i= 0 : dec_cook_H_2
	64-HA-come_pour_pasta() => [100-HP-move('kitchen',)-0.0 - 101-HP-pour_pasta()-0.0] : dec_come_pour_pasta_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [98-HP-move('kitchen',)-0.0 - 99-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed pot_fire <- on
applied refinement = 
next actions:
	- 102-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-99-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 103-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-99-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 99-HP-pour_pasta()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
human- Refine agenda with r_beliefs
Task to refine: 99-HP-pour_pasta()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [99-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 104-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 6.0 Flag.E Type.F#6, (human add_salt ()) -7> (human pour_pasta ()) prev=#3 next=[]
new_e_flagged_nodes : 
	6.0 Flag.E Type.F#6, (human add_salt ()) -7> (human pour_pasta ()) prev=#3 next=[]
e_flagged_nodes :
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	2.0 Flag.E Type.D#8, (robot DELAY []) -1> (robot DELAY []) prev=#5 next=[]
	6.0 Flag.E Type.F#6, (human add_salt ()) -7> (human pour_pasta ()) prev=#3 next=[]
Ns before check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
Nf = 6.0 Flag.E Type.F#6, (human add_salt ()) -7> (human pour_pasta ()) prev=#3 next=[]
Ns after check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	2.0 Flag.E Type.D#8, (robot DELAY []) -1> (robot DELAY []) prev=#5 next=[]

<@> picked node = 2.0 Flag.E Type.D#8, (robot DELAY []) -1> (robot DELAY []) prev=#5 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-76-RP-add_salt()-1.0
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-60-HA-come_add_salt()
||	-61-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 60-HA-come_add_salt()
decomp i= 0 : delaying
	60-HA-come_add_salt() => [105-HP-move('kitchen',)-0.0 - 106-HP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 60-HA-come_add_salt()
decomp i= 0 : delaying
	60-HA-come_add_salt() => [107-HP-move('kitchen',)-0.0 - 108-HP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	delaying: [105-HP-move('kitchen',)-0.0 - 106-HP-add_salt()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed pot_fire <- on
applied refinement = 
next actions:
	- 109-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-76-RP-add_salt()-1.0
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-106-HP-add_salt()-0.0
||	-61-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 76-RP-add_salt()-1.0
decomp i= 0 : delaying
	end 0
refinement = 
[
	delaying: [76-RP-add_salt()-1.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 110-RP-add_salt()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-106-HP-add_salt()-0.0
||	-61-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 106-HP-add_salt()-0.0
decomp i= 0 : delaying
	106-HP-add_salt()-0.0 => [106-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 61-HA-come_pour_pasta()
	61-HA-come_pour_pasta() => [111-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 106-HP-add_salt()-0.0
decomp i= 0 : delaying
	106-HP-add_salt()-0.0 => [106-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 61-HA-come_pour_pasta()
	61-HA-come_pour_pasta() => [112-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	delaying: [111-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 113-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : delaying
	1-RA-come_clean_counter() => [114-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	delaying: [114-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 115-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
human- Refine agenda with r_beliefs
No relevant belief divergence for refinement
refinement = 
[
	delaying: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 6.0 Flag.E Type.F#8, (robot DELAY []) -5> (robot clean_counter ()) prev=#5 next=[]
new_e_flagged_nodes : 
	6.0 Flag.E Type.F#8, (robot DELAY []) -5> (robot clean_counter ()) prev=#5 next=[]
e_flagged_nodes :
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	6.0 Flag.E Type.F#8, (robot DELAY []) -5> (robot clean_counter ()) prev=#5 next=[]
Ns before check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
Nf = 6.0 Flag.E Type.F#8, (robot DELAY []) -5> (robot clean_counter ()) prev=#5 next=[]
Ns after check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]

<@> picked node = 3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-25-RP-add_salt()-1.0
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : delaying
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [116-HA-get_pasta() - 117-HA-come_add_salt() - 118-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [119-HP-add_salt()-0.0, 120-HA-get_pasta(), 121-HA-come_pour_pasta()]
	116-HA-get_pasta() => [122-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : delaying
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [123-HA-get_pasta() - 124-HA-come_add_salt() - 125-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [126-HP-add_salt()-0.0, 127-HA-get_pasta(), 128-HA-come_pour_pasta()]
	123-HA-get_pasta() => [129-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [122-HP-grab_pasta()-0.0 - 117-HA-come_add_salt() - 118-HA-come_pour_pasta()]
	dec_cook_H_2: [119-HP-add_salt()-0.0 - 120-HA-get_pasta() - 121-HA-come_pour_pasta()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 130-HP-grab_pasta()-1.0
	- 131-HP-add_salt()-1.0

=> end explo
node explored = 3.0 Flag.F Type.H#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[#9 #10]
new_e_flagged_nodes : 
	4.0 Flag.E Type.I#9, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#4 next=[]
	4.0 Flag.E Type.I#10, (human add_salt ()) -1> (human add_salt ()) prev=#4 next=[]
e_flagged_nodes :
	4.0 Flag.E Type.I#9, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#4 next=[]
	4.0 Flag.E Type.I#10, (human add_salt ()) -1> (human add_salt ()) prev=#4 next=[]
Ns before check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
Nf = None
Ns after check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	4.0 Flag.E Type.I#9, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#4 next=[]
	4.0 Flag.E Type.I#10, (human add_salt ()) -1> (human add_salt ()) prev=#4 next=[]

<@> picked node = 4.0 Flag.E Type.I#9, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#4 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-25-RP-add_salt()-1.0
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-117-HA-come_add_salt()
||	-118-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 25-RP-add_salt()-1.0
decomp i= 0 : dec_cook_H_1
	end 0
refinement = 
[
	dec_cook_H_1: [25-RP-add_salt()-1.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 132-RP-add_salt()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-117-HA-come_add_salt()
||	-118-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 117-HA-come_add_salt()
decomp i= 0 : dec_cook_H_1
	117-HA-come_add_salt() => [133-HP-move('kitchen',)-0.0 - 134-HP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 117-HA-come_add_salt()
decomp i= 0 : dec_cook_H_1
	117-HA-come_add_salt() => [135-HP-move('kitchen',)-0.0 - 136-HP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [133-HP-move('kitchen',)-0.0 - 134-HP-add_salt()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 137-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-134-HP-add_salt()-0.0
||	-118-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 20-RA-come_turn_on_pot_fire()
decomp i= 0 : dec_cook_H_1
	20-RA-come_turn_on_pot_fire() => [138-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 0
refinement = 
[
	dec_cook_H_1: [138-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 139-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-134-HP-add_salt()-0.0
||	-118-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 134-HP-add_salt()-0.0
decomp i= 0 : dec_cook_H_1
	end 0
human- Refine agenda with r_beliefs
Task to refine: 134-HP-add_salt()-0.0
decomp i= 0 : dec_cook_H_1
	134-HP-add_salt()-0.0 => [134-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 118-HA-come_pour_pasta()
	118-HA-come_pour_pasta() => [140-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
Not same task name
NEED of belief alignment!

# UPDATE belief divergences
	salt_added:None: H=False R=True

Testing with 1 relevant divergence
divergence tested = salt_added:None: H=False R=True
Task to refine: 134-HP-add_salt()-0.0
decomp i= 0 : 
	134-HP-add_salt()-0.0 => [134-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 118-HA-come_pour_pasta()
	118-HA-come_pour_pasta() => [141-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
	divergence is relevant!
Relevant divergences to correct : 	salt_added:None: H=False R=True

COM: com action added = 142-RP-COM_ALIGN['salt_added-True']-3.0
human- Refine agenda
Task to refine: 134-HP-add_salt()-0.0
decomp i= 0 : dec_cook_H_1
	134-HP-add_salt()-0.0 => [134-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 118-HA-come_pour_pasta()
	118-HA-come_pour_pasta() => [143-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 134-HP-add_salt()-0.0
decomp i= 0 : dec_cook_H_1
	134-HP-add_salt()-0.0 => [134-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 118-HA-come_pour_pasta()
	118-HA-come_pour_pasta() => [144-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [143-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Trying to create delaying branch
rel_divs= 	salt_added:None: H=False R=True

	div not initial!
		testing n= 7.0 Flag.E Type.I#9, (human grab_pasta ()) -4> (robot COM_ALIGN ['salt_added-True']) prev=#4 next=[]
	div node identified :  7.0 Flag.E Type.I#9, (human grab_pasta ()) -4> (robot COM_ALIGN ['salt_added-True']) prev=#4 next=[]
	testing action= 130-HP-grab_pasta()-1.0
		R-Agenda in [25-RP-add_salt()-1.0, 20-RA-come_turn_on_pot_fire(), 1-RA-come_clean_counter()]
		H-Agenda in [117-HA-come_add_salt(), 118-HA-come_pour_pasta()]
before acting
after acting
__________________________________________________________________________
| AGENDA robot =
||	-25-RP-add_salt()-1.0
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
after other
__________________________________________________________________________
| AGENDA robot =
||	-25-RP-add_salt()-1.0
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
action.next= [132-RP-add_salt()-1.0]
	testing action= 132-RP-add_salt()-1.0
		R-Agenda in [20-RA-come_turn_on_pot_fire(), 1-RA-come_clean_counter()]
		H-Agenda in [117-HA-come_add_salt(), 118-HA-come_pour_pasta()]
before acting
after acting
__________________________________________________________________________
| AGENDA robot =
||	-25-RP-add_salt()-1.0
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
after other
__________________________________________________________________________
| AGENDA robot =
||	-25-RP-add_salt()-1.0
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
agendas:
div_action.agent_agendas[CM.g_human_name]= [117-HA-come_add_salt(), 118-HA-come_pour_pasta()]
div_action.agent_agendas[CM.g_robot_name]= [20-RA-come_turn_on_pot_fire(), 1-RA-come_clean_counter()]
	div action identified :  132-RP-add_salt()-1.0
__________________________________________________________________________
| AGENDA robot =
||	-132-RP-add_salt()-1.0
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-117-HA-come_add_salt()
||	-118-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
	Branching:
BRANCHING current_cost= 7.0
	div_node_bottom created =>  7.0 Flag.E Type.I#11, (robot add_salt ()) -3> (robot COM_ALIGN ['salt_added-True']) prev=#9 next=[]
	delay_node created =>  4.0 Flag.E Type.D#12, (robot DELAY []) -1> (robot DELAY []) prev=#9 next=[]
	div_node edited =>  4.0 Flag.F Type.R#9, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#4 next=[#11 #12]
applied refinement = 
next actions:
	- 145-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : dec_cook_H_1
	1-RA-come_clean_counter() => [147-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_H_1: [147-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 148-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
human- Refine agenda with r_beliefs
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 4.0 Flag.F Type.R#9, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#4 next=[#11 #12]
new_e_flagged_nodes : 
	4.0 Flag.E Type.D#12, (robot DELAY []) -1> (robot DELAY []) prev=#9 next=[]
	9.0 Flag.E Type.F#11, (robot add_salt ()) -5> (robot clean_counter ()) prev=#9 next=[]
e_flagged_nodes :
	4.0 Flag.E Type.I#10, (human add_salt ()) -1> (human add_salt ()) prev=#4 next=[]
	4.0 Flag.E Type.D#12, (robot DELAY []) -1> (robot DELAY []) prev=#9 next=[]
	9.0 Flag.E Type.F#11, (robot add_salt ()) -5> (robot clean_counter ()) prev=#9 next=[]
Ns before check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
Nf = 9.0 Flag.E Type.F#11, (robot add_salt ()) -5> (robot clean_counter ()) prev=#9 next=[]
Ns after check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	4.0 Flag.E Type.I#10, (human add_salt ()) -1> (human add_salt ()) prev=#4 next=[]
	4.0 Flag.E Type.D#12, (robot DELAY []) -1> (robot DELAY []) prev=#9 next=[]

<@> picked node = 4.0 Flag.E Type.I#10, (human add_salt ()) -1> (human add_salt ()) prev=#4 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-25-RP-add_salt()-1.0
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-120-HA-get_pasta()
||	-121-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 25-RP-add_salt()-1.0
decomp i= 0 : dec_cook_H_2
	25-RP-add_salt()-1.0 => [25-RP-add_salt()-1.0] : dec_cook_R_1
[92m	already done[0m
	continue with next_task popped from agenda 20-RA-come_turn_on_pot_fire()
	20-RA-come_turn_on_pot_fire() => [149-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 0
refinement = 
[
	dec_cook_H_2: [149-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 150-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-120-HA-get_pasta()
||	-121-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = room 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 120-HA-get_pasta()
decomp i= 0 : dec_cook_H_2
	120-HA-get_pasta() => [151-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 120-HA-get_pasta()
decomp i= 0 : dec_cook_H_2
	120-HA-get_pasta() => [152-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [151-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 153-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-121-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : dec_cook_H_2
	1-RA-come_clean_counter() => [154-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_H_2: [154-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 155-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-121-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 121-HA-come_pour_pasta()
decomp i= 0 : dec_cook_H_2
	121-HA-come_pour_pasta() => [156-HP-move('kitchen',)-0.0 - 157-HP-pour_pasta()-0.0] : dec_come_pour_pasta_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 121-HA-come_pour_pasta()
decomp i= 0 : dec_cook_H_2
	121-HA-come_pour_pasta() => [158-HP-move('kitchen',)-0.0 - 159-HP-pour_pasta()-0.0] : dec_come_pour_pasta_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [156-HP-move('kitchen',)-0.0 - 157-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed pot_fire <- on
applied refinement = 
next actions:
	- 160-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-157-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 161-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-157-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 157-HP-pour_pasta()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
human- Refine agenda with r_beliefs
Task to refine: 157-HP-pour_pasta()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [157-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 162-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 9.0 Flag.E Type.F#10, (human add_salt ()) -7> (human pour_pasta ()) prev=#4 next=[]
new_e_flagged_nodes : 
	9.0 Flag.E Type.F#10, (human add_salt ()) -7> (human pour_pasta ()) prev=#4 next=[]
e_flagged_nodes :
	4.0 Flag.E Type.D#12, (robot DELAY []) -1> (robot DELAY []) prev=#9 next=[]
	9.0 Flag.E Type.F#10, (human add_salt ()) -7> (human pour_pasta ()) prev=#4 next=[]
Ns before check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
Nf = 9.0 Flag.E Type.F#10, (human add_salt ()) -7> (human pour_pasta ()) prev=#4 next=[]
Ns after check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	4.0 Flag.E Type.D#12, (robot DELAY []) -1> (robot DELAY []) prev=#9 next=[]

<@> picked node = 4.0 Flag.E Type.D#12, (robot DELAY []) -1> (robot DELAY []) prev=#9 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-132-RP-add_salt()-1.0
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-117-HA-come_add_salt()
||	-118-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = human 	ObsType.OBS 	loc=room
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 117-HA-come_add_salt()
decomp i= 0 : delaying
	117-HA-come_add_salt() => [163-HP-move('kitchen',)-0.0 - 164-HP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 117-HA-come_add_salt()
decomp i= 0 : delaying
	117-HA-come_add_salt() => [165-HP-move('kitchen',)-0.0 - 166-HP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	delaying: [163-HP-move('kitchen',)-0.0 - 164-HP-add_salt()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 167-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-132-RP-add_salt()-1.0
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-164-HP-add_salt()-0.0
||	-118-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 132-RP-add_salt()-1.0
decomp i= 0 : delaying
	end 0
refinement = 
[
	delaying: [132-RP-add_salt()-1.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 168-RP-add_salt()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-164-HP-add_salt()-0.0
||	-118-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 164-HP-add_salt()-0.0
decomp i= 0 : delaying
	164-HP-add_salt()-0.0 => [164-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 118-HA-come_pour_pasta()
	118-HA-come_pour_pasta() => [169-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 164-HP-add_salt()-0.0
decomp i= 0 : delaying
	164-HP-add_salt()-0.0 => [164-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 118-HA-come_pour_pasta()
	118-HA-come_pour_pasta() => [170-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
[93m169-HP-pour_pasta()-0.0 not applicable[0m
[93m169-HP-pour_pasta()-0.0 not applicable[0m
No relevant belief divergence for refinement
refinement = 
[
	delaying: [169-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
[93m169-HP-pour_pasta()-0.0 not applicable[0m
pour_pasta not feasible...
applied refinement = 
next actions:
	- 171-HP-WAIT[]-2.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-20-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-169-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 20-RA-come_turn_on_pot_fire()
decomp i= 0 : delaying
	20-RA-come_turn_on_pot_fire() => [172-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 0
refinement = 
[
	delaying: [172-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 173-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-169-HP-pour_pasta()-0.0
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 169-HP-pour_pasta()-0.0
decomp i= 0 : delaying
	end 0
human- Refine agenda with r_beliefs
Task to refine: 169-HP-pour_pasta()-0.0
decomp i= 0 : delaying
	end 0
No relevant belief divergence for refinement
refinement = 
[
	delaying: [169-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 174-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : delaying
	1-RA-come_clean_counter() => [175-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	delaying: [175-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 176-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
human- Refine agenda with r_beliefs
No relevant belief divergence for refinement
refinement = 
[
	delaying: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 11.0 Flag.E Type.F#12, (robot DELAY []) -7> (robot clean_counter ()) prev=#9 next=[]
new_e_flagged_nodes : 
	11.0 Flag.E Type.F#12, (robot DELAY []) -7> (robot clean_counter ()) prev=#9 next=[]
e_flagged_nodes :
	11.0 Flag.E Type.F#12, (robot DELAY []) -7> (robot clean_counter ()) prev=#9 next=[]
Ns before check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
Nf = 11.0 Flag.E Type.F#12, (robot DELAY []) -7> (robot clean_counter ()) prev=#9 next=[]
Ns after check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 315ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 315ms
Non relevant div:
True
Plans:
18-RP-COM_ALIGN['pot_fire-off']-3.0 25-RP-add_salt()-1.0 40-RP-COM_ALIGN['salt_added-True']-3.0 47-HP-grab_pasta()-1.0 50-RP-turn_on_pot_fire()-1.0 55-HP-move('kitchen',)-1.0 57-RP-clean_counter()-1.0 58-HP-pour_pasta()-1.0/18-RP-COM_ALIGN['pot_fire-off']-3.0 26-RP-turn_on_pot_fire()-1.0 73-HP-grab_pasta()-1.0 76-RP-add_salt()-1.0 81-HP-move('kitchen',)-1.0 83-RP-clean_counter()-1.0 86-RP-COM_ALIGN['salt_added-True']-3.0 89-HP-pour_pasta()-1.0/18-RP-COM_ALIGN['pot_fire-off']-3.0 26-RP-turn_on_pot_fire()-1.0 73-HP-grab_pasta()-1.0 90-RP-DELAY[]-0.0 109-HP-move('kitchen',)-1.0 110-RP-add_salt()-1.0 113-HP-pour_pasta()-1.0 115-RP-clean_counter()-1.0/18-RP-COM_ALIGN['pot_fire-off']-3.0 26-RP-turn_on_pot_fire()-1.0 74-HP-add_salt()-1.0 93-RP-clean_counter()-1.0 96-HP-grab_pasta()-1.0 97-RP-IDLE[]-0.0 102-HP-move('kitchen',)-1.0 103-RP-IDLE[]-0.0 104-HP-pour_pasta()-1.0/18-RP-COM_ALIGN['pot_fire-off']-3.0 48-RP-DELAY[]-0.0 130-HP-grab_pasta()-1.0 132-RP-add_salt()-1.0 137-HP-move('kitchen',)-1.0 139-RP-turn_on_pot_fire()-1.0 142-RP-COM_ALIGN['salt_added-True']-3.0 145-HP-pour_pasta()-1.0 148-RP-clean_counter()-1.0/18-RP-COM_ALIGN['pot_fire-off']-3.0 48-RP-DELAY[]-0.0 130-HP-grab_pasta()-1.0 146-RP-DELAY[]-0.0 167-HP-move('kitchen',)-1.0 168-RP-add_salt()-1.0 171-HP-WAIT[]-2.0 173-RP-turn_on_pot_fire()-1.0 174-HP-pour_pasta()-1.0 176-RP-clean_counter()-1.0/18-RP-COM_ALIGN['pot_fire-off']-3.0 48-RP-DELAY[]-0.0 131-HP-add_salt()-1.0 150-RP-turn_on_pot_fire()-1.0 153-HP-grab_pasta()-1.0 155-RP-clean_counter()-1.0 160-HP-move('kitchen',)-1.0 161-RP-IDLE[]-0.0 162-HP-pour_pasta()-1.0
best_traces:
[58-HP-pour_pasta()-1.0, 115-RP-clean_counter()-1.0, 104-HP-pour_pasta()-1.0, 148-RP-clean_counter()-1.0, 162-HP-pour_pasta()-1.0]
best_metrics:
(1.5, 0.0, 7.0, 0.5)
