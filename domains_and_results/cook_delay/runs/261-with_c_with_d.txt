RUN N=261 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = room 	ObsType.OBS 	loc=room
|| robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
|| robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
|| robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
|| human_init.at_robot = room
|| human_init.at_human = kitchen
|| human_init.at_pasta = kitchen
|| human_init.salt_added = True
|| human_init.pot_fire = off
|| human_init.counter_clean = False
|________________________________________________________________________
Start first exploration
first node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (robot BEGIN []) -1> (robot BEGIN []) prev=None next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = room 	ObsType.OBS 	loc=room
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = room
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : origin
	2-HA-cook() => [4-HA-get_pasta() - 5-HA-come_pour_pasta()] : dec_cook_H_1
	4-HA-get_pasta() => [6-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : origin
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [7-HA-get_pasta() - 8-HA-come_add_salt() - 9-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [10-HP-add_salt()-0.0, 11-HA-get_pasta(), 12-HA-come_pour_pasta()]
	7-HA-get_pasta() => [13-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
Different number of decomposition
NEED of belief alignment!

# UPDATE belief divergences
	salt_added:None: H=True R=False

Testing with 1 relevant divergence
divergence tested = salt_added:None: H=True R=False
Task to refine: 2-HA-cook()
decomp i= 0 : 
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [14-HA-get_pasta() - 15-HA-come_add_salt() - 16-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [17-HP-add_salt()-0.0, 18-HA-get_pasta(), 19-HA-come_pour_pasta()]
	14-HA-get_pasta() => [20-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
	divergence is relevant!
Relevant divergences to correct : 	salt_added:None: H=True R=False

COM: com action added = 21-RP-COM_ALIGN['salt_added-False']-3.0
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : origin
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [22-HA-get_pasta() - 23-HA-come_add_salt() - 24-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [25-HP-add_salt()-0.0, 26-HA-get_pasta(), 27-HA-come_pour_pasta()]
	22-HA-get_pasta() => [28-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : origin
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [29-HA-get_pasta() - 30-HA-come_add_salt() - 31-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [32-HP-add_salt()-0.0, 33-HA-get_pasta(), 34-HA-come_pour_pasta()]
	29-HA-get_pasta() => [35-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [28-HP-grab_pasta()-0.0 - 23-HA-come_add_salt() - 24-HA-come_pour_pasta()]
	dec_cook_H_2: [25-HP-add_salt()-0.0 - 26-HA-get_pasta() - 27-HA-come_pour_pasta()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Trying to create delaying branch
rel_divs= 	salt_added:None: H=True R=False

	initial div ..
applied refinement = 
next actions:
	- 36-HP-grab_pasta()-1.0
	- 37-HP-add_salt()-1.0

=> end explo
node explored = 0.0 Flag.F Type.H#1, (robot BEGIN []) -1> (robot COM_ALIGN ['salt_added-False']) prev=None next=[#2 #3]
new_e_flagged_nodes : 
	1.0 Flag.E Type.I#2, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (human add_salt ()) -1> (human add_salt ()) prev=#1 next=[]
e_flagged_nodes :
	1.0 Flag.E Type.I#2, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (human add_salt ()) -1> (human add_salt ()) prev=#1 next=[]
Ns before check = None
Nf = None
Ns after check = None
e_flagged_nodes after check solution:
	1.0 Flag.E Type.I#2, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (human add_salt ()) -1> (human add_salt ()) prev=#1 next=[]

<@> picked node = 1.0 Flag.E Type.I#2, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-23-HA-come_add_salt()
||	-24-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = room 	ObsType.OBS 	loc=room
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = room
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-cook()
decomp i= 0 : dec_cook_H_1
	multiple decs for 0-RA-cook():  dec_cook_R_1  dec_cook_R_2 
	0-RA-cook() => [38-RA-come_add_salt() - 39-RA-come_turn_on_pot_fire()] : dec_cook_R_1
		decomposition 1 : dec_cook_R_2 created : [40-RA-come_turn_on_pot_fire(), 41-RA-come_add_salt()]
	38-RA-come_add_salt() => [42-RP-move('kitchen',)-0.0 - 43-RP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
decomp i= 1 : dec_cook_R_2
	40-RA-come_turn_on_pot_fire() => [44-RP-move('kitchen',)-0.0 - 45-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_far
	end 1
refinement = 
[
	dec_cook_R_1: [42-RP-move('kitchen',)-0.0 - 43-RP-add_salt()-0.0 - 39-RA-come_turn_on_pot_fire()]
	dec_cook_R_2: [44-RP-move('kitchen',)-0.0 - 45-RP-turn_on_pot_fire()-0.0 - 41-RA-come_add_salt()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 46-RP-move('kitchen',)-1.0
	- 47-RP-move('kitchen',)-1.0

=> end explo
node explored = 1.0 Flag.F Type.R#2, (human grab_pasta ()) -1> (human grab_pasta ()) prev=#1 next=[#4 #5]
new_e_flagged_nodes : 
	2.0 Flag.E Type.I#4, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#2 next=[]
	2.0 Flag.E Type.I#5, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#2 next=[]
e_flagged_nodes :
	1.0 Flag.E Type.I#3, (human add_salt ()) -1> (human add_salt ()) prev=#1 next=[]
	2.0 Flag.E Type.I#4, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#2 next=[]
	2.0 Flag.E Type.I#5, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#2 next=[]
Ns before check = None
Nf = None
Ns after check = None
e_flagged_nodes after check solution:
	1.0 Flag.E Type.I#3, (human add_salt ()) -1> (human add_salt ()) prev=#1 next=[]
	2.0 Flag.E Type.I#4, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#2 next=[]
	2.0 Flag.E Type.I#5, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#2 next=[]

<@> picked node = 1.0 Flag.E Type.I#3, (human add_salt ()) -1> (human add_salt ()) prev=#1 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-26-HA-get_pasta()
||	-27-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = room 	ObsType.OBS 	loc=room
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = room
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-cook()
decomp i= 0 : dec_cook_H_2
	0-RA-cook() => [48-RA-come_turn_on_pot_fire()] : dec_cook_R_1
	48-RA-come_turn_on_pot_fire() => [49-RP-move('kitchen',)-0.0 - 50-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_far
	end 0
refinement = 
[
	dec_cook_H_2: [49-RP-move('kitchen',)-0.0 - 50-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 51-RP-move('kitchen',)-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-50-RP-turn_on_pot_fire()-0.0
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-26-HA-get_pasta()
||	-27-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 26-HA-get_pasta()
decomp i= 0 : dec_cook_H_2
	26-HA-get_pasta() => [52-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 26-HA-get_pasta()
decomp i= 0 : dec_cook_H_2
	26-HA-get_pasta() => [53-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [52-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 54-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-50-RP-turn_on_pot_fire()-0.0
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-27-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 50-RP-turn_on_pot_fire()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
refinement = 
[
	dec_cook_H_2: [50-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 55-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-27-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 27-HA-come_pour_pasta()
decomp i= 0 : dec_cook_H_2
	27-HA-come_pour_pasta() => [56-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 27-HA-come_pour_pasta()
decomp i= 0 : dec_cook_H_2
	27-HA-come_pour_pasta() => [57-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [56-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 58-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : dec_cook_H_2
	1-RA-come_clean_counter() => [59-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_H_2: [59-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 60-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
human- Refine agenda with r_beliefs
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 6.0 Flag.E Type.F#3, (human add_salt ()) -6> (robot clean_counter ()) prev=#1 next=[]
new_e_flagged_nodes : 
	6.0 Flag.E Type.F#3, (human add_salt ()) -6> (robot clean_counter ()) prev=#1 next=[]
e_flagged_nodes :
	2.0 Flag.E Type.I#4, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#2 next=[]
	2.0 Flag.E Type.I#5, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#2 next=[]
	6.0 Flag.E Type.F#3, (human add_salt ()) -6> (robot clean_counter ()) prev=#1 next=[]
Ns before check = None
Nf = 6.0 Flag.E Type.F#3, (human add_salt ()) -6> (robot clean_counter ()) prev=#1 next=[]
new Ns!
Ns after check = 6.0 Flag.S Type.F#3, (human add_salt ()) -6> (robot clean_counter ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	2.0 Flag.E Type.I#4, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#2 next=[]
	2.0 Flag.E Type.I#5, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#2 next=[]

<@> picked node = 2.0 Flag.E Type.I#4, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#2 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-43-RP-add_salt()-0.0
||	-39-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-23-HA-come_add_salt()
||	-24-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 23-HA-come_add_salt()
decomp i= 0 : dec_cook_R_1
	23-HA-come_add_salt() => [61-HP-add_salt()-0.0] : dec_come_add_salt_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 23-HA-come_add_salt()
decomp i= 0 : dec_cook_R_1
	23-HA-come_add_salt() => [62-HP-add_salt()-0.0] : dec_come_add_salt_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_1: [61-HP-add_salt()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 63-HP-add_salt()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-43-RP-add_salt()-0.0
||	-39-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-24-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 43-RP-add_salt()-0.0
decomp i= 0 : dec_cook_R_1
	43-RP-add_salt()-0.0 => [43-RP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 39-RA-come_turn_on_pot_fire()
	39-RA-come_turn_on_pot_fire() => [64-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 0
refinement = 
[
	dec_cook_R_1: [64-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 65-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-24-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 24-HA-come_pour_pasta()
decomp i= 0 : dec_cook_R_1
	24-HA-come_pour_pasta() => [66-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 24-HA-come_pour_pasta()
decomp i= 0 : dec_cook_R_1
	24-HA-come_pour_pasta() => [67-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_1: [66-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 68-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : dec_cook_R_1
	1-RA-come_clean_counter() => [69-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_R_1: [69-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 70-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
human- Refine agenda with r_beliefs
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_1: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 6.0 Flag.E Type.F#4, (robot move ('kitchen',)) -5> (robot clean_counter ()) prev=#2 next=[]
new_e_flagged_nodes : 
	6.0 Flag.E Type.F#4, (robot move ('kitchen',)) -5> (robot clean_counter ()) prev=#2 next=[]
e_flagged_nodes :
	2.0 Flag.E Type.I#5, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#2 next=[]
	6.0 Flag.E Type.F#4, (robot move ('kitchen',)) -5> (robot clean_counter ()) prev=#2 next=[]
Ns before check = 6.0 Flag.S Type.F#3, (human add_salt ()) -6> (robot clean_counter ()) prev=#1 next=[]
Nf = 6.0 Flag.E Type.F#4, (robot move ('kitchen',)) -5> (robot clean_counter ()) prev=#2 next=[]
Ns after check = 6.0 Flag.S Type.F#3, (human add_salt ()) -6> (robot clean_counter ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	2.0 Flag.E Type.I#5, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#2 next=[]

<@> picked node = 2.0 Flag.E Type.I#5, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#2 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-45-RP-turn_on_pot_fire()-0.0
||	-41-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-23-HA-come_add_salt()
||	-24-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 23-HA-come_add_salt()
decomp i= 0 : dec_cook_R_2
	23-HA-come_add_salt() => [71-HP-add_salt()-0.0] : dec_come_add_salt_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 23-HA-come_add_salt()
decomp i= 0 : dec_cook_R_2
	23-HA-come_add_salt() => [72-HP-add_salt()-0.0] : dec_come_add_salt_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_2: [71-HP-add_salt()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 73-HP-add_salt()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-45-RP-turn_on_pot_fire()-0.0
||	-41-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-24-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 45-RP-turn_on_pot_fire()-0.0
decomp i= 0 : dec_cook_R_2
	end 0
refinement = 
[
	dec_cook_R_2: [45-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 74-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-41-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-24-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 24-HA-come_pour_pasta()
decomp i= 0 : dec_cook_R_2
	24-HA-come_pour_pasta() => [75-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 24-HA-come_pour_pasta()
decomp i= 0 : dec_cook_R_2
	24-HA-come_pour_pasta() => [76-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_2: [75-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 77-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-41-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 41-RA-come_add_salt()
decomp i= 0 : dec_cook_R_2
	41-RA-come_add_salt() => [78-RP-add_salt()-0.0] : dec_come_add_salt_close
	78-RP-add_salt()-0.0 => [78-RP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 1-RA-come_clean_counter()
	1-RA-come_clean_counter() => [79-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_R_2: [79-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 80-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
human- Refine agenda with r_beliefs
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_2: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 6.0 Flag.E Type.F#5, (robot move ('kitchen',)) -5> (robot clean_counter ()) prev=#2 next=[]
new_e_flagged_nodes : 
	6.0 Flag.E Type.F#5, (robot move ('kitchen',)) -5> (robot clean_counter ()) prev=#2 next=[]
e_flagged_nodes :
	6.0 Flag.E Type.F#5, (robot move ('kitchen',)) -5> (robot clean_counter ()) prev=#2 next=[]
Ns before check = 6.0 Flag.S Type.F#3, (human add_salt ()) -6> (robot clean_counter ()) prev=#1 next=[]
Nf = 6.0 Flag.E Type.F#5, (robot move ('kitchen',)) -5> (robot clean_counter ()) prev=#2 next=[]
Ns after check = 6.0 Flag.S Type.F#3, (human add_salt ()) -6> (robot clean_counter ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 69ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 69ms
Non relevant div:
False
Plans:
21-RP-COM_ALIGN['salt_added-False']-3.0 36-HP-grab_pasta()-1.0 46-RP-move('kitchen',)-1.0 63-HP-add_salt()-1.0 65-RP-turn_on_pot_fire()-1.0 68-HP-pour_pasta()-1.0 70-RP-clean_counter()-1.0/21-RP-COM_ALIGN['salt_added-False']-3.0 36-HP-grab_pasta()-1.0 47-RP-move('kitchen',)-1.0 73-HP-add_salt()-1.0 74-RP-turn_on_pot_fire()-1.0 77-HP-pour_pasta()-1.0 80-RP-clean_counter()-1.0/21-RP-COM_ALIGN['salt_added-False']-3.0 37-HP-add_salt()-1.0 51-RP-move('kitchen',)-1.0 54-HP-grab_pasta()-1.0 55-RP-turn_on_pot_fire()-1.0 58-HP-pour_pasta()-1.0 60-RP-clean_counter()-1.0
best_traces:
[70-RP-clean_counter()-1.0, 60-RP-clean_counter()-1.0]
best_metrics:
(1.0, 0.0, 6.0, 0.0)
