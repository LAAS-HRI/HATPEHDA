RUN N=130 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.at_human = room 	ObsType.OBS 	loc=room
|| robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
|| robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
|| robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
|| human_init.at_robot = kitchen
|| human_init.at_human = room
|| human_init.at_pasta = kitchen
|| human_init.salt_added = False
|| human_init.pot_fire = on
|| human_init.counter_clean = False
|________________________________________________________________________
Start first exploration
first node = 0.0 Flag.E Type.I#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = kitchen
||human_init.salt_added = False
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-cook()
decomp i= 0 : origin
	multiple decs for 0-RA-cook():  dec_cook_R_1  dec_cook_R_2 
	0-RA-cook() => [4-RA-come_add_salt() - 5-RA-come_turn_on_pot_fire()] : dec_cook_R_1
		decomposition 1 : dec_cook_R_2 created : [6-RA-come_turn_on_pot_fire(), 7-RA-come_add_salt()]
	4-RA-come_add_salt() => [8-RP-add_salt()-0.0] : dec_come_add_salt_close
	end 0
decomp i= 1 : dec_cook_R_2
	6-RA-come_turn_on_pot_fire() => [9-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 1
refinement = 
[
	dec_cook_R_1: [8-RP-add_salt()-0.0 - 5-RA-come_turn_on_pot_fire()]
	dec_cook_R_2: [9-RP-turn_on_pot_fire()-0.0 - 7-RA-come_add_salt()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
[93malready done[0m
[93m9-RP-turn_on_pot_fire()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs

# UPDATE belief divergences
	pot_fire:None: H=on R=off

Testing with 1 relevant divergence
divergence tested = pot_fire:None: H=on R=off
Task to refine: 2-HA-cook()
decomp i= 0 : 
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [11-HA-get_pasta() - 12-HA-come_add_salt() - 13-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [14-HP-add_salt()-0.0, 15-HA-get_pasta(), 16-HA-come_pour_pasta()]
	11-HA-get_pasta() => [17-HP-move('kitchen',)-0.0 - 18-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
	divergence is relevant!
Relevant divergences to correct : 	pot_fire:None: H=on R=off

COM: com action added eff = 19-RP-COM_ALIGN['pot_fire-off']-3.0
robot- Refine agenda
Task to refine: 0-RA-cook()
decomp i= 0 : origin
	multiple decs for 0-RA-cook():  dec_cook_R_1  dec_cook_R_2 
	0-RA-cook() => [20-RA-come_add_salt() - 21-RA-come_turn_on_pot_fire()] : dec_cook_R_1
		decomposition 1 : dec_cook_R_2 created : [22-RA-come_turn_on_pot_fire(), 23-RA-come_add_salt()]
	20-RA-come_add_salt() => [24-RP-add_salt()-0.0] : dec_come_add_salt_close
	end 0
decomp i= 1 : dec_cook_R_2
	22-RA-come_turn_on_pot_fire() => [25-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 1
refinement = 
[
	dec_cook_R_1: [24-RP-add_salt()-0.0 - 21-RA-come_turn_on_pot_fire()]
	dec_cook_R_2: [25-RP-turn_on_pot_fire()-0.0 - 23-RA-come_add_salt()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 26-RP-add_salt()-1.0
	- 27-RP-turn_on_pot_fire()-1.0

=> end explo
node explored = 0.0 Flag.F Type.H#1, (human BEGIN []) -1> (robot COM_ALIGN ['pot_fire-off']) prev=None next=[#2 #3]
new_e_flagged_nodes : 
	1.0 Flag.E Type.I#2, (robot add_salt ()) -1> (robot add_salt ()) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#1 next=[]
e_flagged_nodes :
	1.0 Flag.E Type.I#2, (robot add_salt ()) -1> (robot add_salt ()) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#1 next=[]
Ns before check = None
Nf = None
Ns after check = None
e_flagged_nodes after check solution:
	1.0 Flag.E Type.I#2, (robot add_salt ()) -1> (robot add_salt ()) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#1 next=[]

<@> picked node = 1.0 Flag.E Type.I#2, (robot add_salt ()) -1> (robot add_salt ()) prev=#1 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-21-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = kitchen
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_1
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [28-HA-get_pasta() - 29-HA-come_add_salt() - 30-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [31-HP-add_salt()-0.0, 32-HA-get_pasta(), 33-HA-come_pour_pasta()]
	28-HA-get_pasta() => [34-HP-move('kitchen',)-0.0 - 35-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_1
	2-HA-cook() => [36-HA-get_pasta() - 37-HA-come_pour_pasta()] : dec_cook_H_1
	36-HA-get_pasta() => [38-HP-move('kitchen',)-0.0 - 39-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
Different number of decomposition
NEED of belief alignment!

# UPDATE belief divergences
	salt_added:None: H=False R=True

Testing with 1 relevant divergence
divergence tested = salt_added:None: H=False R=True
Task to refine: 2-HA-cook()
decomp i= 0 : 
	2-HA-cook() => [40-HA-get_pasta() - 41-HA-come_pour_pasta()] : dec_cook_H_1
	40-HA-get_pasta() => [42-HP-move('kitchen',)-0.0 - 43-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
	divergence is relevant!
Relevant divergences to correct : 	salt_added:None: H=False R=True

COM: com action added = 44-RP-COM_ALIGN['salt_added-True']-3.0
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_1
	2-HA-cook() => [45-HA-get_pasta() - 46-HA-come_pour_pasta()] : dec_cook_H_1
	45-HA-get_pasta() => [47-HP-move('kitchen',)-0.0 - 48-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_1
	2-HA-cook() => [49-HA-get_pasta() - 50-HA-come_pour_pasta()] : dec_cook_H_1
	49-HA-get_pasta() => [51-HP-move('kitchen',)-0.0 - 52-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_1: [47-HP-move('kitchen',)-0.0 - 48-HP-grab_pasta()-0.0 - 46-HA-come_pour_pasta()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Trying to create delaying branch
rel_divs= 	salt_added:None: H=False R=True

	div not initial!
		testing n= 1.0 Flag.E Type.I#2, (robot add_salt ()) -1> (robot COM_ALIGN ['salt_added-True']) prev=#1 next=[]
	div node identified :  1.0 Flag.E Type.I#2, (robot add_salt ()) -1> (robot COM_ALIGN ['salt_added-True']) prev=#1 next=[]
	testing action= 26-RP-add_salt()-1.0
		R-Agenda in [21-RA-come_turn_on_pot_fire(), 1-RA-come_clean_counter()]
		H-Agenda in [2-HA-cook()]
before acting
after acting
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = kitchen
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
after other
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = kitchen
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
agendas:
div_action.agent_agendas[CM.g_human_name]= [2-HA-cook()]
div_action.agent_agendas[CM.g_robot_name]= [21-RA-come_turn_on_pot_fire(), 1-RA-come_clean_counter()]
	div action identified :  26-RP-add_salt()-1.0
__________________________________________________________________________
| AGENDA robot =
||	-26-RP-add_salt()-1.0
||	-21-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = kitchen
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
	Branching:
	delay_node created =>  3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
applied refinement = 
next actions:
	- 53-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-21-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-48-HP-grab_pasta()-0.0
||	-46-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 21-RA-come_turn_on_pot_fire()
decomp i= 0 : dec_cook_R_1
	21-RA-come_turn_on_pot_fire() => [55-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 0
refinement = 
[
	dec_cook_R_1: [55-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 56-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-48-HP-grab_pasta()-0.0
||	-46-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 48-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_R_1
	end 0
human- Refine agenda with r_beliefs
Task to refine: 48-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_R_1
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_1: [48-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 57-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-46-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : dec_cook_R_1
	1-RA-come_clean_counter() => [58-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_R_1: [58-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 59-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-46-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
Task to refine: 46-HA-come_pour_pasta()
decomp i= 0 : dec_cook_R_1
	46-HA-come_pour_pasta() => [60-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 46-HA-come_pour_pasta()
decomp i= 0 : dec_cook_R_1
	46-HA-come_pour_pasta() => [61-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_R_1: [60-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 62-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_R_1: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 6.0 Flag.E Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
new_e_flagged_nodes : 
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	6.0 Flag.E Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes :
	1.0 Flag.E Type.I#3, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#1 next=[]
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	6.0 Flag.E Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
Ns before check = None
Nf = 6.0 Flag.E Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
new Ns!
Ns after check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	1.0 Flag.E Type.I#3, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#1 next=[]
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]

<@> picked node = 1.0 Flag.E Type.I#3, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#1 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-23-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = kitchen
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_2
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [63-HA-get_pasta() - 64-HA-come_add_salt() - 65-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [66-HP-add_salt()-0.0, 67-HA-get_pasta(), 68-HA-come_pour_pasta()]
	63-HA-get_pasta() => [69-HP-move('kitchen',)-0.0 - 70-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_2
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [71-HA-get_pasta() - 72-HA-come_add_salt() - 73-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [74-HP-add_salt()-0.0, 75-HA-get_pasta(), 76-HA-come_pour_pasta()]
	71-HA-get_pasta() => [77-HP-move('kitchen',)-0.0 - 78-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [69-HP-move('kitchen',)-0.0 - 70-HP-grab_pasta()-0.0 - 64-HA-come_add_salt() - 65-HA-come_pour_pasta()]
	dec_cook_H_2: [66-HP-add_salt()-0.0 - 67-HA-get_pasta() - 68-HA-come_pour_pasta()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed pot_fire <- on
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 79-HP-move('kitchen',)-1.0
	- 80-HP-add_salt()-1.0

=> end explo
node explored = 1.0 Flag.F Type.H#3, (robot turn_on_pot_fire ()) -1> (robot turn_on_pot_fire ()) prev=#1 next=[#5 #6]
new_e_flagged_nodes : 
	2.0 Flag.E Type.I#5, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#3 next=[]
	2.0 Flag.E Type.I#6, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]
e_flagged_nodes :
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	2.0 Flag.E Type.I#5, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#3 next=[]
	2.0 Flag.E Type.I#6, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]
Ns before check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
Nf = None
Ns after check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	2.0 Flag.E Type.I#5, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#3 next=[]
	2.0 Flag.E Type.I#6, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]

<@> picked node = 2.0 Flag.E Type.I#5, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#3 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-23-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-70-HP-grab_pasta()-0.0
||	-64-HA-come_add_salt()
||	-65-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = False
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 23-RA-come_add_salt()
decomp i= 0 : dec_cook_H_1
	23-RA-come_add_salt() => [81-RP-add_salt()-0.0] : dec_come_add_salt_close
	end 0
refinement = 
[
	dec_cook_H_1: [81-RP-add_salt()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 82-RP-add_salt()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-70-HP-grab_pasta()-0.0
||	-64-HA-come_add_salt()
||	-65-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 70-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_1
	end 0
human- Refine agenda with r_beliefs
Task to refine: 70-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_1
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [70-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 83-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-64-HA-come_add_salt()
||	-65-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : dec_cook_H_1
	1-RA-come_clean_counter() => [84-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_H_1: [84-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 85-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-64-HA-come_add_salt()
||	-65-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
Task to refine: 64-HA-come_add_salt()
decomp i= 0 : dec_cook_H_1
	64-HA-come_add_salt() => [86-HP-add_salt()-0.0] : dec_come_add_salt_close
	86-HP-add_salt()-0.0 => [86-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 65-HA-come_pour_pasta()
	65-HA-come_pour_pasta() => [87-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 64-HA-come_add_salt()
decomp i= 0 : dec_cook_H_1
	64-HA-come_add_salt() => [88-HP-add_salt()-0.0] : dec_come_add_salt_close
	88-HP-add_salt()-0.0 => [88-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 65-HA-come_pour_pasta()
	65-HA-come_pour_pasta() => [89-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [87-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 90-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_1: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 6.0 Flag.E Type.F#5, (human move ('kitchen',)) -5> (human pour_pasta ()) prev=#3 next=[]
new_e_flagged_nodes : 
	6.0 Flag.E Type.F#5, (human move ('kitchen',)) -5> (human pour_pasta ()) prev=#3 next=[]
e_flagged_nodes :
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	2.0 Flag.E Type.I#6, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]
	6.0 Flag.E Type.F#5, (human move ('kitchen',)) -5> (human pour_pasta ()) prev=#3 next=[]
Ns before check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
Nf = 6.0 Flag.E Type.F#5, (human move ('kitchen',)) -5> (human pour_pasta ()) prev=#3 next=[]
Ns after check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	2.0 Flag.E Type.I#6, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]

<@> picked node = 2.0 Flag.E Type.I#6, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-23-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-67-HA-get_pasta()
||	-68-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 23-RA-come_add_salt()
decomp i= 0 : dec_cook_H_2
	23-RA-come_add_salt() => [91-RP-add_salt()-0.0] : dec_come_add_salt_close
	91-RP-add_salt()-0.0 => [91-RP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 1-RA-come_clean_counter()
	1-RA-come_clean_counter() => [92-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_H_2: [92-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 93-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-67-HA-get_pasta()
||	-68-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 67-HA-get_pasta()
decomp i= 0 : dec_cook_H_2
	67-HA-get_pasta() => [94-HP-move('kitchen',)-0.0 - 95-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 67-HA-get_pasta()
decomp i= 0 : dec_cook_H_2
	67-HA-get_pasta() => [96-HP-move('kitchen',)-0.0 - 97-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [94-HP-move('kitchen',)-0.0 - 95-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed pot_fire <- on
applied refinement = 
next actions:
	- 98-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-95-HP-grab_pasta()-0.0
||	-68-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 99-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-95-HP-grab_pasta()-0.0
||	-68-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 95-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
human- Refine agenda with r_beliefs
Task to refine: 95-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [95-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 100-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-68-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 101-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-68-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 68-HA-come_pour_pasta()
decomp i= 0 : dec_cook_H_2
	68-HA-come_pour_pasta() => [102-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 68-HA-come_pour_pasta()
decomp i= 0 : dec_cook_H_2
	68-HA-come_pour_pasta() => [103-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [102-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 104-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 6.0 Flag.E Type.F#6, (human add_salt ()) -7> (human pour_pasta ()) prev=#3 next=[]
new_e_flagged_nodes : 
	6.0 Flag.E Type.F#6, (human add_salt ()) -7> (human pour_pasta ()) prev=#3 next=[]
e_flagged_nodes :
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
	6.0 Flag.E Type.F#6, (human add_salt ()) -7> (human pour_pasta ()) prev=#3 next=[]
Ns before check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
Nf = 6.0 Flag.E Type.F#6, (human add_salt ()) -7> (human pour_pasta ()) prev=#3 next=[]
Ns after check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]

<@> picked node = 3.0 Flag.E Type.D#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-26-RP-add_salt()-1.0
||	-21-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = kitchen
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : delaying
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [105-HA-get_pasta() - 106-HA-come_add_salt() - 107-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [108-HP-add_salt()-0.0, 109-HA-get_pasta(), 110-HA-come_pour_pasta()]
	105-HA-get_pasta() => [111-HP-move('kitchen',)-0.0 - 112-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : delaying
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [113-HA-get_pasta() - 114-HA-come_add_salt() - 115-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [116-HP-add_salt()-0.0, 117-HA-get_pasta(), 118-HA-come_pour_pasta()]
	113-HA-get_pasta() => [119-HP-move('kitchen',)-0.0 - 120-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [111-HP-move('kitchen',)-0.0 - 112-HP-grab_pasta()-0.0 - 106-HA-come_add_salt() - 107-HA-come_pour_pasta()]
	dec_cook_H_2: [108-HP-add_salt()-0.0 - 109-HA-get_pasta() - 110-HA-come_pour_pasta()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 121-HP-move('kitchen',)-1.0
	- 122-HP-add_salt()-1.0

=> end explo
node explored = 3.0 Flag.F Type.H#4, (robot DELAY []) -1> (robot DELAY []) prev=#1 next=[#7 #8]
new_e_flagged_nodes : 
	4.0 Flag.E Type.I#7, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#4 next=[]
	4.0 Flag.E Type.I#8, (human add_salt ()) -1> (human add_salt ()) prev=#4 next=[]
e_flagged_nodes :
	4.0 Flag.E Type.I#7, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#4 next=[]
	4.0 Flag.E Type.I#8, (human add_salt ()) -1> (human add_salt ()) prev=#4 next=[]
Ns before check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
Nf = None
Ns after check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	4.0 Flag.E Type.I#7, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#4 next=[]
	4.0 Flag.E Type.I#8, (human add_salt ()) -1> (human add_salt ()) prev=#4 next=[]

<@> picked node = 4.0 Flag.E Type.I#7, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#4 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-26-RP-add_salt()-1.0
||	-21-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-112-HP-grab_pasta()-0.0
||	-106-HA-come_add_salt()
||	-107-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 26-RP-add_salt()-1.0
decomp i= 0 : dec_cook_H_1
	end 0
refinement = 
[
	dec_cook_H_1: [26-RP-add_salt()-1.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 123-RP-add_salt()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-21-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-112-HP-grab_pasta()-0.0
||	-106-HA-come_add_salt()
||	-107-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 112-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_1
	end 0
human- Refine agenda with r_beliefs
Task to refine: 112-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_1
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [112-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 124-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-21-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-106-HA-come_add_salt()
||	-107-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 21-RA-come_turn_on_pot_fire()
decomp i= 0 : dec_cook_H_1
	21-RA-come_turn_on_pot_fire() => [125-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 0
refinement = 
[
	dec_cook_H_1: [125-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 126-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-106-HA-come_add_salt()
||	-107-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 106-HA-come_add_salt()
decomp i= 0 : dec_cook_H_1
	106-HA-come_add_salt() => [127-HP-add_salt()-0.0] : dec_come_add_salt_close
	127-HP-add_salt()-0.0 => [127-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 107-HA-come_pour_pasta()
	107-HA-come_pour_pasta() => [128-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 106-HA-come_add_salt()
decomp i= 0 : dec_cook_H_1
	106-HA-come_add_salt() => [129-HP-add_salt()-0.0] : dec_come_add_salt_close
	129-HP-add_salt()-0.0 => [129-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 107-HA-come_pour_pasta()
	107-HA-come_pour_pasta() => [130-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [128-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 131-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : dec_cook_H_1
	1-RA-come_clean_counter() => [132-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_H_1: [132-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 133-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
human- Refine agenda with r_beliefs
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 9.0 Flag.E Type.F#7, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#4 next=[]
new_e_flagged_nodes : 
	9.0 Flag.E Type.F#7, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#4 next=[]
e_flagged_nodes :
	4.0 Flag.E Type.I#8, (human add_salt ()) -1> (human add_salt ()) prev=#4 next=[]
	9.0 Flag.E Type.F#7, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#4 next=[]
Ns before check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
Nf = 9.0 Flag.E Type.F#7, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#4 next=[]
Ns after check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	4.0 Flag.E Type.I#8, (human add_salt ()) -1> (human add_salt ()) prev=#4 next=[]

<@> picked node = 4.0 Flag.E Type.I#8, (human add_salt ()) -1> (human add_salt ()) prev=#4 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-26-RP-add_salt()-1.0
||	-21-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-109-HA-get_pasta()
||	-110-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 26-RP-add_salt()-1.0
decomp i= 0 : dec_cook_H_2
	26-RP-add_salt()-1.0 => [26-RP-add_salt()-1.0] : dec_cook_R_1
[92m	already done[0m
	continue with next_task popped from agenda 21-RA-come_turn_on_pot_fire()
	21-RA-come_turn_on_pot_fire() => [134-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 0
refinement = 
[
	dec_cook_H_2: [134-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 135-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-109-HA-get_pasta()
||	-110-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 109-HA-get_pasta()
decomp i= 0 : dec_cook_H_2
	109-HA-get_pasta() => [136-HP-move('kitchen',)-0.0 - 137-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 109-HA-get_pasta()
decomp i= 0 : dec_cook_H_2
	109-HA-get_pasta() => [138-HP-move('kitchen',)-0.0 - 139-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [136-HP-move('kitchen',)-0.0 - 137-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed pot_fire <- on
applied refinement = 
next actions:
	- 140-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-137-HP-grab_pasta()-0.0
||	-110-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : dec_cook_H_2
	1-RA-come_clean_counter() => [141-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_H_2: [141-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 142-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-137-HP-grab_pasta()-0.0
||	-110-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
Task to refine: 137-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
human- Refine agenda with r_beliefs
Task to refine: 137-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [137-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 143-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-110-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 144-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-110-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
Task to refine: 110-HA-come_pour_pasta()
decomp i= 0 : dec_cook_H_2
	110-HA-come_pour_pasta() => [145-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 110-HA-come_pour_pasta()
decomp i= 0 : dec_cook_H_2
	110-HA-come_pour_pasta() => [146-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [145-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 147-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 9.0 Flag.E Type.F#8, (human add_salt ()) -7> (human pour_pasta ()) prev=#4 next=[]
new_e_flagged_nodes : 
	9.0 Flag.E Type.F#8, (human add_salt ()) -7> (human pour_pasta ()) prev=#4 next=[]
e_flagged_nodes :
	9.0 Flag.E Type.F#8, (human add_salt ()) -7> (human pour_pasta ()) prev=#4 next=[]
Ns before check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
Nf = 9.0 Flag.E Type.F#8, (human add_salt ()) -7> (human pour_pasta ()) prev=#4 next=[]
Ns after check = 6.0 Flag.S Type.F#2, (robot add_salt ()) -6> (human pour_pasta ()) prev=#1 next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 136ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 136ms
Non relevant div:
True
Plans:
19-RP-COM_ALIGN['pot_fire-off']-3.0 26-RP-add_salt()-1.0 44-RP-COM_ALIGN['salt_added-True']-3.0 53-HP-move('kitchen',)-1.0 56-RP-turn_on_pot_fire()-1.0 57-HP-grab_pasta()-1.0 59-RP-clean_counter()-1.0 62-HP-pour_pasta()-1.0/19-RP-COM_ALIGN['pot_fire-off']-3.0 27-RP-turn_on_pot_fire()-1.0 79-HP-move('kitchen',)-1.0 82-RP-add_salt()-1.0 83-HP-grab_pasta()-1.0 85-RP-clean_counter()-1.0 90-HP-pour_pasta()-1.0/19-RP-COM_ALIGN['pot_fire-off']-3.0 27-RP-turn_on_pot_fire()-1.0 80-HP-add_salt()-1.0 93-RP-clean_counter()-1.0 98-HP-move('kitchen',)-1.0 99-RP-IDLE[]-0.0 100-HP-grab_pasta()-1.0 101-RP-IDLE[]-0.0 104-HP-pour_pasta()-1.0/19-RP-COM_ALIGN['pot_fire-off']-3.0 54-RP-DELAY[]-0.0 121-HP-move('kitchen',)-1.0 123-RP-add_salt()-1.0 124-HP-grab_pasta()-1.0 126-RP-turn_on_pot_fire()-1.0 131-HP-pour_pasta()-1.0 133-RP-clean_counter()-1.0/19-RP-COM_ALIGN['pot_fire-off']-3.0 54-RP-DELAY[]-0.0 122-HP-add_salt()-1.0 135-RP-turn_on_pot_fire()-1.0 140-HP-move('kitchen',)-1.0 142-RP-clean_counter()-1.0 143-HP-grab_pasta()-1.0 144-RP-IDLE[]-0.0 147-HP-pour_pasta()-1.0
best_traces:
[62-HP-pour_pasta()-1.0, 90-HP-pour_pasta()-1.0, 104-HP-pour_pasta()-1.0, 133-RP-clean_counter()-1.0, 147-HP-pour_pasta()-1.0]
best_metrics:
(1.3333333333333333, 0.0, 6.833333333333333, 0.3333333333333333)
