RUN N=398 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = room 	ObsType.OBS 	loc=room
|| robot_init.at_human = room 	ObsType.OBS 	loc=room
|| robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
|| robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
|| robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
|| human_init.at_robot = room
|| human_init.at_human = room
|| human_init.at_pasta = room
|| human_init.salt_added = True
|| human_init.pot_fire = on
|| human_init.counter_clean = False
|________________________________________________________________________
Start first exploration
first node = 0.0 Flag.E Type.I#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = room 	ObsType.OBS 	loc=room
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = room
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-cook()
decomp i= 0 : origin
	multiple decs for 0-RA-cook():  dec_cook_R_1  dec_cook_R_2 
	0-RA-cook() => [4-RA-come_add_salt() - 5-RA-come_turn_on_pot_fire()] : dec_cook_R_1
		decomposition 1 : dec_cook_R_2 created : [6-RA-come_turn_on_pot_fire(), 7-RA-come_add_salt()]
	4-RA-come_add_salt() => [8-RP-move('kitchen',)-0.0 - 9-RP-add_salt()-0.0] : dec_come_add_salt_far
	end 0
decomp i= 1 : dec_cook_R_2
	6-RA-come_turn_on_pot_fire() => [10-RP-move('kitchen',)-0.0 - 11-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_far
	end 1
refinement = 
[
	dec_cook_R_1: [8-RP-move('kitchen',)-0.0 - 9-RP-add_salt()-0.0 - 5-RA-come_turn_on_pot_fire()]
	dec_cook_R_2: [10-RP-move('kitchen',)-0.0 - 11-RP-turn_on_pot_fire()-0.0 - 7-RA-come_add_salt()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 12-RP-move('kitchen',)-1.0
	- 13-RP-move('kitchen',)-1.0

=> end explo
node explored = 0.0 Flag.F Type.R#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[#2 #3]
new_e_flagged_nodes : 
	1.0 Flag.E Type.I#2, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#1 next=[]
e_flagged_nodes :
	1.0 Flag.E Type.I#2, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#1 next=[]
Ns before check = None
Nf = None
Ns after check = None
e_flagged_nodes after check solution:
	1.0 Flag.E Type.I#2, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#1 next=[]
	1.0 Flag.E Type.I#3, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#1 next=[]

<@> picked node = 1.0 Flag.E Type.I#2, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#1 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-9-RP-add_salt()-0.0
||	-5-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = room
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_1
	2-HA-cook() => [14-HA-get_pasta() - 15-HA-come_pour_pasta()] : dec_cook_H_1
	14-HA-get_pasta() => [16-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_1
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [17-HA-get_pasta() - 18-HA-come_add_salt() - 19-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [20-HP-add_salt()-0.0, 21-HA-get_pasta(), 22-HA-come_pour_pasta()]
	17-HA-get_pasta() => [23-HP-move('kitchen',)-0.0 - 24-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
Different number of decomposition
NEED of belief alignment!

# UPDATE belief divergences
	at_robot:None: H=room R=kitchen
	at_pasta:None: H=room R=kitchen
	salt_added:None: H=True R=False
	pot_fire:None: H=on R=off

Testing with 1 relevant divergence
divergence tested = at_robot:None: H=room R=kitchen
Task to refine: 2-HA-cook()
decomp i= 0 : 
	2-HA-cook() => [25-HA-get_pasta() - 26-HA-come_pour_pasta()] : dec_cook_H_1
	25-HA-get_pasta() => [27-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
Different number of decomposition
	divergence isn't relevant
divergence tested = at_pasta:None: H=room R=kitchen
Task to refine: 2-HA-cook()
decomp i= 0 : 
	2-HA-cook() => [28-HA-get_pasta() - 29-HA-come_pour_pasta()] : dec_cook_H_1
	28-HA-get_pasta() => [30-HP-move('kitchen',)-0.0 - 31-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
Different number of decomposition
	divergence isn't relevant
divergence tested = salt_added:None: H=True R=False
Task to refine: 2-HA-cook()
decomp i= 0 : 
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [32-HA-get_pasta() - 33-HA-come_add_salt() - 34-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [35-HP-add_salt()-0.0, 36-HA-get_pasta(), 37-HA-come_pour_pasta()]
	32-HA-get_pasta() => [38-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
Not same number of subtasks
	divergence isn't relevant
divergence tested = pot_fire:None: H=on R=off
Task to refine: 2-HA-cook()
decomp i= 0 : 
	2-HA-cook() => [39-HA-get_pasta() - 40-HA-come_pour_pasta()] : dec_cook_H_1
	39-HA-get_pasta() => [41-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
Different number of decomposition
	divergence isn't relevant
Testing with 2 relevant divergences
divs tested :
at_robot:None: H=room R=kitchen
at_pasta:None: H=room R=kitchen
Task to refine: 2-HA-cook()
decomp i= 0 : 
	2-HA-cook() => [42-HA-get_pasta() - 43-HA-come_pour_pasta()] : dec_cook_H_1
	42-HA-get_pasta() => [44-HP-move('kitchen',)-0.0 - 45-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
Different number of decomposition
	divergences aren't relevant
divs tested :
at_robot:None: H=room R=kitchen
salt_added:None: H=True R=False
Task to refine: 2-HA-cook()
decomp i= 0 : 
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [46-HA-get_pasta() - 47-HA-come_add_salt() - 48-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [49-HP-add_salt()-0.0, 50-HA-get_pasta(), 51-HA-come_pour_pasta()]
	46-HA-get_pasta() => [52-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
Not same number of subtasks
	divergences aren't relevant
divs tested :
at_robot:None: H=room R=kitchen
pot_fire:None: H=on R=off
Task to refine: 2-HA-cook()
decomp i= 0 : 
	2-HA-cook() => [53-HA-get_pasta() - 54-HA-come_pour_pasta()] : dec_cook_H_1
	53-HA-get_pasta() => [55-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
Different number of decomposition
	divergences aren't relevant
divs tested :
at_pasta:None: H=room R=kitchen
salt_added:None: H=True R=False
Task to refine: 2-HA-cook()
decomp i= 0 : 
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [56-HA-get_pasta() - 57-HA-come_add_salt() - 58-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [59-HP-add_salt()-0.0, 60-HA-get_pasta(), 61-HA-come_pour_pasta()]
	56-HA-get_pasta() => [62-HP-move('kitchen',)-0.0 - 63-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
	divergences are relevant!
Relevant divergences to correct : 	at_pasta:None: H=room R=kitchen
	salt_added:None: H=True R=False

COM: com action added = 64-RP-COM_ALIGN['at_pasta-kitchen', 'salt_added-False']-3.0
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_1
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [65-HA-get_pasta() - 66-HA-come_add_salt() - 67-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [68-HP-add_salt()-0.0, 69-HA-get_pasta(), 70-HA-come_pour_pasta()]
	65-HA-get_pasta() => [71-HP-move('kitchen',)-0.0 - 72-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_1
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [73-HA-get_pasta() - 74-HA-come_add_salt() - 75-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [76-HP-add_salt()-0.0, 77-HA-get_pasta(), 78-HA-come_pour_pasta()]
	73-HA-get_pasta() => [79-HP-move('kitchen',)-0.0 - 80-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [71-HP-move('kitchen',)-0.0 - 72-HP-grab_pasta()-0.0 - 66-HA-come_add_salt() - 67-HA-come_pour_pasta()]
	dec_cook_H_2: [68-HP-add_salt()-0.0 - 69-HA-get_pasta() - 70-HA-come_pour_pasta()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed at_robot <- kitchen
SA: human assessed pot_fire <- off
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 81-HP-move('kitchen',)-1.0
	- 82-HP-add_salt()-1.0

=> end explo
node explored = 1.0 Flag.F Type.H#2, (robot move ('kitchen',)) -1> (robot COM_ALIGN ['at_pasta-kitchen', 'salt_added-False']) prev=#1 next=[#4 #5]
new_e_flagged_nodes : 
	2.0 Flag.E Type.I#4, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#2 next=[]
	2.0 Flag.E Type.I#5, (human add_salt ()) -1> (human add_salt ()) prev=#2 next=[]
e_flagged_nodes :
	1.0 Flag.E Type.I#3, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#1 next=[]
	2.0 Flag.E Type.I#4, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#2 next=[]
	2.0 Flag.E Type.I#5, (human add_salt ()) -1> (human add_salt ()) prev=#2 next=[]
Ns before check = None
Nf = None
Ns after check = None
e_flagged_nodes after check solution:
	1.0 Flag.E Type.I#3, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#1 next=[]
	2.0 Flag.E Type.I#4, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#2 next=[]
	2.0 Flag.E Type.I#5, (human add_salt ()) -1> (human add_salt ()) prev=#2 next=[]

<@> picked node = 1.0 Flag.E Type.I#3, (robot move ('kitchen',)) -1> (robot move ('kitchen',)) prev=#1 next=[]
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-11-RP-turn_on_pot_fire()-0.0
||	-7-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = room
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_2
	2-HA-cook() => [83-HA-get_pasta() - 84-HA-come_pour_pasta()] : dec_cook_H_1
	83-HA-get_pasta() => [85-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_2
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [86-HA-get_pasta() - 87-HA-come_add_salt() - 88-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [89-HP-add_salt()-0.0, 90-HA-get_pasta(), 91-HA-come_pour_pasta()]
	86-HA-get_pasta() => [92-HP-move('kitchen',)-0.0 - 93-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
Different number of decomposition
NEED of belief alignment!

# UPDATE belief divergences
	at_robot:None: H=room R=kitchen
	at_pasta:None: H=room R=kitchen
	salt_added:None: H=True R=False
	pot_fire:None: H=on R=off

Testing with 1 relevant divergence
divergence tested = at_robot:None: H=room R=kitchen
Task to refine: 2-HA-cook()
decomp i= 0 : 
	2-HA-cook() => [94-HA-get_pasta() - 95-HA-come_pour_pasta()] : dec_cook_H_1
	94-HA-get_pasta() => [96-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
Different number of decomposition
	divergence isn't relevant
divergence tested = at_pasta:None: H=room R=kitchen
Task to refine: 2-HA-cook()
decomp i= 0 : 
	2-HA-cook() => [97-HA-get_pasta() - 98-HA-come_pour_pasta()] : dec_cook_H_1
	97-HA-get_pasta() => [99-HP-move('kitchen',)-0.0 - 100-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
Different number of decomposition
	divergence isn't relevant
divergence tested = salt_added:None: H=True R=False
Task to refine: 2-HA-cook()
decomp i= 0 : 
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [101-HA-get_pasta() - 102-HA-come_add_salt() - 103-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [104-HP-add_salt()-0.0, 105-HA-get_pasta(), 106-HA-come_pour_pasta()]
	101-HA-get_pasta() => [107-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
Not same number of subtasks
	divergence isn't relevant
divergence tested = pot_fire:None: H=on R=off
Task to refine: 2-HA-cook()
decomp i= 0 : 
	2-HA-cook() => [108-HA-get_pasta() - 109-HA-come_pour_pasta()] : dec_cook_H_1
	108-HA-get_pasta() => [110-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
Different number of decomposition
	divergence isn't relevant
Testing with 2 relevant divergences
divs tested :
at_robot:None: H=room R=kitchen
at_pasta:None: H=room R=kitchen
Task to refine: 2-HA-cook()
decomp i= 0 : 
	2-HA-cook() => [111-HA-get_pasta() - 112-HA-come_pour_pasta()] : dec_cook_H_1
	111-HA-get_pasta() => [113-HP-move('kitchen',)-0.0 - 114-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
Different number of decomposition
	divergences aren't relevant
divs tested :
at_robot:None: H=room R=kitchen
salt_added:None: H=True R=False
Task to refine: 2-HA-cook()
decomp i= 0 : 
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [115-HA-get_pasta() - 116-HA-come_add_salt() - 117-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [118-HP-add_salt()-0.0, 119-HA-get_pasta(), 120-HA-come_pour_pasta()]
	115-HA-get_pasta() => [121-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
Not same number of subtasks
	divergences aren't relevant
divs tested :
at_robot:None: H=room R=kitchen
pot_fire:None: H=on R=off
Task to refine: 2-HA-cook()
decomp i= 0 : 
	2-HA-cook() => [122-HA-get_pasta() - 123-HA-come_pour_pasta()] : dec_cook_H_1
	122-HA-get_pasta() => [124-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
Different number of decomposition
	divergences aren't relevant
divs tested :
at_pasta:None: H=room R=kitchen
salt_added:None: H=True R=False
Task to refine: 2-HA-cook()
decomp i= 0 : 
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [125-HA-get_pasta() - 126-HA-come_add_salt() - 127-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [128-HP-add_salt()-0.0, 129-HA-get_pasta(), 130-HA-come_pour_pasta()]
	125-HA-get_pasta() => [131-HP-move('kitchen',)-0.0 - 132-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
	divergences are relevant!
Relevant divergences to correct : 	at_pasta:None: H=room R=kitchen
	salt_added:None: H=True R=False

COM: com action added = 133-RP-COM_ALIGN['at_pasta-kitchen', 'salt_added-False']-3.0
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_2
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [134-HA-get_pasta() - 135-HA-come_add_salt() - 136-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [137-HP-add_salt()-0.0, 138-HA-get_pasta(), 139-HA-come_pour_pasta()]
	134-HA-get_pasta() => [140-HP-move('kitchen',)-0.0 - 141-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : dec_cook_R_2
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [142-HA-get_pasta() - 143-HA-come_add_salt() - 144-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [145-HP-add_salt()-0.0, 146-HA-get_pasta(), 147-HA-come_pour_pasta()]
	142-HA-get_pasta() => [148-HP-move('kitchen',)-0.0 - 149-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [140-HP-move('kitchen',)-0.0 - 141-HP-grab_pasta()-0.0 - 135-HA-come_add_salt() - 136-HA-come_pour_pasta()]
	dec_cook_H_2: [137-HP-add_salt()-0.0 - 138-HA-get_pasta() - 139-HA-come_pour_pasta()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed at_robot <- kitchen
SA: human assessed pot_fire <- off
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 150-HP-move('kitchen',)-1.0
	- 151-HP-add_salt()-1.0

=> end explo
node explored = 1.0 Flag.F Type.H#3, (robot move ('kitchen',)) -1> (robot COM_ALIGN ['at_pasta-kitchen', 'salt_added-False']) prev=#1 next=[#6 #7]
new_e_flagged_nodes : 
	2.0 Flag.E Type.I#6, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#3 next=[]
	2.0 Flag.E Type.I#7, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]
e_flagged_nodes :
	2.0 Flag.E Type.I#4, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#2 next=[]
	2.0 Flag.E Type.I#5, (human add_salt ()) -1> (human add_salt ()) prev=#2 next=[]
	2.0 Flag.E Type.I#6, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#3 next=[]
	2.0 Flag.E Type.I#7, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]
Ns before check = None
Nf = None
Ns after check = None
e_flagged_nodes after check solution:
	2.0 Flag.E Type.I#4, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#2 next=[]
	2.0 Flag.E Type.I#5, (human add_salt ()) -1> (human add_salt ()) prev=#2 next=[]
	2.0 Flag.E Type.I#6, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#3 next=[]
	2.0 Flag.E Type.I#7, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]

<@> picked node = 2.0 Flag.E Type.I#4, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#2 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-9-RP-add_salt()-0.0
||	-5-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-72-HP-grab_pasta()-0.0
||	-66-HA-come_add_salt()
||	-67-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 9-RP-add_salt()-0.0
decomp i= 0 : dec_cook_H_1
	end 0
refinement = 
[
	dec_cook_H_1: [9-RP-add_salt()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 152-RP-add_salt()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-5-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-72-HP-grab_pasta()-0.0
||	-66-HA-come_add_salt()
||	-67-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 72-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_1
	end 0
human- Refine agenda with r_beliefs
Task to refine: 72-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_1
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [72-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 153-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-5-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-66-HA-come_add_salt()
||	-67-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 5-RA-come_turn_on_pot_fire()
decomp i= 0 : dec_cook_H_1
	5-RA-come_turn_on_pot_fire() => [154-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 0
refinement = 
[
	dec_cook_H_1: [154-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 155-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-66-HA-come_add_salt()
||	-67-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 66-HA-come_add_salt()
decomp i= 0 : dec_cook_H_1
	66-HA-come_add_salt() => [156-HP-add_salt()-0.0] : dec_come_add_salt_close
	156-HP-add_salt()-0.0 => [156-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 67-HA-come_pour_pasta()
	67-HA-come_pour_pasta() => [157-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 66-HA-come_add_salt()
decomp i= 0 : dec_cook_H_1
	66-HA-come_add_salt() => [158-HP-add_salt()-0.0] : dec_come_add_salt_close
	158-HP-add_salt()-0.0 => [158-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 67-HA-come_pour_pasta()
	67-HA-come_pour_pasta() => [159-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [157-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 160-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : dec_cook_H_1
	1-RA-come_clean_counter() => [161-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_H_1: [161-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 162-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
human- Refine agenda with r_beliefs
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 7.0 Flag.E Type.F#4, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#2 next=[]
new_e_flagged_nodes : 
	7.0 Flag.E Type.F#4, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#2 next=[]
e_flagged_nodes :
	2.0 Flag.E Type.I#5, (human add_salt ()) -1> (human add_salt ()) prev=#2 next=[]
	2.0 Flag.E Type.I#6, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#3 next=[]
	2.0 Flag.E Type.I#7, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]
	7.0 Flag.E Type.F#4, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#2 next=[]
Ns before check = None
Nf = 7.0 Flag.E Type.F#4, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#2 next=[]
new Ns!
Ns after check = 7.0 Flag.S Type.F#4, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#2 next=[]
e_flagged_nodes after check solution:
	2.0 Flag.E Type.I#5, (human add_salt ()) -1> (human add_salt ()) prev=#2 next=[]
	2.0 Flag.E Type.I#6, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#3 next=[]
	2.0 Flag.E Type.I#7, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]

<@> picked node = 2.0 Flag.E Type.I#5, (human add_salt ()) -1> (human add_salt ()) prev=#2 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-9-RP-add_salt()-0.0
||	-5-RA-come_turn_on_pot_fire()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-69-HA-get_pasta()
||	-70-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = room
||human_init.at_human = room
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 9-RP-add_salt()-0.0
decomp i= 0 : dec_cook_H_2
	9-RP-add_salt()-0.0 => [9-RP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 5-RA-come_turn_on_pot_fire()
	5-RA-come_turn_on_pot_fire() => [163-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 0
refinement = 
[
	dec_cook_H_2: [163-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
[93malready done[0m
[93m163-RP-turn_on_pot_fire()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs

# UPDATE belief divergences
	at_robot:None: H=room R=kitchen
	pot_fire:None: H=on R=off

Testing with 1 relevant divergence
divergence tested = at_robot:None: H=room R=kitchen
Task to refine: 69-HA-get_pasta()
decomp i= 0 : 
	69-HA-get_pasta() => [164-HP-move('kitchen',)-0.0 - 165-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
[93malready done[0m
[93m163-RP-turn_on_pot_fire()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
	divergence isn't relevant
divergence tested = pot_fire:None: H=on R=off
Task to refine: 69-HA-get_pasta()
decomp i= 0 : 
	69-HA-get_pasta() => [166-HP-move('kitchen',)-0.0 - 167-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
[93m163-RP-turn_on_pot_fire()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
	divergence isn't relevant
Testing with 2 relevant divergences
divs tested :
at_robot:None: H=room R=kitchen
pot_fire:None: H=on R=off
Task to refine: 69-HA-get_pasta()
decomp i= 0 : 
	69-HA-get_pasta() => [168-HP-move('kitchen',)-0.0 - 169-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
	divergences are relevant!
Relevant divergences to correct : 	at_robot:None: H=room R=kitchen
	pot_fire:None: H=on R=off

COM: com action added eff = 170-RP-COM_ALIGN['at_robot-kitchen', 'pot_fire-off']-3.0
robot- Refine agenda
Task to refine: 9-RP-add_salt()-0.0
decomp i= 0 : dec_cook_H_2
	9-RP-add_salt()-0.0 => [9-RP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 5-RA-come_turn_on_pot_fire()
	5-RA-come_turn_on_pot_fire() => [171-RP-turn_on_pot_fire()-0.0] : dec_come_turn_pot_fire_on_close
	end 0
refinement = 
[
	dec_cook_H_2: [171-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 172-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-69-HA-get_pasta()
||	-70-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 69-HA-get_pasta()
decomp i= 0 : dec_cook_H_2
	69-HA-get_pasta() => [173-HP-move('kitchen',)-0.0 - 174-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 69-HA-get_pasta()
decomp i= 0 : dec_cook_H_2
	69-HA-get_pasta() => [175-HP-move('kitchen',)-0.0 - 176-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [173-HP-move('kitchen',)-0.0 - 174-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed pot_fire <- on
applied refinement = 
next actions:
	- 177-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-174-HP-grab_pasta()-0.0
||	-70-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : dec_cook_H_2
	1-RA-come_clean_counter() => [178-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_H_2: [178-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 179-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-174-HP-grab_pasta()-0.0
||	-70-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
Task to refine: 174-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
human- Refine agenda with r_beliefs
Task to refine: 174-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [174-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 180-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-70-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 181-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-70-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
Task to refine: 70-HA-come_pour_pasta()
decomp i= 0 : dec_cook_H_2
	70-HA-come_pour_pasta() => [182-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 70-HA-come_pour_pasta()
decomp i= 0 : dec_cook_H_2
	70-HA-come_pour_pasta() => [183-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [182-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 184-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 7.0 Flag.E Type.F#5, (human add_salt ()) -7> (human pour_pasta ()) prev=#2 next=[]
new_e_flagged_nodes : 
	7.0 Flag.E Type.F#5, (human add_salt ()) -7> (human pour_pasta ()) prev=#2 next=[]
e_flagged_nodes :
	2.0 Flag.E Type.I#6, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#3 next=[]
	2.0 Flag.E Type.I#7, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]
	7.0 Flag.E Type.F#5, (human add_salt ()) -7> (human pour_pasta ()) prev=#2 next=[]
Ns before check = 7.0 Flag.S Type.F#4, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#2 next=[]
Nf = 7.0 Flag.E Type.F#5, (human add_salt ()) -7> (human pour_pasta ()) prev=#2 next=[]
Ns after check = 7.0 Flag.S Type.F#4, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#2 next=[]
e_flagged_nodes after check solution:
	2.0 Flag.E Type.I#6, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#3 next=[]
	2.0 Flag.E Type.I#7, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]

<@> picked node = 2.0 Flag.E Type.I#6, (human move ('kitchen',)) -1> (human move ('kitchen',)) prev=#3 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-11-RP-turn_on_pot_fire()-0.0
||	-7-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-141-HP-grab_pasta()-0.0
||	-135-HA-come_add_salt()
||	-136-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 11-RP-turn_on_pot_fire()-0.0
decomp i= 0 : dec_cook_H_1
	end 0
refinement = 
[
	dec_cook_H_1: [11-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 185-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-7-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-141-HP-grab_pasta()-0.0
||	-135-HA-come_add_salt()
||	-136-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = False
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 141-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_1
	end 0
human- Refine agenda with r_beliefs
Task to refine: 141-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_1
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [141-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 186-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-7-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-135-HA-come_add_salt()
||	-136-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = False 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = False
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 7-RA-come_add_salt()
decomp i= 0 : dec_cook_H_1
	7-RA-come_add_salt() => [187-RP-add_salt()-0.0] : dec_come_add_salt_close
	end 0
refinement = 
[
	dec_cook_H_1: [187-RP-add_salt()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 188-RP-add_salt()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-135-HA-come_add_salt()
||	-136-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 135-HA-come_add_salt()
decomp i= 0 : dec_cook_H_1
	135-HA-come_add_salt() => [189-HP-add_salt()-0.0] : dec_come_add_salt_close
	189-HP-add_salt()-0.0 => [189-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 136-HA-come_pour_pasta()
	136-HA-come_pour_pasta() => [190-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 135-HA-come_add_salt()
decomp i= 0 : dec_cook_H_1
	135-HA-come_add_salt() => [191-HP-add_salt()-0.0] : dec_come_add_salt_close
	191-HP-add_salt()-0.0 => [191-HP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 136-HA-come_pour_pasta()
	136-HA-come_pour_pasta() => [192-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [190-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 193-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-1-RA-come_clean_counter()
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 1-RA-come_clean_counter()
decomp i= 0 : dec_cook_H_1
	1-RA-come_clean_counter() => [194-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_H_1: [194-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 195-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
human- Refine agenda with r_beliefs
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_1: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 7.0 Flag.E Type.F#6, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#3 next=[]
new_e_flagged_nodes : 
	7.0 Flag.E Type.F#6, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#3 next=[]
e_flagged_nodes :
	2.0 Flag.E Type.I#7, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]
	7.0 Flag.E Type.F#6, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#3 next=[]
Ns before check = 7.0 Flag.S Type.F#4, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#2 next=[]
Nf = 7.0 Flag.E Type.F#6, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#3 next=[]
Ns after check = 7.0 Flag.S Type.F#4, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#2 next=[]
e_flagged_nodes after check solution:
	2.0 Flag.E Type.I#7, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]

<@> picked node = 2.0 Flag.E Type.I#7, (human add_salt ()) -1> (human add_salt ()) prev=#3 next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-11-RP-turn_on_pot_fire()-0.0
||	-7-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-138-HA-get_pasta()
||	-139-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = off 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = room
||human_init.at_human = room
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 11-RP-turn_on_pot_fire()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
refinement = 
[
	dec_cook_H_2: [11-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
[93malready done[0m
[93m11-RP-turn_on_pot_fire()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs

# UPDATE belief divergences
	at_robot:None: H=room R=kitchen
	pot_fire:None: H=on R=off

Testing with 1 relevant divergence
divergence tested = at_robot:None: H=room R=kitchen
Task to refine: 138-HA-get_pasta()
decomp i= 0 : 
	138-HA-get_pasta() => [196-HP-move('kitchen',)-0.0 - 197-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
[93malready done[0m
[93m11-RP-turn_on_pot_fire()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
	divergence isn't relevant
divergence tested = pot_fire:None: H=on R=off
Task to refine: 138-HA-get_pasta()
decomp i= 0 : 
	138-HA-get_pasta() => [198-HP-move('kitchen',)-0.0 - 199-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
[93m11-RP-turn_on_pot_fire()-0.0 not applicable[0m
Operator isn't applicable with only one of the beliefs
	divergence isn't relevant
Testing with 2 relevant divergences
divs tested :
at_robot:None: H=room R=kitchen
pot_fire:None: H=on R=off
Task to refine: 138-HA-get_pasta()
decomp i= 0 : 
	138-HA-get_pasta() => [200-HP-move('kitchen',)-0.0 - 201-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
	divergences are relevant!
Relevant divergences to correct : 	at_robot:None: H=room R=kitchen
	pot_fire:None: H=on R=off

COM: com action added eff = 202-RP-COM_ALIGN['at_robot-kitchen', 'pot_fire-off']-3.0
robot- Refine agenda
Task to refine: 11-RP-turn_on_pot_fire()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
refinement = 
[
	dec_cook_H_2: [11-RP-turn_on_pot_fire()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 203-RP-turn_on_pot_fire()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-7-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-138-HA-get_pasta()
||	-139-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 138-HA-get_pasta()
decomp i= 0 : dec_cook_H_2
	138-HA-get_pasta() => [204-HP-move('kitchen',)-0.0 - 205-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 138-HA-get_pasta()
decomp i= 0 : dec_cook_H_2
	138-HA-get_pasta() => [206-HP-move('kitchen',)-0.0 - 207-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [204-HP-move('kitchen',)-0.0 - 205-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed pot_fire <- on
applied refinement = 
next actions:
	- 208-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-7-RA-come_add_salt()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-205-HP-grab_pasta()-0.0
||	-139-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 7-RA-come_add_salt()
decomp i= 0 : dec_cook_H_2
	7-RA-come_add_salt() => [209-RP-add_salt()-0.0] : dec_come_add_salt_close
	209-RP-add_salt()-0.0 => [209-RP-add_salt()-0.0] : 
[92m	already done[0m
	continue with next_task popped from agenda 1-RA-come_clean_counter()
	1-RA-come_clean_counter() => [210-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	dec_cook_H_2: [210-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 211-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-205-HP-grab_pasta()-0.0
||	-139-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
Task to refine: 205-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
human- Refine agenda with r_beliefs
Task to refine: 205-HP-grab_pasta()-0.0
decomp i= 0 : dec_cook_H_2
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [205-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 212-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-139-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 213-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-139-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
human- Refine agenda
Task to refine: 139-HA-come_pour_pasta()
decomp i= 0 : dec_cook_H_2
	139-HA-come_pour_pasta() => [214-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 139-HA-come_pour_pasta()
decomp i= 0 : dec_cook_H_2
	139-HA-come_pour_pasta() => [215-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	dec_cook_H_2: [214-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 216-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = True
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	dec_cook_H_2: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 7.0 Flag.E Type.F#7, (human add_salt ()) -7> (human pour_pasta ()) prev=#3 next=[]
new_e_flagged_nodes : 
	7.0 Flag.E Type.F#7, (human add_salt ()) -7> (human pour_pasta ()) prev=#3 next=[]
e_flagged_nodes :
	7.0 Flag.E Type.F#7, (human add_salt ()) -7> (human pour_pasta ()) prev=#3 next=[]
Ns before check = 7.0 Flag.S Type.F#4, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#2 next=[]
Nf = 7.0 Flag.E Type.F#7, (human add_salt ()) -7> (human pour_pasta ()) prev=#3 next=[]
Ns after check = 7.0 Flag.S Type.F#4, (human move ('kitchen',)) -6> (robot clean_counter ()) prev=#2 next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 184ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 184ms
Non relevant div:
False
Plans:
12-RP-move('kitchen',)-1.0 64-RP-COM_ALIGN['at_pasta-kitchen', 'salt_added-False']-3.0 81-HP-move('kitchen',)-1.0 152-RP-add_salt()-1.0 153-HP-grab_pasta()-1.0 155-RP-turn_on_pot_fire()-1.0 160-HP-pour_pasta()-1.0 162-RP-clean_counter()-1.0/12-RP-move('kitchen',)-1.0 64-RP-COM_ALIGN['at_pasta-kitchen', 'salt_added-False']-3.0 82-HP-add_salt()-1.0 170-RP-COM_ALIGN['at_robot-kitchen', 'pot_fire-off']-3.0 172-RP-turn_on_pot_fire()-1.0 177-HP-move('kitchen',)-1.0 179-RP-clean_counter()-1.0 180-HP-grab_pasta()-1.0 181-RP-IDLE[]-0.0 184-HP-pour_pasta()-1.0/13-RP-move('kitchen',)-1.0 133-RP-COM_ALIGN['at_pasta-kitchen', 'salt_added-False']-3.0 150-HP-move('kitchen',)-1.0 185-RP-turn_on_pot_fire()-1.0 186-HP-grab_pasta()-1.0 188-RP-add_salt()-1.0 193-HP-pour_pasta()-1.0 195-RP-clean_counter()-1.0/13-RP-move('kitchen',)-1.0 133-RP-COM_ALIGN['at_pasta-kitchen', 'salt_added-False']-3.0 151-HP-add_salt()-1.0 202-RP-COM_ALIGN['at_robot-kitchen', 'pot_fire-off']-3.0 203-RP-turn_on_pot_fire()-1.0 208-HP-move('kitchen',)-1.0 211-RP-clean_counter()-1.0 212-HP-grab_pasta()-1.0 213-RP-IDLE[]-0.0 216-HP-pour_pasta()-1.0
best_traces:
[162-RP-clean_counter()-1.0, 184-HP-pour_pasta()-1.0]
best_metrics:
(1.5, 0.0, 7.5, 0.0)
