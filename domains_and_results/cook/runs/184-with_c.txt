RUN N=184 With=True
INITIAL STATES
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
|| robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.at_human = room 	ObsType.OBS 	loc=room
|| robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
|| robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
|| robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
|| robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
|| human_init.at_robot = kitchen
|| human_init.at_human = room
|| human_init.at_pasta = room
|| human_init.salt_added = False
|| human_init.pot_fire = off
|| human_init.counter_clean = False
|________________________________________________________________________
Start first exploration
first node = 0.0 Flag.E Type.I#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[]

<@> picked node = 0.0 Flag.E Type.I#1, (human BEGIN []) -1> (human BEGIN []) prev=None next=[]
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
||	-0-RA-cook()
||	-1-RA-come_clean_counter()
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = False 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
Task to refine: 0-RA-cook()
decomp i= 0 : origin
	0-RA-cook() => [] : dec_cook_R_1
[92m	refines into nothing[0m
	continue with next_task popped from agenda 1-RA-come_clean_counter()
	1-RA-come_clean_counter() => [4-RP-clean_counter()-0.0] : dec_come_clean_close
	end 0
refinement = 
[
	origin: [4-RP-clean_counter()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 5-RP-clean_counter()-1.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-2-HA-cook()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = room 	ObsType.OBS 	loc=room
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = room
||human_init.at_pasta = room
||human_init.salt_added = False
||human_init.pot_fire = off
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : origin
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [6-HA-get_pasta() - 7-HA-come_add_salt() - 8-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [9-HP-add_salt()-0.0, 10-HA-get_pasta(), 11-HA-come_pour_pasta()]
	6-HA-get_pasta() => [12-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : origin
	2-HA-cook() => [13-HA-get_pasta() - 14-HA-come_pour_pasta()] : dec_cook_H_1
	13-HA-get_pasta() => [15-HP-move('kitchen',)-0.0 - 16-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
Different number of decomposition
NEED of belief alignment!

# UPDATE belief divergences
	at_pasta:None: H=room R=kitchen
	salt_added:None: H=False R=True
	pot_fire:None: H=off R=on
	counter_clean:None: H=False R=True

Testing with 1 relevant divergence
divergence tested = at_pasta:None: H=room R=kitchen
Task to refine: 2-HA-cook()
decomp i= 0 : 
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [17-HA-get_pasta() - 18-HA-come_add_salt() - 19-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [20-HP-add_salt()-0.0, 21-HA-get_pasta(), 22-HA-come_pour_pasta()]
	17-HA-get_pasta() => [23-HP-move('kitchen',)-0.0 - 24-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
Different number of decomposition
	divergence isn't relevant
divergence tested = salt_added:None: H=False R=True
Task to refine: 2-HA-cook()
decomp i= 0 : 
	2-HA-cook() => [25-HA-get_pasta() - 26-HA-come_pour_pasta()] : dec_cook_H_1
	25-HA-get_pasta() => [27-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
Not same number of subtasks
	divergence isn't relevant
divergence tested = pot_fire:None: H=off R=on
Task to refine: 2-HA-cook()
decomp i= 0 : 
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [28-HA-get_pasta() - 29-HA-come_add_salt() - 30-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [31-HP-add_salt()-0.0, 32-HA-get_pasta(), 33-HA-come_pour_pasta()]
	28-HA-get_pasta() => [34-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
Different number of decomposition
	divergence isn't relevant
divergence tested = counter_clean:None: H=False R=True
Task to refine: 2-HA-cook()
decomp i= 0 : 
	multiple decs for 2-HA-cook():  dec_cook_H_1  dec_cook_H_2 
	2-HA-cook() => [35-HA-get_pasta() - 36-HA-come_add_salt() - 37-HA-come_pour_pasta()] : dec_cook_H_1
		decomposition 1 : dec_cook_H_2 created : [38-HP-add_salt()-0.0, 39-HA-get_pasta(), 40-HA-come_pour_pasta()]
	35-HA-get_pasta() => [41-HP-grab_pasta()-0.0] : dec_get_pasta_close
	end 0
decomp i= 1 : dec_cook_H_2
	end 1
Different number of decomposition
	divergence isn't relevant
Testing with 2 relevant divergences
divs tested :
at_pasta:None: H=room R=kitchen
salt_added:None: H=False R=True
Task to refine: 2-HA-cook()
decomp i= 0 : 
	2-HA-cook() => [42-HA-get_pasta() - 43-HA-come_pour_pasta()] : dec_cook_H_1
	42-HA-get_pasta() => [44-HP-move('kitchen',)-0.0 - 45-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
	divergences are relevant!
Relevant divergences to correct : 	at_pasta:None: H=room R=kitchen
	salt_added:None: H=False R=True

COM: com action added = 46-RP-COM_ALIGN['at_pasta-kitchen', 'salt_added-True']-3.0
human- Refine agenda
Task to refine: 2-HA-cook()
decomp i= 0 : origin
	2-HA-cook() => [47-HA-get_pasta() - 48-HA-come_pour_pasta()] : dec_cook_H_1
	47-HA-get_pasta() => [49-HP-move('kitchen',)-0.0 - 50-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
human- Refine agenda with r_beliefs
Task to refine: 2-HA-cook()
decomp i= 0 : origin
	2-HA-cook() => [51-HA-get_pasta() - 52-HA-come_pour_pasta()] : dec_cook_H_1
	51-HA-get_pasta() => [53-HP-move('kitchen',)-0.0 - 54-HP-grab_pasta()-0.0] : dec_get_pasta_far
	end 0
No relevant belief divergence for refinement
refinement = 
[
	origin: [49-HP-move('kitchen',)-0.0 - 50-HP-grab_pasta()-0.0 - 48-HA-come_pour_pasta()]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
SA: human assessed pot_fire <- on
applied refinement = 
next actions:
	- 55-HP-move('kitchen',)-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-50-HP-grab_pasta()-0.0
||	-48-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	origin: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 56-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-50-HP-grab_pasta()-0.0
||	-48-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 50-HP-grab_pasta()-0.0
decomp i= 0 : origin
	end 0
human- Refine agenda with r_beliefs
Task to refine: 50-HP-grab_pasta()-0.0
decomp i= 0 : origin
	end 0
No relevant belief divergence for refinement
refinement = 
[
	origin: [50-HP-grab_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 57-HP-grab_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-48-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	origin: [DecompType.AGENDA_EMPTY]
]
AGENDA_EMPTY => IDLE added
applied refinement = 
next actions:
	- 58-RP-IDLE[]-0.0

continue ..
=> H step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
||	-48-HA-come_pour_pasta()
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = human 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = human
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
human- Refine agenda
Task to refine: 48-HA-come_pour_pasta()
decomp i= 0 : origin
	48-HA-come_pour_pasta() => [59-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
human- Refine agenda with r_beliefs
Task to refine: 48-HA-come_pour_pasta()
decomp i= 0 : origin
	48-HA-come_pour_pasta() => [60-HP-pour_pasta()-0.0] : dec_come_pour_pasta_close
	end 0
No relevant belief divergence for refinement
refinement = 
[
	origin: [59-HP-pour_pasta()-0.0]
]
Decomp OK
apply acting agent
applicable with other's beliefs
Update other's beliefs
applied refinement = 
next actions:
	- 61-HP-pour_pasta()-1.0

continue ..
=> R step explo ==================================================================================
__________________________________________________________________________
| AGENDA robot =
| AGENDA human =
|------------------------------------------------------------------------
| STATE robot =
||robot_init.at_robot = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_human = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.at_pasta = kitchen 	ObsType.OBS 	loc=kitchen
||robot_init.salt_added = True 	ObsType.INF 	loc=kitchen
||robot_init.pot_fire = on 	ObsType.OBS 	loc=kitchen
||robot_init.counter_clean = True 	ObsType.INF 	loc=kichen
| STATE human =
||human_init.at_robot = kitchen
||human_init.at_human = kitchen
||human_init.at_pasta = kitchen
||human_init.salt_added = True
||human_init.pot_fire = on
||human_init.counter_clean = False
|________________________________________________________________________
robot- Refine agenda
refinement = 
[
	origin: [DecompType.BOTH_AGENDAS_EMPTY]
]
BOTH_AGENDAS_EMPTY
applied refinement = 
next actions:

=> end explo
node explored = 4.0 Flag.E Type.F#1, (human BEGIN []) -7> (human pour_pasta ()) prev=None next=[]
new_e_flagged_nodes : 
	4.0 Flag.E Type.F#1, (human BEGIN []) -7> (human pour_pasta ()) prev=None next=[]
e_flagged_nodes :
	4.0 Flag.E Type.F#1, (human BEGIN []) -7> (human pour_pasta ()) prev=None next=[]
Ns before check = None
Nf = 4.0 Flag.E Type.F#1, (human BEGIN []) -7> (human pour_pasta ()) prev=None next=[]
new Ns!
Ns after check = 4.0 Flag.S Type.F#1, (human BEGIN []) -7> (human pour_pasta ()) prev=None next=[]
e_flagged_nodes after check solution:
	=> time spent first exploration = 34ms
Start refining u nodes
	=> time spent refining = 0ms
Total duration = 34ms
Non relevant div:
True
Plans:
5-RP-clean_counter()-1.0 46-RP-COM_ALIGN['at_pasta-kitchen', 'salt_added-True']-3.0 55-HP-move('kitchen',)-1.0 56-RP-IDLE[]-0.0 57-HP-grab_pasta()-1.0 58-RP-IDLE[]-0.0 61-HP-pour_pasta()-1.0
best_traces:
[61-HP-pour_pasta()-1.0]
best_metrics:
(1, 0, 6, 0)
